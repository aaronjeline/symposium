(()=>{"use strict";var e={96:(e,t)=>{var n;Object.defineProperty(t,"__esModule",{value:!0}),t.replaceCodePoint=t.fromCodePoint=void 0;var r=new Map([[0,65533],[128,8364],[130,8218],[131,402],[132,8222],[133,8230],[134,8224],[135,8225],[136,710],[137,8240],[138,352],[139,8249],[140,338],[142,381],[145,8216],[146,8217],[147,8220],[148,8221],[149,8226],[150,8211],[151,8212],[152,732],[153,8482],[154,353],[155,8250],[156,339],[158,382],[159,376]]);function o(e){var t;return e>=55296&&e<=57343||e>1114111?65533:null!==(t=r.get(e))&&void 0!==t?t:e}t.fromCodePoint=null!==(n=String.fromCodePoint)&&void 0!==n?n:function(e){var t="";return e>65535&&(e-=65536,t+=String.fromCharCode(e>>>10&1023|55296),e=56320|1023&e),t+String.fromCharCode(e)},t.replaceCodePoint=o,t.default=function(e){return(0,t.fromCodePoint)(o(e))}},182:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.openSymposiumUrl=t.resolveSymposiumUrlPlacement=void 0;const r=n(398),o=n(928),i=n(835),s=n(528);async function a(e,t,n,a){try{const l=(0,i.parseSymposiumUrl)(e);if(!l)return r.window.showErrorMessage(`Invalid dialectic URL: ${e}`),null;t.appendLine(`Resolving dialectic URL: ${e}`),t.appendLine(`Parsed components: ${JSON.stringify(l,null,2)}`);let u=l.path;n&&!o.isAbsolute(l.path)&&(u=o.resolve(n.fsPath,l.path)),t.appendLine(`Resolved file path: ${u}`);const d=r.Uri.file(u),h=await r.workspace.openTextDocument(d);let p=1,m=1;if(l.regex)try{const n=await(0,s.searchInFile)(d,{regexPattern:l.regex});if(t.appendLine(`Search results: ${(0,s.formatSearchResults)(n)}`),0===n.length)r.window.showWarningMessage(`Regex pattern "${l.regex}" not found in ${l.path}`),l.line&&(p=l.line.startLine,m=l.line.startColumn||1);else{const t=`link:${e}`,o=a?.get(t);if(o?.isPlaced&&o.chosenLocation){const e=o.chosenLocation;p=e.line,m=e.column}else if(1===n.length){const e=n[0];p=e.line,m=e.column,a?.set(t,{isPlaced:!0,chosenLocation:e,wasAmbiguous:!1})}else{const e=await async function(e,t,n){const o=e.map((t,n)=>({label:`Line ${t.line}: ${t.text.trim()}`,description:`$(search) Match ${n+1} of ${e.length}`,detail:`Column ${t.column}`,result:t})),i=r.window.createQuickPick();i.title=`Multiple matches for "${t}"`,i.placeholder="Select the match you want to navigate to (preview updates as you navigate)",i.items=o,i.canSelectMany=!1;const s=r.window.createTextEditorDecorationType({backgroundColor:new r.ThemeColor("editor.findMatchHighlightBackground"),border:"1px solid",borderColor:new r.ThemeColor("editor.findMatchBorder")});return new Promise(e=>{let t=null,o=!1;i.onDidChangeActive(e=>{if(e.length>0){t=e[0];const o=e[0].result;r.window.showTextDocument(n,{selection:new r.Range(o.line-1,o.matchStart,o.line-1,o.matchEnd),preview:!0,preserveFocus:!0,viewColumn:r.ViewColumn.One}).then(e=>{const t=c(n,void 0,o.line,o.column,o);t.length>0&&(e.setDecorations(s,t),setTimeout(()=>{e&&!e.document.isClosed&&e.setDecorations(s,[])},2e3))},e=>{console.log(`Preview failed: ${e}`)})}}),i.onDidAccept(()=>{if(o)return;const n=t||i.selectedItems[0];if(n&&n.result){const t=n.result;return o=!0,i.dispose(),s.dispose(),void e(t)}o=!0,i.dispose(),s.dispose(),e(void 0)}),i.onDidHide(()=>{o||(o=!0,i.dispose(),s.dispose(),e(void 0))}),i.show()})}(n,l.regex,h);if(!e)return null;p=e.line,m=e.column,a?.set(t,{isPlaced:!0,chosenLocation:e,wasAmbiguous:!0})}}}catch(e){return t.appendLine(`Error during regex search: ${e}`),r.window.showErrorMessage(`Error searching for pattern "${l.regex}": ${e}`),null}else l.line&&(p=l.line.startLine,m=l.line.startColumn||1);return{range:new r.Range(p-1,m-1,p-1,m-1),document:h}}catch(e){return t.appendLine(`Error resolving dialectic URL: ${e}`),r.window.showErrorMessage(`Failed to resolve dialectic URL: ${e}`),null}}function c(e,t,n,o,i){if(i){const e=Math.max(0,i.line-1),t=i.matchStart,n=i.matchEnd;return[new r.Range(e,t,e,n)]}if(t){const n=[],o=Math.max(0,t.startLine-1),i=t.endLine?Math.max(0,t.endLine-1):o;for(let t=o;t<=Math.min(i,e.lineCount-1);t++){const o=e.lineAt(t);n.push(new r.Range(t,0,t,o.text.length))}return n}if(n){const t=Math.max(0,n-1);if(t<e.lineCount){const n=e.lineAt(t);return[new r.Range(t,0,t,n.text.length)]}}return[]}t.resolveSymposiumUrlPlacement=a,t.openSymposiumUrl=async function(e,t,n,o){const i=await a(e,t,n,o);if(!i)return;const{range:s,document:l}=i,u=await r.window.showTextDocument(l,{selection:s,viewColumn:r.ViewColumn.One}),d=c(l,void 0,s.start.line+1,s.start.character,void 0);if(d.length>0){const e=r.window.createTextEditorDecorationType({backgroundColor:new r.ThemeColor("editor.findMatchHighlightBackground"),border:"1px solid",borderColor:new r.ThemeColor("editor.findMatchBorder")});u.setDecorations(e,d),setTimeout(()=>{e.dispose()},3e3)}t.appendLine(`Successfully navigated to ${l.fileName}:${s.start.line+1}:${s.start.character+1}`)}},278:e=>{e.exports=require("net")},317:e=>{e.exports=require("child_process")},383:(e,t,n)=>{var r=n(778),o=n(492),i=n(730),s=n(814),a=n(444);function c(e){var t=Object.create(null);return e&&Object.keys(e).forEach(function(n){if("default"!==n){var r=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,r.get?r:{enumerable:!0,get:function(){return e[n]}})}}),t.default=e,Object.freeze(t)}var l=c(r),u=c(o);function d(e){return"[object String]"===function(e){return Object.prototype.toString.call(e)}(e)}const h=Object.prototype.hasOwnProperty;function p(e){return Array.prototype.slice.call(arguments,1).forEach(function(t){if(t){if("object"!=typeof t)throw new TypeError(t+"must be object");Object.keys(t).forEach(function(n){e[n]=t[n]})}}),e}function m(e,t,n){return[].concat(e.slice(0,t),n,e.slice(t+1))}function f(e){return!(e>=55296&&e<=57343||e>=64976&&e<=65007||!(65535&~e&&65534!=(65535&e))||e>=0&&e<=8||11===e||e>=14&&e<=31||e>=127&&e<=159||e>1114111)}function g(e){if(e>65535){const t=55296+((e-=65536)>>10),n=56320+(1023&e);return String.fromCharCode(t,n)}return String.fromCharCode(e)}const b=/\\([!"#$%&'()*+,\-./:;<=>?@[\\\]^_`{|}~])/g,y=new RegExp(b.source+"|"+/&([a-z#][a-z0-9]{1,31});/gi.source,"gi"),C=/^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i;function k(e){return e.indexOf("\\")<0&&e.indexOf("&")<0?e:e.replace(y,function(e,t,n){return t||function(e,t){if(35===t.charCodeAt(0)&&C.test(t)){const n="x"===t[1].toLowerCase()?parseInt(t.slice(2),16):parseInt(t.slice(1),10);return f(n)?g(n):e}const n=i.decodeHTML(e);return n!==e?n:e}(e,n)})}const v=/[&<>"]/,_=/[&<>"]/g,w={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;"};function D(e){return w[e]}function E(e){return v.test(e)?e.replace(_,D):e}const A=/[.?*+^$[\]\\(){}|-]/g;function x(e){switch(e){case 9:case 32:return!0}return!1}function F(e){if(e>=8192&&e<=8202)return!0;switch(e){case 9:case 10:case 11:case 12:case 13:case 32:case 160:case 5760:case 8239:case 8287:case 12288:return!0}return!1}function S(e){return u.P.test(e)||u.S.test(e)}function T(e){switch(e){case 33:case 34:case 35:case 36:case 37:case 38:case 39:case 40:case 41:case 42:case 43:case 44:case 45:case 46:case 47:case 58:case 59:case 60:case 61:case 62:case 63:case 64:case 91:case 92:case 93:case 94:case 95:case 96:case 123:case 124:case 125:case 126:return!0;default:return!1}}function L(e){return e=e.trim().replace(/\s+/g," "),"Ṿ"==="ẞ".toLowerCase()&&(e=e.replace(/ẞ/g,"ß")),e.toLowerCase().toUpperCase()}const P={mdurl:l,ucmicro:u};var R=Object.freeze({__proto__:null,arrayReplaceAt:m,assign:p,escapeHtml:E,escapeRE:function(e){return e.replace(A,"\\$&")},fromCodePoint:g,has:function(e,t){return h.call(e,t)},isMdAsciiPunct:T,isPunctChar:S,isSpace:x,isString:d,isValidEntityCode:f,isWhiteSpace:F,lib:P,normalizeReference:L,unescapeAll:k,unescapeMd:function(e){return e.indexOf("\\")<0?e:e.replace(b,"$1")}}),M=Object.freeze({__proto__:null,parseLinkDestination:function(e,t,n){let r,o=t;const i={ok:!1,pos:0,str:""};if(60===e.charCodeAt(o)){for(o++;o<n;){if(r=e.charCodeAt(o),10===r)return i;if(60===r)return i;if(62===r)return i.pos=o+1,i.str=k(e.slice(t+1,o)),i.ok=!0,i;92===r&&o+1<n?o+=2:o++}return i}let s=0;for(;o<n&&(r=e.charCodeAt(o),32!==r)&&!(r<32||127===r);)if(92===r&&o+1<n){if(32===e.charCodeAt(o+1))break;o+=2}else{if(40===r&&(s++,s>32))return i;if(41===r){if(0===s)break;s--}o++}return t===o||0!==s||(i.str=k(e.slice(t,o)),i.pos=o,i.ok=!0),i},parseLinkLabel:function(e,t,n){let r,o,i,s;const a=e.posMax,c=e.pos;for(e.pos=t+1,r=1;e.pos<a;){if(i=e.src.charCodeAt(e.pos),93===i&&(r--,0===r)){o=!0;break}if(s=e.pos,e.md.inline.skipToken(e),91===i)if(s===e.pos-1)r++;else if(n)return e.pos=c,-1}let l=-1;return o&&(l=e.pos),e.pos=c,l},parseLinkTitle:function(e,t,n,r){let o,i=t;const s={ok:!1,can_continue:!1,pos:0,str:"",marker:0};if(r)s.str=r.str,s.marker=r.marker;else{if(i>=n)return s;let r=e.charCodeAt(i);if(34!==r&&39!==r&&40!==r)return s;t++,i++,40===r&&(r=41),s.marker=r}for(;i<n;){if(o=e.charCodeAt(i),o===s.marker)return s.pos=i+1,s.str+=k(e.slice(t,i)),s.ok=!0,s;if(40===o&&41===s.marker)return s;92===o&&i+1<n&&i++,i++}return s.can_continue=!0,s.str+=k(e.slice(t,i)),s}});const I={};function $(){this.rules=p({},I)}function N(){this.__rules__=[],this.__cache__=null}function H(e,t,n){this.type=e,this.tag=t,this.attrs=null,this.map=null,this.nesting=n,this.level=0,this.children=null,this.content="",this.markup="",this.info="",this.meta=null,this.block=!1,this.hidden=!1}function U(e,t,n){this.src=e,this.env=n,this.tokens=[],this.inlineMode=!1,this.md=t}I.code_inline=function(e,t,n,r,o){const i=e[t];return"<code"+o.renderAttrs(i)+">"+E(i.content)+"</code>"},I.code_block=function(e,t,n,r,o){const i=e[t];return"<pre"+o.renderAttrs(i)+"><code>"+E(e[t].content)+"</code></pre>\n"},I.fence=function(e,t,n,r,o){const i=e[t],s=i.info?k(i.info).trim():"";let a,c="",l="";if(s){const e=s.split(/(\s+)/g);c=e[0],l=e.slice(2).join("")}if(a=n.highlight&&n.highlight(i.content,c,l)||E(i.content),0===a.indexOf("<pre"))return a+"\n";if(s){const e=i.attrIndex("class"),t=i.attrs?i.attrs.slice():[];e<0?t.push(["class",n.langPrefix+c]):(t[e]=t[e].slice(),t[e][1]+=" "+n.langPrefix+c);const r={attrs:t};return`<pre><code${o.renderAttrs(r)}>${a}</code></pre>\n`}return`<pre><code${o.renderAttrs(i)}>${a}</code></pre>\n`},I.image=function(e,t,n,r,o){const i=e[t];return i.attrs[i.attrIndex("alt")][1]=o.renderInlineAsText(i.children,n,r),o.renderToken(e,t,n)},I.hardbreak=function(e,t,n){return n.xhtmlOut?"<br />\n":"<br>\n"},I.softbreak=function(e,t,n){return n.breaks?n.xhtmlOut?"<br />\n":"<br>\n":"\n"},I.text=function(e,t){return E(e[t].content)},I.html_block=function(e,t){return e[t].content},I.html_inline=function(e,t){return e[t].content},$.prototype.renderAttrs=function(e){let t,n,r;if(!e.attrs)return"";for(r="",t=0,n=e.attrs.length;t<n;t++)r+=" "+E(e.attrs[t][0])+'="'+E(e.attrs[t][1])+'"';return r},$.prototype.renderToken=function(e,t,n){const r=e[t];let o="";if(r.hidden)return"";r.block&&-1!==r.nesting&&t&&e[t-1].hidden&&(o+="\n"),o+=(-1===r.nesting?"</":"<")+r.tag,o+=this.renderAttrs(r),0===r.nesting&&n.xhtmlOut&&(o+=" /");let i=!1;if(r.block&&(i=!0,1===r.nesting&&t+1<e.length)){const n=e[t+1];("inline"===n.type||n.hidden||-1===n.nesting&&n.tag===r.tag)&&(i=!1)}return o+=i?">\n":">",o},$.prototype.renderInline=function(e,t,n){let r="";const o=this.rules;for(let i=0,s=e.length;i<s;i++){const s=e[i].type;void 0!==o[s]?r+=o[s](e,i,t,n,this):r+=this.renderToken(e,i,t)}return r},$.prototype.renderInlineAsText=function(e,t,n){let r="";for(let o=0,i=e.length;o<i;o++)switch(e[o].type){case"text":case"html_inline":case"html_block":r+=e[o].content;break;case"image":r+=this.renderInlineAsText(e[o].children,t,n);break;case"softbreak":case"hardbreak":r+="\n"}return r},$.prototype.render=function(e,t,n){let r="";const o=this.rules;for(let i=0,s=e.length;i<s;i++){const s=e[i].type;"inline"===s?r+=this.renderInline(e[i].children,t,n):void 0!==o[s]?r+=o[s](e,i,t,n,this):r+=this.renderToken(e,i,t,n)}return r},N.prototype.__find__=function(e){for(let t=0;t<this.__rules__.length;t++)if(this.__rules__[t].name===e)return t;return-1},N.prototype.__compile__=function(){const e=this,t=[""];e.__rules__.forEach(function(e){e.enabled&&e.alt.forEach(function(e){t.indexOf(e)<0&&t.push(e)})}),e.__cache__={},t.forEach(function(t){e.__cache__[t]=[],e.__rules__.forEach(function(n){n.enabled&&(t&&n.alt.indexOf(t)<0||e.__cache__[t].push(n.fn))})})},N.prototype.at=function(e,t,n){const r=this.__find__(e),o=n||{};if(-1===r)throw new Error("Parser rule not found: "+e);this.__rules__[r].fn=t,this.__rules__[r].alt=o.alt||[],this.__cache__=null},N.prototype.before=function(e,t,n,r){const o=this.__find__(e),i=r||{};if(-1===o)throw new Error("Parser rule not found: "+e);this.__rules__.splice(o,0,{name:t,enabled:!0,fn:n,alt:i.alt||[]}),this.__cache__=null},N.prototype.after=function(e,t,n,r){const o=this.__find__(e),i=r||{};if(-1===o)throw new Error("Parser rule not found: "+e);this.__rules__.splice(o+1,0,{name:t,enabled:!0,fn:n,alt:i.alt||[]}),this.__cache__=null},N.prototype.push=function(e,t,n){const r=n||{};this.__rules__.push({name:e,enabled:!0,fn:t,alt:r.alt||[]}),this.__cache__=null},N.prototype.enable=function(e,t){Array.isArray(e)||(e=[e]);const n=[];return e.forEach(function(e){const r=this.__find__(e);if(r<0){if(t)return;throw new Error("Rules manager: invalid rule name "+e)}this.__rules__[r].enabled=!0,n.push(e)},this),this.__cache__=null,n},N.prototype.enableOnly=function(e,t){Array.isArray(e)||(e=[e]),this.__rules__.forEach(function(e){e.enabled=!1}),this.enable(e,t)},N.prototype.disable=function(e,t){Array.isArray(e)||(e=[e]);const n=[];return e.forEach(function(e){const r=this.__find__(e);if(r<0){if(t)return;throw new Error("Rules manager: invalid rule name "+e)}this.__rules__[r].enabled=!1,n.push(e)},this),this.__cache__=null,n},N.prototype.getRules=function(e){return null===this.__cache__&&this.__compile__(),this.__cache__[e]||[]},H.prototype.attrIndex=function(e){if(!this.attrs)return-1;const t=this.attrs;for(let n=0,r=t.length;n<r;n++)if(t[n][0]===e)return n;return-1},H.prototype.attrPush=function(e){this.attrs?this.attrs.push(e):this.attrs=[e]},H.prototype.attrSet=function(e,t){const n=this.attrIndex(e),r=[e,t];n<0?this.attrPush(r):this.attrs[n]=r},H.prototype.attrGet=function(e){const t=this.attrIndex(e);let n=null;return t>=0&&(n=this.attrs[t][1]),n},H.prototype.attrJoin=function(e,t){const n=this.attrIndex(e);n<0?this.attrPush([e,t]):this.attrs[n][1]=this.attrs[n][1]+" "+t},U.prototype.Token=H;const O=/\r\n?|\n/g,q=/\0/g;function B(e){return/^<a[>\s]/i.test(e)}function z(e){return/^<\/a\s*>/i.test(e)}const W=/\+-|\.\.|\?\?\?\?|!!!!|,,|--/,j=/\((c|tm|r)\)/i,V=/\((c|tm|r)\)/gi,G={c:"©",r:"®",tm:"™"};function K(e,t){return G[t.toLowerCase()]}function Z(e){let t=0;for(let n=e.length-1;n>=0;n--){const r=e[n];"text"!==r.type||t||(r.content=r.content.replace(V,K)),"link_open"===r.type&&"auto"===r.info&&t--,"link_close"===r.type&&"auto"===r.info&&t++}}function Y(e){let t=0;for(let n=e.length-1;n>=0;n--){const r=e[n];"text"!==r.type||t||W.test(r.content)&&(r.content=r.content.replace(/\+-/g,"±").replace(/\.{2,}/g,"…").replace(/([?!])…/g,"$1..").replace(/([?!]){4,}/g,"$1$1$1").replace(/,{2,}/g,",").replace(/(^|[^-])---(?=[^-]|$)/gm,"$1—").replace(/(^|\s)--(?=\s|$)/gm,"$1–").replace(/(^|[^-\s])--(?=[^-\s]|$)/gm,"$1–")),"link_open"===r.type&&"auto"===r.info&&t--,"link_close"===r.type&&"auto"===r.info&&t++}}const J=/['"]/,X=/['"]/g;function Q(e,t,n){return e.slice(0,t)+n+e.slice(t+1)}function ee(e,t){let n;const r=[];for(let o=0;o<e.length;o++){const i=e[o],s=e[o].level;for(n=r.length-1;n>=0&&!(r[n].level<=s);n--);if(r.length=n+1,"text"!==i.type)continue;let a=i.content,c=0,l=a.length;e:for(;c<l;){X.lastIndex=c;const u=X.exec(a);if(!u)break;let d=!0,h=!0;c=u.index+1;const p="'"===u[0];let m=32;if(u.index-1>=0)m=a.charCodeAt(u.index-1);else for(n=o-1;n>=0&&"softbreak"!==e[n].type&&"hardbreak"!==e[n].type;n--)if(e[n].content){m=e[n].content.charCodeAt(e[n].content.length-1);break}let f=32;if(c<l)f=a.charCodeAt(c);else for(n=o+1;n<e.length&&"softbreak"!==e[n].type&&"hardbreak"!==e[n].type;n++)if(e[n].content){f=e[n].content.charCodeAt(0);break}const g=T(m)||S(String.fromCharCode(m)),b=T(f)||S(String.fromCharCode(f)),y=F(m),C=F(f);if(C?d=!1:b&&(y||g||(d=!1)),y?h=!1:g&&(C||b||(h=!1)),34===f&&'"'===u[0]&&m>=48&&m<=57&&(h=d=!1),d&&h&&(d=g,h=b),d||h){if(h)for(n=r.length-1;n>=0;n--){let d=r[n];if(r[n].level<s)break;if(d.single===p&&r[n].level===s){let s,h;d=r[n],p?(s=t.md.options.quotes[2],h=t.md.options.quotes[3]):(s=t.md.options.quotes[0],h=t.md.options.quotes[1]),i.content=Q(i.content,u.index,h),e[d.token].content=Q(e[d.token].content,d.pos,s),c+=h.length-1,d.token===o&&(c+=s.length-1),a=i.content,l=a.length,r.length=n;continue e}}d?r.push({token:o,pos:u.index,single:p,level:s}):h&&p&&(i.content=Q(i.content,u.index,"’"))}else p&&(i.content=Q(i.content,u.index,"’"))}}}const te=[["normalize",function(e){let t;t=e.src.replace(O,"\n"),t=t.replace(q,"�"),e.src=t}],["block",function(e){let t;e.inlineMode?(t=new e.Token("inline","",0),t.content=e.src,t.map=[0,1],t.children=[],e.tokens.push(t)):e.md.block.parse(e.src,e.md,e.env,e.tokens)}],["inline",function(e){const t=e.tokens;for(let n=0,r=t.length;n<r;n++){const r=t[n];"inline"===r.type&&e.md.inline.parse(r.content,e.md,e.env,r.children)}}],["linkify",function(e){const t=e.tokens;if(e.md.options.linkify)for(let n=0,r=t.length;n<r;n++){if("inline"!==t[n].type||!e.md.linkify.pretest(t[n].content))continue;let r=t[n].children,o=0;for(let i=r.length-1;i>=0;i--){const s=r[i];if("link_close"!==s.type){if("html_inline"===s.type&&(B(s.content)&&o>0&&o--,z(s.content)&&o++),!(o>0)&&"text"===s.type&&e.md.linkify.test(s.content)){const o=s.content;let a=e.md.linkify.match(o);const c=[];let l=s.level,u=0;a.length>0&&0===a[0].index&&i>0&&"text_special"===r[i-1].type&&(a=a.slice(1));for(let t=0;t<a.length;t++){const n=a[t].url,r=e.md.normalizeLink(n);if(!e.md.validateLink(r))continue;let i=a[t].text;i=a[t].schema?"mailto:"!==a[t].schema||/^mailto:/i.test(i)?e.md.normalizeLinkText(i):e.md.normalizeLinkText("mailto:"+i).replace(/^mailto:/,""):e.md.normalizeLinkText("http://"+i).replace(/^http:\/\//,"");const s=a[t].index;if(s>u){const t=new e.Token("text","",0);t.content=o.slice(u,s),t.level=l,c.push(t)}const d=new e.Token("link_open","a",1);d.attrs=[["href",r]],d.level=l++,d.markup="linkify",d.info="auto",c.push(d);const h=new e.Token("text","",0);h.content=i,h.level=l,c.push(h);const p=new e.Token("link_close","a",-1);p.level=--l,p.markup="linkify",p.info="auto",c.push(p),u=a[t].lastIndex}if(u<o.length){const t=new e.Token("text","",0);t.content=o.slice(u),t.level=l,c.push(t)}t[n].children=r=m(r,i,c)}}else for(i--;r[i].level!==s.level&&"link_open"!==r[i].type;)i--}}}],["replacements",function(e){let t;if(e.md.options.typographer)for(t=e.tokens.length-1;t>=0;t--)"inline"===e.tokens[t].type&&(j.test(e.tokens[t].content)&&Z(e.tokens[t].children),W.test(e.tokens[t].content)&&Y(e.tokens[t].children))}],["smartquotes",function(e){if(e.md.options.typographer)for(let t=e.tokens.length-1;t>=0;t--)"inline"===e.tokens[t].type&&J.test(e.tokens[t].content)&&ee(e.tokens[t].children,e)}],["text_join",function(e){let t,n;const r=e.tokens,o=r.length;for(let e=0;e<o;e++){if("inline"!==r[e].type)continue;const o=r[e].children,i=o.length;for(t=0;t<i;t++)"text_special"===o[t].type&&(o[t].type="text");for(t=n=0;t<i;t++)"text"===o[t].type&&t+1<i&&"text"===o[t+1].type?o[t+1].content=o[t].content+o[t+1].content:(t!==n&&(o[n]=o[t]),n++);t!==n&&(o.length=n)}}]];function ne(){this.ruler=new N;for(let e=0;e<te.length;e++)this.ruler.push(te[e][0],te[e][1])}function re(e,t,n,r){this.src=e,this.md=t,this.env=n,this.tokens=r,this.bMarks=[],this.eMarks=[],this.tShift=[],this.sCount=[],this.bsCount=[],this.blkIndent=0,this.line=0,this.lineMax=0,this.tight=!1,this.ddIndent=-1,this.listIndent=-1,this.parentType="root",this.level=0;const o=this.src;for(let e=0,t=0,n=0,r=0,i=o.length,s=!1;t<i;t++){const a=o.charCodeAt(t);if(!s){if(x(a)){n++,9===a?r+=4-r%4:r++;continue}s=!0}10!==a&&t!==i-1||(10!==a&&t++,this.bMarks.push(e),this.eMarks.push(t),this.tShift.push(n),this.sCount.push(r),this.bsCount.push(0),s=!1,n=0,r=0,e=t+1)}this.bMarks.push(o.length),this.eMarks.push(o.length),this.tShift.push(0),this.sCount.push(0),this.bsCount.push(0),this.lineMax=this.bMarks.length-1}function oe(e,t){const n=e.bMarks[t]+e.tShift[t],r=e.eMarks[t];return e.src.slice(n,r)}function ie(e){const t=[],n=e.length;let r=0,o=e.charCodeAt(r),i=!1,s=0,a="";for(;r<n;)124===o&&(i?(a+=e.substring(s,r-1),s=r):(t.push(a+e.substring(s,r)),a="",s=r+1)),i=92===o,r++,o=e.charCodeAt(r);return t.push(a+e.substring(s)),t}function se(e,t){const n=e.eMarks[t];let r=e.bMarks[t]+e.tShift[t];const o=e.src.charCodeAt(r++);return 42!==o&&45!==o&&43!==o||r<n&&!x(e.src.charCodeAt(r))?-1:r}function ae(e,t){const n=e.bMarks[t]+e.tShift[t],r=e.eMarks[t];let o=n;if(o+1>=r)return-1;let i=e.src.charCodeAt(o++);if(i<48||i>57)return-1;for(;;){if(o>=r)return-1;if(i=e.src.charCodeAt(o++),!(i>=48&&i<=57)){if(41===i||46===i)break;return-1}if(o-n>=10)return-1}return o<r&&(i=e.src.charCodeAt(o),!x(i))?-1:o}ne.prototype.process=function(e){const t=this.ruler.getRules("");for(let n=0,r=t.length;n<r;n++)t[n](e)},ne.prototype.State=U,re.prototype.push=function(e,t,n){const r=new H(e,t,n);return r.block=!0,n<0&&this.level--,r.level=this.level,n>0&&this.level++,this.tokens.push(r),r},re.prototype.isEmpty=function(e){return this.bMarks[e]+this.tShift[e]>=this.eMarks[e]},re.prototype.skipEmptyLines=function(e){for(let t=this.lineMax;e<t&&!(this.bMarks[e]+this.tShift[e]<this.eMarks[e]);e++);return e},re.prototype.skipSpaces=function(e){for(let t=this.src.length;e<t&&x(this.src.charCodeAt(e));e++);return e},re.prototype.skipSpacesBack=function(e,t){if(e<=t)return e;for(;e>t;)if(!x(this.src.charCodeAt(--e)))return e+1;return e},re.prototype.skipChars=function(e,t){for(let n=this.src.length;e<n&&this.src.charCodeAt(e)===t;e++);return e},re.prototype.skipCharsBack=function(e,t,n){if(e<=n)return e;for(;e>n;)if(t!==this.src.charCodeAt(--e))return e+1;return e},re.prototype.getLines=function(e,t,n,r){if(e>=t)return"";const o=new Array(t-e);for(let i=0,s=e;s<t;s++,i++){let e=0;const a=this.bMarks[s];let c,l=a;for(c=s+1<t||r?this.eMarks[s]+1:this.eMarks[s];l<c&&e<n;){const t=this.src.charCodeAt(l);if(x(t))9===t?e+=4-(e+this.bsCount[s])%4:e++;else{if(!(l-a<this.tShift[s]))break;e++}l++}o[i]=e>n?new Array(e-n+1).join(" ")+this.src.slice(l,c):this.src.slice(l,c)}return o.join("")},re.prototype.Token=H;const ce="<[A-Za-z][A-Za-z0-9\\-]*(?:\\s+[a-zA-Z_:][a-zA-Z0-9:._-]*(?:\\s*=\\s*(?:[^\"'=<>`\\x00-\\x20]+|'[^']*'|\"[^\"]*\"))?)*\\s*\\/?>",le="<\\/[A-Za-z][A-Za-z0-9\\-]*\\s*>",ue=new RegExp("^(?:"+ce+"|"+le+"|\x3c!---?>|\x3c!--(?:[^-]|-[^-]|--[^>])*--\x3e|<[?][\\s\\S]*?[?]>|<![A-Za-z][^>]*>|<!\\[CDATA\\[[\\s\\S]*?\\]\\]>)"),de=new RegExp("^(?:"+ce+"|"+le+")"),he=[[/^<(script|pre|style|textarea)(?=(\s|>|$))/i,/<\/(script|pre|style|textarea)>/i,!0],[/^<!--/,/-->/,!0],[/^<\?/,/\?>/,!0],[/^<![A-Z]/,/>/,!0],[/^<!\[CDATA\[/,/\]\]>/,!0],[new RegExp("^</?("+["address","article","aside","base","basefont","blockquote","body","caption","center","col","colgroup","dd","details","dialog","dir","div","dl","dt","fieldset","figcaption","figure","footer","form","frame","frameset","h1","h2","h3","h4","h5","h6","head","header","hr","html","iframe","legend","li","link","main","menu","menuitem","nav","noframes","ol","optgroup","option","p","param","search","section","summary","table","tbody","td","tfoot","th","thead","title","tr","track","ul"].join("|")+")(?=(\\s|/?>|$))","i"),/^$/,!0],[new RegExp(de.source+"\\s*$"),/^$/,!1]],pe=[["table",function(e,t,n,r){if(t+2>n)return!1;let o=t+1;if(e.sCount[o]<e.blkIndent)return!1;if(e.sCount[o]-e.blkIndent>=4)return!1;let i=e.bMarks[o]+e.tShift[o];if(i>=e.eMarks[o])return!1;const s=e.src.charCodeAt(i++);if(124!==s&&45!==s&&58!==s)return!1;if(i>=e.eMarks[o])return!1;const a=e.src.charCodeAt(i++);if(124!==a&&45!==a&&58!==a&&!x(a))return!1;if(45===s&&x(a))return!1;for(;i<e.eMarks[o];){const t=e.src.charCodeAt(i);if(124!==t&&45!==t&&58!==t&&!x(t))return!1;i++}let c=oe(e,t+1),l=c.split("|");const u=[];for(let e=0;e<l.length;e++){const t=l[e].trim();if(!t){if(0===e||e===l.length-1)continue;return!1}if(!/^:?-+:?$/.test(t))return!1;58===t.charCodeAt(t.length-1)?u.push(58===t.charCodeAt(0)?"center":"right"):58===t.charCodeAt(0)?u.push("left"):u.push("")}if(c=oe(e,t).trim(),-1===c.indexOf("|"))return!1;if(e.sCount[t]-e.blkIndent>=4)return!1;l=ie(c),l.length&&""===l[0]&&l.shift(),l.length&&""===l[l.length-1]&&l.pop();const d=l.length;if(0===d||d!==u.length)return!1;if(r)return!0;const h=e.parentType;e.parentType="table";const p=e.md.block.ruler.getRules("blockquote"),m=[t,0];e.push("table_open","table",1).map=m,e.push("thead_open","thead",1).map=[t,t+1],e.push("tr_open","tr",1).map=[t,t+1];for(let t=0;t<l.length;t++){const n=e.push("th_open","th",1);u[t]&&(n.attrs=[["style","text-align:"+u[t]]]);const r=e.push("inline","",0);r.content=l[t].trim(),r.children=[],e.push("th_close","th",-1)}let f;e.push("tr_close","tr",-1),e.push("thead_close","thead",-1);let g=0;for(o=t+2;o<n&&!(e.sCount[o]<e.blkIndent);o++){let r=!1;for(let t=0,i=p.length;t<i;t++)if(p[t](e,o,n,!0)){r=!0;break}if(r)break;if(c=oe(e,o).trim(),!c)break;if(e.sCount[o]-e.blkIndent>=4)break;if(l=ie(c),l.length&&""===l[0]&&l.shift(),l.length&&""===l[l.length-1]&&l.pop(),g+=d-l.length,g>65536)break;o===t+2&&(e.push("tbody_open","tbody",1).map=f=[t+2,0]),e.push("tr_open","tr",1).map=[o,o+1];for(let t=0;t<d;t++){const n=e.push("td_open","td",1);u[t]&&(n.attrs=[["style","text-align:"+u[t]]]);const r=e.push("inline","",0);r.content=l[t]?l[t].trim():"",r.children=[],e.push("td_close","td",-1)}e.push("tr_close","tr",-1)}return f&&(e.push("tbody_close","tbody",-1),f[1]=o),e.push("table_close","table",-1),m[1]=o,e.parentType=h,e.line=o,!0},["paragraph","reference"]],["code",function(e,t,n){if(e.sCount[t]-e.blkIndent<4)return!1;let r=t+1,o=r;for(;r<n;)if(e.isEmpty(r))r++;else{if(!(e.sCount[r]-e.blkIndent>=4))break;r++,o=r}e.line=o;const i=e.push("code_block","code",0);return i.content=e.getLines(t,o,4+e.blkIndent,!1)+"\n",i.map=[t,e.line],!0}],["fence",function(e,t,n,r){let o=e.bMarks[t]+e.tShift[t],i=e.eMarks[t];if(e.sCount[t]-e.blkIndent>=4)return!1;if(o+3>i)return!1;const s=e.src.charCodeAt(o);if(126!==s&&96!==s)return!1;let a=o;o=e.skipChars(o,s);let c=o-a;if(c<3)return!1;const l=e.src.slice(a,o),u=e.src.slice(o,i);if(96===s&&u.indexOf(String.fromCharCode(s))>=0)return!1;if(r)return!0;let d=t,h=!1;for(;!(d++,d>=n||(o=a=e.bMarks[d]+e.tShift[d],i=e.eMarks[d],o<i&&e.sCount[d]<e.blkIndent));)if(e.src.charCodeAt(o)===s&&!(e.sCount[d]-e.blkIndent>=4||(o=e.skipChars(o,s),o-a<c||(o=e.skipSpaces(o),o<i)))){h=!0;break}c=e.sCount[t],e.line=d+(h?1:0);const p=e.push("fence","code",0);return p.info=u,p.content=e.getLines(t+1,d,c,!0),p.markup=l,p.map=[t,e.line],!0},["paragraph","reference","blockquote","list"]],["blockquote",function(e,t,n,r){let o=e.bMarks[t]+e.tShift[t],i=e.eMarks[t];const s=e.lineMax;if(e.sCount[t]-e.blkIndent>=4)return!1;if(62!==e.src.charCodeAt(o))return!1;if(r)return!0;const a=[],c=[],l=[],u=[],d=e.md.block.ruler.getRules("blockquote"),h=e.parentType;e.parentType="blockquote";let p,m=!1;for(p=t;p<n;p++){const t=e.sCount[p]<e.blkIndent;if(o=e.bMarks[p]+e.tShift[p],i=e.eMarks[p],o>=i)break;if(62===e.src.charCodeAt(o++)&&!t){let t,n,r=e.sCount[p]+1;32===e.src.charCodeAt(o)?(o++,r++,n=!1,t=!0):9===e.src.charCodeAt(o)?(t=!0,(e.bsCount[p]+r)%4==3?(o++,r++,n=!1):n=!0):t=!1;let s=r;for(a.push(e.bMarks[p]),e.bMarks[p]=o;o<i;){const t=e.src.charCodeAt(o);if(!x(t))break;9===t?s+=4-(s+e.bsCount[p]+(n?1:0))%4:s++,o++}m=o>=i,c.push(e.bsCount[p]),e.bsCount[p]=e.sCount[p]+1+(t?1:0),l.push(e.sCount[p]),e.sCount[p]=s-r,u.push(e.tShift[p]),e.tShift[p]=o-e.bMarks[p];continue}if(m)break;let r=!1;for(let t=0,o=d.length;t<o;t++)if(d[t](e,p,n,!0)){r=!0;break}if(r){e.lineMax=p,0!==e.blkIndent&&(a.push(e.bMarks[p]),c.push(e.bsCount[p]),u.push(e.tShift[p]),l.push(e.sCount[p]),e.sCount[p]-=e.blkIndent);break}a.push(e.bMarks[p]),c.push(e.bsCount[p]),u.push(e.tShift[p]),l.push(e.sCount[p]),e.sCount[p]=-1}const f=e.blkIndent;e.blkIndent=0;const g=e.push("blockquote_open","blockquote",1);g.markup=">";const b=[t,0];g.map=b,e.md.block.tokenize(e,t,p),e.push("blockquote_close","blockquote",-1).markup=">",e.lineMax=s,e.parentType=h,b[1]=e.line;for(let n=0;n<u.length;n++)e.bMarks[n+t]=a[n],e.tShift[n+t]=u[n],e.sCount[n+t]=l[n],e.bsCount[n+t]=c[n];return e.blkIndent=f,!0},["paragraph","reference","blockquote","list"]],["hr",function(e,t,n,r){const o=e.eMarks[t];if(e.sCount[t]-e.blkIndent>=4)return!1;let i=e.bMarks[t]+e.tShift[t];const s=e.src.charCodeAt(i++);if(42!==s&&45!==s&&95!==s)return!1;let a=1;for(;i<o;){const t=e.src.charCodeAt(i++);if(t!==s&&!x(t))return!1;t===s&&a++}if(a<3)return!1;if(r)return!0;e.line=t+1;const c=e.push("hr","hr",0);return c.map=[t,e.line],c.markup=Array(a+1).join(String.fromCharCode(s)),!0},["paragraph","reference","blockquote","list"]],["list",function(e,t,n,r){let o,i,s,a,c=t,l=!0;if(e.sCount[c]-e.blkIndent>=4)return!1;if(e.listIndent>=0&&e.sCount[c]-e.listIndent>=4&&e.sCount[c]<e.blkIndent)return!1;let u,d,h,p=!1;if(r&&"paragraph"===e.parentType&&e.sCount[c]>=e.blkIndent&&(p=!0),(h=ae(e,c))>=0){if(u=!0,s=e.bMarks[c]+e.tShift[c],d=Number(e.src.slice(s,h-1)),p&&1!==d)return!1}else{if(!((h=se(e,c))>=0))return!1;u=!1}if(p&&e.skipSpaces(h)>=e.eMarks[c])return!1;if(r)return!0;const m=e.src.charCodeAt(h-1),f=e.tokens.length;u?(a=e.push("ordered_list_open","ol",1),1!==d&&(a.attrs=[["start",d]])):a=e.push("bullet_list_open","ul",1);const g=[c,0];a.map=g,a.markup=String.fromCharCode(m);let b=!1;const y=e.md.block.ruler.getRules("list"),C=e.parentType;for(e.parentType="list";c<n;){i=h,o=e.eMarks[c];const t=e.sCount[c]+h-(e.bMarks[c]+e.tShift[c]);let r=t;for(;i<o;){const t=e.src.charCodeAt(i);if(9===t)r+=4-(r+e.bsCount[c])%4;else{if(32!==t)break;r++}i++}const d=i;let p;p=d>=o?1:r-t,p>4&&(p=1);const f=t+p;a=e.push("list_item_open","li",1),a.markup=String.fromCharCode(m);const g=[c,0];a.map=g,u&&(a.info=e.src.slice(s,h-1));const C=e.tight,k=e.tShift[c],v=e.sCount[c],_=e.listIndent;if(e.listIndent=e.blkIndent,e.blkIndent=f,e.tight=!0,e.tShift[c]=d-e.bMarks[c],e.sCount[c]=r,d>=o&&e.isEmpty(c+1)?e.line=Math.min(e.line+2,n):e.md.block.tokenize(e,c,n,!0),e.tight&&!b||(l=!1),b=e.line-c>1&&e.isEmpty(e.line-1),e.blkIndent=e.listIndent,e.listIndent=_,e.tShift[c]=k,e.sCount[c]=v,e.tight=C,a=e.push("list_item_close","li",-1),a.markup=String.fromCharCode(m),c=e.line,g[1]=c,c>=n)break;if(e.sCount[c]<e.blkIndent)break;if(e.sCount[c]-e.blkIndent>=4)break;let w=!1;for(let t=0,r=y.length;t<r;t++)if(y[t](e,c,n,!0)){w=!0;break}if(w)break;if(u){if(h=ae(e,c),h<0)break;s=e.bMarks[c]+e.tShift[c]}else if(h=se(e,c),h<0)break;if(m!==e.src.charCodeAt(h-1))break}return a=u?e.push("ordered_list_close","ol",-1):e.push("bullet_list_close","ul",-1),a.markup=String.fromCharCode(m),g[1]=c,e.line=c,e.parentType=C,l&&function(e,t){const n=e.level+2;for(let r=t+2,o=e.tokens.length-2;r<o;r++)e.tokens[r].level===n&&"paragraph_open"===e.tokens[r].type&&(e.tokens[r+2].hidden=!0,e.tokens[r].hidden=!0,r+=2)}(e,f),!0},["paragraph","reference","blockquote"]],["reference",function(e,t,n,r){let o=e.bMarks[t]+e.tShift[t],i=e.eMarks[t],s=t+1;if(e.sCount[t]-e.blkIndent>=4)return!1;if(91!==e.src.charCodeAt(o))return!1;function a(t){const n=e.lineMax;if(t>=n||e.isEmpty(t))return null;let r=!1;if(e.sCount[t]-e.blkIndent>3&&(r=!0),e.sCount[t]<0&&(r=!0),!r){const r=e.md.block.ruler.getRules("reference"),o=e.parentType;e.parentType="reference";let i=!1;for(let o=0,s=r.length;o<s;o++)if(r[o](e,t,n,!0)){i=!0;break}if(e.parentType=o,i)return null}const o=e.bMarks[t]+e.tShift[t],i=e.eMarks[t];return e.src.slice(o,i+1)}let c=e.src.slice(o,i+1);i=c.length;let l=-1;for(o=1;o<i;o++){const e=c.charCodeAt(o);if(91===e)return!1;if(93===e){l=o;break}if(10===e){const e=a(s);null!==e&&(c+=e,i=c.length,s++)}else if(92===e&&(o++,o<i&&10===c.charCodeAt(o))){const e=a(s);null!==e&&(c+=e,i=c.length,s++)}}if(l<0||58!==c.charCodeAt(l+1))return!1;for(o=l+2;o<i;o++){const e=c.charCodeAt(o);if(10===e){const e=a(s);null!==e&&(c+=e,i=c.length,s++)}else if(!x(e))break}const u=e.md.helpers.parseLinkDestination(c,o,i);if(!u.ok)return!1;const d=e.md.normalizeLink(u.str);if(!e.md.validateLink(d))return!1;o=u.pos;const h=o,p=s,m=o;for(;o<i;o++){const e=c.charCodeAt(o);if(10===e){const e=a(s);null!==e&&(c+=e,i=c.length,s++)}else if(!x(e))break}let f,g=e.md.helpers.parseLinkTitle(c,o,i);for(;g.can_continue;){const t=a(s);if(null===t)break;c+=t,o=i,i=c.length,s++,g=e.md.helpers.parseLinkTitle(c,o,i,g)}for(o<i&&m!==o&&g.ok?(f=g.str,o=g.pos):(f="",o=h,s=p);o<i&&x(c.charCodeAt(o));)o++;if(o<i&&10!==c.charCodeAt(o)&&f)for(f="",o=h,s=p;o<i&&x(c.charCodeAt(o));)o++;if(o<i&&10!==c.charCodeAt(o))return!1;const b=L(c.slice(1,l));return!!b&&(r||(void 0===e.env.references&&(e.env.references={}),void 0===e.env.references[b]&&(e.env.references[b]={title:f,href:d}),e.line=s),!0)}],["html_block",function(e,t,n,r){let o=e.bMarks[t]+e.tShift[t],i=e.eMarks[t];if(e.sCount[t]-e.blkIndent>=4)return!1;if(!e.md.options.html)return!1;if(60!==e.src.charCodeAt(o))return!1;let s=e.src.slice(o,i),a=0;for(;a<he.length&&!he[a][0].test(s);a++);if(a===he.length)return!1;if(r)return he[a][2];let c=t+1;if(!he[a][1].test(s))for(;c<n&&!(e.sCount[c]<e.blkIndent);c++)if(o=e.bMarks[c]+e.tShift[c],i=e.eMarks[c],s=e.src.slice(o,i),he[a][1].test(s)){0!==s.length&&c++;break}e.line=c;const l=e.push("html_block","",0);return l.map=[t,c],l.content=e.getLines(t,c,e.blkIndent,!0),!0},["paragraph","reference","blockquote"]],["heading",function(e,t,n,r){let o=e.bMarks[t]+e.tShift[t],i=e.eMarks[t];if(e.sCount[t]-e.blkIndent>=4)return!1;let s=e.src.charCodeAt(o);if(35!==s||o>=i)return!1;let a=1;for(s=e.src.charCodeAt(++o);35===s&&o<i&&a<=6;)a++,s=e.src.charCodeAt(++o);if(a>6||o<i&&!x(s))return!1;if(r)return!0;i=e.skipSpacesBack(i,o);const c=e.skipCharsBack(i,35,o);c>o&&x(e.src.charCodeAt(c-1))&&(i=c),e.line=t+1;const l=e.push("heading_open","h"+String(a),1);l.markup="########".slice(0,a),l.map=[t,e.line];const u=e.push("inline","",0);return u.content=e.src.slice(o,i).trim(),u.map=[t,e.line],u.children=[],e.push("heading_close","h"+String(a),-1).markup="########".slice(0,a),!0},["paragraph","reference","blockquote"]],["lheading",function(e,t,n){const r=e.md.block.ruler.getRules("paragraph");if(e.sCount[t]-e.blkIndent>=4)return!1;const o=e.parentType;e.parentType="paragraph";let i,s=0,a=t+1;for(;a<n&&!e.isEmpty(a);a++){if(e.sCount[a]-e.blkIndent>3)continue;if(e.sCount[a]>=e.blkIndent){let t=e.bMarks[a]+e.tShift[a];const n=e.eMarks[a];if(t<n&&(i=e.src.charCodeAt(t),(45===i||61===i)&&(t=e.skipChars(t,i),t=e.skipSpaces(t),t>=n))){s=61===i?1:2;break}}if(e.sCount[a]<0)continue;let t=!1;for(let o=0,i=r.length;o<i;o++)if(r[o](e,a,n,!0)){t=!0;break}if(t)break}if(!s)return!1;const c=e.getLines(t,a,e.blkIndent,!1).trim();e.line=a+1;const l=e.push("heading_open","h"+String(s),1);l.markup=String.fromCharCode(i),l.map=[t,e.line];const u=e.push("inline","",0);return u.content=c,u.map=[t,e.line-1],u.children=[],e.push("heading_close","h"+String(s),-1).markup=String.fromCharCode(i),e.parentType=o,!0}],["paragraph",function(e,t,n){const r=e.md.block.ruler.getRules("paragraph"),o=e.parentType;let i=t+1;for(e.parentType="paragraph";i<n&&!e.isEmpty(i);i++){if(e.sCount[i]-e.blkIndent>3)continue;if(e.sCount[i]<0)continue;let t=!1;for(let o=0,s=r.length;o<s;o++)if(r[o](e,i,n,!0)){t=!0;break}if(t)break}const s=e.getLines(t,i,e.blkIndent,!1).trim();e.line=i,e.push("paragraph_open","p",1).map=[t,e.line];const a=e.push("inline","",0);return a.content=s,a.map=[t,e.line],a.children=[],e.push("paragraph_close","p",-1),e.parentType=o,!0}]];function me(){this.ruler=new N;for(let e=0;e<pe.length;e++)this.ruler.push(pe[e][0],pe[e][1],{alt:(pe[e][2]||[]).slice()})}function fe(e,t,n,r){this.src=e,this.env=n,this.md=t,this.tokens=r,this.tokens_meta=Array(r.length),this.pos=0,this.posMax=this.src.length,this.level=0,this.pending="",this.pendingLevel=0,this.cache={},this.delimiters=[],this._prev_delimiters=[],this.backticks={},this.backticksScanned=!1,this.linkLevel=0}function ge(e){switch(e){case 10:case 33:case 35:case 36:case 37:case 38:case 42:case 43:case 45:case 58:case 60:case 61:case 62:case 64:case 91:case 92:case 93:case 94:case 95:case 96:case 123:case 125:case 126:return!0;default:return!1}}me.prototype.tokenize=function(e,t,n){const r=this.ruler.getRules(""),o=r.length,i=e.md.options.maxNesting;let s=t,a=!1;for(;s<n&&(e.line=s=e.skipEmptyLines(s),!(s>=n))&&!(e.sCount[s]<e.blkIndent);){if(e.level>=i){e.line=n;break}const t=e.line;let c=!1;for(let i=0;i<o;i++)if(c=r[i](e,s,n,!1),c){if(t>=e.line)throw new Error("block rule didn't increment state.line");break}if(!c)throw new Error("none of the block rules matched");e.tight=!a,e.isEmpty(e.line-1)&&(a=!0),s=e.line,s<n&&e.isEmpty(s)&&(a=!0,s++,e.line=s)}},me.prototype.parse=function(e,t,n,r){if(!e)return;const o=new this.State(e,t,n,r);this.tokenize(o,o.line,o.lineMax)},me.prototype.State=re,fe.prototype.pushPending=function(){const e=new H("text","",0);return e.content=this.pending,e.level=this.pendingLevel,this.tokens.push(e),this.pending="",e},fe.prototype.push=function(e,t,n){this.pending&&this.pushPending();const r=new H(e,t,n);let o=null;return n<0&&(this.level--,this.delimiters=this._prev_delimiters.pop()),r.level=this.level,n>0&&(this.level++,this._prev_delimiters.push(this.delimiters),this.delimiters=[],o={delimiters:this.delimiters}),this.pendingLevel=this.level,this.tokens.push(r),this.tokens_meta.push(o),r},fe.prototype.scanDelims=function(e,t){const n=this.posMax,r=this.src.charCodeAt(e),o=e>0?this.src.charCodeAt(e-1):32;let i=e;for(;i<n&&this.src.charCodeAt(i)===r;)i++;const s=i-e,a=i<n?this.src.charCodeAt(i):32,c=T(o)||S(String.fromCharCode(o)),l=T(a)||S(String.fromCharCode(a)),u=F(o),d=F(a),h=!d&&(!l||u||c),p=!u&&(!c||d||l);return{can_open:h&&(t||!p||c),can_close:p&&(t||!h||l),length:s}},fe.prototype.Token=H;const be=/(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i,ye=[];for(let e=0;e<256;e++)ye.push(0);function Ce(e,t){let n;const r=[],o=t.length;for(let i=0;i<o;i++){const o=t[i];if(126!==o.marker)continue;if(-1===o.end)continue;const s=t[o.end];n=e.tokens[o.token],n.type="s_open",n.tag="s",n.nesting=1,n.markup="~~",n.content="",n=e.tokens[s.token],n.type="s_close",n.tag="s",n.nesting=-1,n.markup="~~",n.content="","text"===e.tokens[s.token-1].type&&"~"===e.tokens[s.token-1].content&&r.push(s.token-1)}for(;r.length;){const t=r.pop();let o=t+1;for(;o<e.tokens.length&&"s_close"===e.tokens[o].type;)o++;o--,t!==o&&(n=e.tokens[o],e.tokens[o]=e.tokens[t],e.tokens[t]=n)}}"\\!\"#$%&'()*+,./:;<=>?@[]^_`{|}~-".split("").forEach(function(e){ye[e.charCodeAt(0)]=1});var ke={tokenize:function(e,t){const n=e.pos,r=e.src.charCodeAt(n);if(t)return!1;if(126!==r)return!1;const o=e.scanDelims(e.pos,!0);let i=o.length;const s=String.fromCharCode(r);if(i<2)return!1;let a;i%2&&(a=e.push("text","",0),a.content=s,i--);for(let t=0;t<i;t+=2)a=e.push("text","",0),a.content=s+s,e.delimiters.push({marker:r,length:0,token:e.tokens.length-1,end:-1,open:o.can_open,close:o.can_close});return e.pos+=o.length,!0},postProcess:function(e){const t=e.tokens_meta,n=e.tokens_meta.length;Ce(e,e.delimiters);for(let r=0;r<n;r++)t[r]&&t[r].delimiters&&Ce(e,t[r].delimiters)}};function ve(e,t){for(let n=t.length-1;n>=0;n--){const r=t[n];if(95!==r.marker&&42!==r.marker)continue;if(-1===r.end)continue;const o=t[r.end],i=n>0&&t[n-1].end===r.end+1&&t[n-1].marker===r.marker&&t[n-1].token===r.token-1&&t[r.end+1].token===o.token+1,s=String.fromCharCode(r.marker),a=e.tokens[r.token];a.type=i?"strong_open":"em_open",a.tag=i?"strong":"em",a.nesting=1,a.markup=i?s+s:s,a.content="";const c=e.tokens[o.token];c.type=i?"strong_close":"em_close",c.tag=i?"strong":"em",c.nesting=-1,c.markup=i?s+s:s,c.content="",i&&(e.tokens[t[n-1].token].content="",e.tokens[t[r.end+1].token].content="",n--)}}var _e={tokenize:function(e,t){const n=e.pos,r=e.src.charCodeAt(n);if(t)return!1;if(95!==r&&42!==r)return!1;const o=e.scanDelims(e.pos,42===r);for(let t=0;t<o.length;t++)e.push("text","",0).content=String.fromCharCode(r),e.delimiters.push({marker:r,length:o.length,token:e.tokens.length-1,end:-1,open:o.can_open,close:o.can_close});return e.pos+=o.length,!0},postProcess:function(e){const t=e.tokens_meta,n=e.tokens_meta.length;ve(e,e.delimiters);for(let r=0;r<n;r++)t[r]&&t[r].delimiters&&ve(e,t[r].delimiters)}};const we=/^([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/,De=/^([a-zA-Z][a-zA-Z0-9+.-]{1,31}):([^<>\x00-\x20]*)$/,Ee=/^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i,Ae=/^&([a-z][a-z0-9]{1,31});/i;function xe(e){const t={},n=e.length;if(!n)return;let r=0,o=-2;const i=[];for(let s=0;s<n;s++){const n=e[s];if(i.push(0),e[r].marker===n.marker&&o===n.token-1||(r=s),o=n.token,n.length=n.length||0,!n.close)continue;t.hasOwnProperty(n.marker)||(t[n.marker]=[-1,-1,-1,-1,-1,-1]);const a=t[n.marker][(n.open?3:0)+n.length%3];let c=r-i[r]-1,l=c;for(;c>a;c-=i[c]+1){const t=e[c];if(t.marker===n.marker&&t.open&&t.end<0){let r=!1;if((t.close||n.open)&&(t.length+n.length)%3==0&&(t.length%3==0&&n.length%3==0||(r=!0)),!r){const r=c>0&&!e[c-1].open?i[c-1]+1:0;i[s]=s-c+r,i[c]=r,n.open=!1,t.end=s,t.close=!1,l=-1,o=-2;break}}}-1!==l&&(t[n.marker][(n.open?3:0)+(n.length||0)%3]=l)}}const Fe=[["text",function(e,t){let n=e.pos;for(;n<e.posMax&&!ge(e.src.charCodeAt(n));)n++;return n!==e.pos&&(t||(e.pending+=e.src.slice(e.pos,n)),e.pos=n,!0)}],["linkify",function(e,t){if(!e.md.options.linkify)return!1;if(e.linkLevel>0)return!1;const n=e.pos;if(n+3>e.posMax)return!1;if(58!==e.src.charCodeAt(n))return!1;if(47!==e.src.charCodeAt(n+1))return!1;if(47!==e.src.charCodeAt(n+2))return!1;const r=e.pending.match(be);if(!r)return!1;const o=r[1],i=e.md.linkify.matchAtStart(e.src.slice(n-o.length));if(!i)return!1;let s=i.url;if(s.length<=o.length)return!1;s=s.replace(/\*+$/,"");const a=e.md.normalizeLink(s);if(!e.md.validateLink(a))return!1;if(!t){e.pending=e.pending.slice(0,-o.length);const t=e.push("link_open","a",1);t.attrs=[["href",a]],t.markup="linkify",t.info="auto",e.push("text","",0).content=e.md.normalizeLinkText(s);const n=e.push("link_close","a",-1);n.markup="linkify",n.info="auto"}return e.pos+=s.length-o.length,!0}],["newline",function(e,t){let n=e.pos;if(10!==e.src.charCodeAt(n))return!1;const r=e.pending.length-1,o=e.posMax;if(!t)if(r>=0&&32===e.pending.charCodeAt(r))if(r>=1&&32===e.pending.charCodeAt(r-1)){let t=r-1;for(;t>=1&&32===e.pending.charCodeAt(t-1);)t--;e.pending=e.pending.slice(0,t),e.push("hardbreak","br",0)}else e.pending=e.pending.slice(0,-1),e.push("softbreak","br",0);else e.push("softbreak","br",0);for(n++;n<o&&x(e.src.charCodeAt(n));)n++;return e.pos=n,!0}],["escape",function(e,t){let n=e.pos;const r=e.posMax;if(92!==e.src.charCodeAt(n))return!1;if(n++,n>=r)return!1;let o=e.src.charCodeAt(n);if(10===o){for(t||e.push("hardbreak","br",0),n++;n<r&&(o=e.src.charCodeAt(n),x(o));)n++;return e.pos=n,!0}let i=e.src[n];if(o>=55296&&o<=56319&&n+1<r){const t=e.src.charCodeAt(n+1);t>=56320&&t<=57343&&(i+=e.src[n+1],n++)}const s="\\"+i;if(!t){const t=e.push("text_special","",0);o<256&&0!==ye[o]?t.content=i:t.content=s,t.markup=s,t.info="escape"}return e.pos=n+1,!0}],["backticks",function(e,t){let n=e.pos;if(96!==e.src.charCodeAt(n))return!1;const r=n;n++;const o=e.posMax;for(;n<o&&96===e.src.charCodeAt(n);)n++;const i=e.src.slice(r,n),s=i.length;if(e.backticksScanned&&(e.backticks[s]||0)<=r)return t||(e.pending+=i),e.pos+=s,!0;let a,c=n;for(;-1!==(a=e.src.indexOf("`",c));){for(c=a+1;c<o&&96===e.src.charCodeAt(c);)c++;const r=c-a;if(r===s){if(!t){const t=e.push("code_inline","code",0);t.markup=i,t.content=e.src.slice(n,a).replace(/\n/g," ").replace(/^ (.+) $/,"$1")}return e.pos=c,!0}e.backticks[r]=a}return e.backticksScanned=!0,t||(e.pending+=i),e.pos+=s,!0}],["strikethrough",ke.tokenize],["emphasis",_e.tokenize],["link",function(e,t){let n,r,o,i,s="",a="",c=e.pos,l=!0;if(91!==e.src.charCodeAt(e.pos))return!1;const u=e.pos,d=e.posMax,h=e.pos+1,p=e.md.helpers.parseLinkLabel(e,e.pos,!0);if(p<0)return!1;let m=p+1;if(m<d&&40===e.src.charCodeAt(m)){for(l=!1,m++;m<d&&(n=e.src.charCodeAt(m),x(n)||10===n);m++);if(m>=d)return!1;if(c=m,o=e.md.helpers.parseLinkDestination(e.src,m,e.posMax),o.ok){for(s=e.md.normalizeLink(o.str),e.md.validateLink(s)?m=o.pos:s="",c=m;m<d&&(n=e.src.charCodeAt(m),x(n)||10===n);m++);if(o=e.md.helpers.parseLinkTitle(e.src,m,e.posMax),m<d&&c!==m&&o.ok)for(a=o.str,m=o.pos;m<d&&(n=e.src.charCodeAt(m),x(n)||10===n);m++);}(m>=d||41!==e.src.charCodeAt(m))&&(l=!0),m++}if(l){if(void 0===e.env.references)return!1;if(m<d&&91===e.src.charCodeAt(m)?(c=m+1,m=e.md.helpers.parseLinkLabel(e,m),m>=0?r=e.src.slice(c,m++):m=p+1):m=p+1,r||(r=e.src.slice(h,p)),i=e.env.references[L(r)],!i)return e.pos=u,!1;s=i.href,a=i.title}if(!t){e.pos=h,e.posMax=p;const t=[["href",s]];e.push("link_open","a",1).attrs=t,a&&t.push(["title",a]),e.linkLevel++,e.md.inline.tokenize(e),e.linkLevel--,e.push("link_close","a",-1)}return e.pos=m,e.posMax=d,!0}],["image",function(e,t){let n,r,o,i,s,a,c,l,u="";const d=e.pos,h=e.posMax;if(33!==e.src.charCodeAt(e.pos))return!1;if(91!==e.src.charCodeAt(e.pos+1))return!1;const p=e.pos+2,m=e.md.helpers.parseLinkLabel(e,e.pos+1,!1);if(m<0)return!1;if(i=m+1,i<h&&40===e.src.charCodeAt(i)){for(i++;i<h&&(n=e.src.charCodeAt(i),x(n)||10===n);i++);if(i>=h)return!1;for(l=i,a=e.md.helpers.parseLinkDestination(e.src,i,e.posMax),a.ok&&(u=e.md.normalizeLink(a.str),e.md.validateLink(u)?i=a.pos:u=""),l=i;i<h&&(n=e.src.charCodeAt(i),x(n)||10===n);i++);if(a=e.md.helpers.parseLinkTitle(e.src,i,e.posMax),i<h&&l!==i&&a.ok)for(c=a.str,i=a.pos;i<h&&(n=e.src.charCodeAt(i),x(n)||10===n);i++);else c="";if(i>=h||41!==e.src.charCodeAt(i))return e.pos=d,!1;i++}else{if(void 0===e.env.references)return!1;if(i<h&&91===e.src.charCodeAt(i)?(l=i+1,i=e.md.helpers.parseLinkLabel(e,i),i>=0?o=e.src.slice(l,i++):i=m+1):i=m+1,o||(o=e.src.slice(p,m)),s=e.env.references[L(o)],!s)return e.pos=d,!1;u=s.href,c=s.title}if(!t){r=e.src.slice(p,m);const t=[];e.md.inline.parse(r,e.md,e.env,t);const n=e.push("image","img",0),o=[["src",u],["alt",""]];n.attrs=o,n.children=t,n.content=r,c&&o.push(["title",c])}return e.pos=i,e.posMax=h,!0}],["autolink",function(e,t){let n=e.pos;if(60!==e.src.charCodeAt(n))return!1;const r=e.pos,o=e.posMax;for(;;){if(++n>=o)return!1;const t=e.src.charCodeAt(n);if(60===t)return!1;if(62===t)break}const i=e.src.slice(r+1,n);if(De.test(i)){const n=e.md.normalizeLink(i);if(!e.md.validateLink(n))return!1;if(!t){const t=e.push("link_open","a",1);t.attrs=[["href",n]],t.markup="autolink",t.info="auto",e.push("text","",0).content=e.md.normalizeLinkText(i);const r=e.push("link_close","a",-1);r.markup="autolink",r.info="auto"}return e.pos+=i.length+2,!0}if(we.test(i)){const n=e.md.normalizeLink("mailto:"+i);if(!e.md.validateLink(n))return!1;if(!t){const t=e.push("link_open","a",1);t.attrs=[["href",n]],t.markup="autolink",t.info="auto",e.push("text","",0).content=e.md.normalizeLinkText(i);const r=e.push("link_close","a",-1);r.markup="autolink",r.info="auto"}return e.pos+=i.length+2,!0}return!1}],["html_inline",function(e,t){if(!e.md.options.html)return!1;const n=e.posMax,r=e.pos;if(60!==e.src.charCodeAt(r)||r+2>=n)return!1;const o=e.src.charCodeAt(r+1);if(33!==o&&63!==o&&47!==o&&!function(e){const t=32|e;return t>=97&&t<=122}(o))return!1;const i=e.src.slice(r).match(ue);if(!i)return!1;if(!t){const t=e.push("html_inline","",0);t.content=i[0],s=t.content,/^<a[>\s]/i.test(s)&&e.linkLevel++,function(e){return/^<\/a\s*>/i.test(e)}(t.content)&&e.linkLevel--}var s;return e.pos+=i[0].length,!0}],["entity",function(e,t){const n=e.pos,r=e.posMax;if(38!==e.src.charCodeAt(n))return!1;if(n+1>=r)return!1;if(35===e.src.charCodeAt(n+1)){const r=e.src.slice(n).match(Ee);if(r){if(!t){const t="x"===r[1][0].toLowerCase()?parseInt(r[1].slice(1),16):parseInt(r[1],10),n=e.push("text_special","",0);n.content=f(t)?g(t):g(65533),n.markup=r[0],n.info="entity"}return e.pos+=r[0].length,!0}}else{const r=e.src.slice(n).match(Ae);if(r){const n=i.decodeHTML(r[0]);if(n!==r[0]){if(!t){const t=e.push("text_special","",0);t.content=n,t.markup=r[0],t.info="entity"}return e.pos+=r[0].length,!0}}}return!1}]],Se=[["balance_pairs",function(e){const t=e.tokens_meta,n=e.tokens_meta.length;xe(e.delimiters);for(let e=0;e<n;e++)t[e]&&t[e].delimiters&&xe(t[e].delimiters)}],["strikethrough",ke.postProcess],["emphasis",_e.postProcess],["fragments_join",function(e){let t,n,r=0;const o=e.tokens,i=e.tokens.length;for(t=n=0;t<i;t++)o[t].nesting<0&&r--,o[t].level=r,o[t].nesting>0&&r++,"text"===o[t].type&&t+1<i&&"text"===o[t+1].type?o[t+1].content=o[t].content+o[t+1].content:(t!==n&&(o[n]=o[t]),n++);t!==n&&(o.length=n)}]];function Te(){this.ruler=new N;for(let e=0;e<Fe.length;e++)this.ruler.push(Fe[e][0],Fe[e][1]);this.ruler2=new N;for(let e=0;e<Se.length;e++)this.ruler2.push(Se[e][0],Se[e][1])}Te.prototype.skipToken=function(e){const t=e.pos,n=this.ruler.getRules(""),r=n.length,o=e.md.options.maxNesting,i=e.cache;if(void 0!==i[t])return void(e.pos=i[t]);let s=!1;if(e.level<o){for(let o=0;o<r;o++)if(e.level++,s=n[o](e,!0),e.level--,s){if(t>=e.pos)throw new Error("inline rule didn't increment state.pos");break}}else e.pos=e.posMax;s||e.pos++,i[t]=e.pos},Te.prototype.tokenize=function(e){const t=this.ruler.getRules(""),n=t.length,r=e.posMax,o=e.md.options.maxNesting;for(;e.pos<r;){const i=e.pos;let s=!1;if(e.level<o)for(let r=0;r<n;r++)if(s=t[r](e,!1),s){if(i>=e.pos)throw new Error("inline rule didn't increment state.pos");break}if(s){if(e.pos>=r)break}else e.pending+=e.src[e.pos++]}e.pending&&e.pushPending()},Te.prototype.parse=function(e,t,n,r){const o=new this.State(e,t,n,r);this.tokenize(o);const i=this.ruler2.getRules(""),s=i.length;for(let e=0;e<s;e++)i[e](o)},Te.prototype.State=fe;const Le={default:{options:{html:!1,xhtmlOut:!1,breaks:!1,langPrefix:"language-",linkify:!1,typographer:!1,quotes:"“”‘’",highlight:null,maxNesting:100},components:{core:{},block:{},inline:{}}},zero:{options:{html:!1,xhtmlOut:!1,breaks:!1,langPrefix:"language-",linkify:!1,typographer:!1,quotes:"“”‘’",highlight:null,maxNesting:20},components:{core:{rules:["normalize","block","inline","text_join"]},block:{rules:["paragraph"]},inline:{rules:["text"],rules2:["balance_pairs","fragments_join"]}}},commonmark:{options:{html:!0,xhtmlOut:!0,breaks:!1,langPrefix:"language-",linkify:!1,typographer:!1,quotes:"“”‘’",highlight:null,maxNesting:20},components:{core:{rules:["normalize","block","inline","text_join"]},block:{rules:["blockquote","code","fence","heading","hr","html_block","lheading","list","reference","paragraph"]},inline:{rules:["autolink","backticks","emphasis","entity","escape","html_inline","image","link","newline","text"],rules2:["balance_pairs","emphasis","fragments_join"]}}}},Pe=/^(vbscript|javascript|file|data):/,Re=/^data:image\/(gif|png|jpeg|webp);/;function Me(e){const t=e.trim().toLowerCase();return!Pe.test(t)||Re.test(t)}const Ie=["http:","https:","mailto:"];function $e(e){const t=l.parse(e,!0);if(t.hostname&&(!t.protocol||Ie.indexOf(t.protocol)>=0))try{t.hostname=a.toASCII(t.hostname)}catch(e){}return l.encode(l.format(t))}function Ne(e){const t=l.parse(e,!0);if(t.hostname&&(!t.protocol||Ie.indexOf(t.protocol)>=0))try{t.hostname=a.toUnicode(t.hostname)}catch(e){}return l.decode(l.format(t),l.decode.defaultChars+"%")}function He(e,t){if(!(this instanceof He))return new He(e,t);t||d(e)||(t=e||{},e="default"),this.inline=new Te,this.block=new me,this.core=new ne,this.renderer=new $,this.linkify=new s,this.validateLink=Me,this.normalizeLink=$e,this.normalizeLinkText=Ne,this.utils=R,this.helpers=p({},M),this.options={},this.configure(e),t&&this.set(t)}He.prototype.set=function(e){return p(this.options,e),this},He.prototype.configure=function(e){const t=this;if(d(e)){const t=e;if(!(e=Le[t]))throw new Error('Wrong `markdown-it` preset "'+t+'", check name')}if(!e)throw new Error("Wrong `markdown-it` preset, can't be empty");return e.options&&t.set(e.options),e.components&&Object.keys(e.components).forEach(function(n){e.components[n].rules&&t[n].ruler.enableOnly(e.components[n].rules),e.components[n].rules2&&t[n].ruler2.enableOnly(e.components[n].rules2)}),this},He.prototype.enable=function(e,t){let n=[];Array.isArray(e)||(e=[e]),["core","block","inline"].forEach(function(t){n=n.concat(this[t].ruler.enable(e,!0))},this),n=n.concat(this.inline.ruler2.enable(e,!0));const r=e.filter(function(e){return n.indexOf(e)<0});if(r.length&&!t)throw new Error("MarkdownIt. Failed to enable unknown rule(s): "+r);return this},He.prototype.disable=function(e,t){let n=[];Array.isArray(e)||(e=[e]),["core","block","inline"].forEach(function(t){n=n.concat(this[t].ruler.disable(e,!0))},this),n=n.concat(this.inline.ruler2.disable(e,!0));const r=e.filter(function(e){return n.indexOf(e)<0});if(r.length&&!t)throw new Error("MarkdownIt. Failed to disable unknown rule(s): "+r);return this},He.prototype.use=function(e){const t=[this].concat(Array.prototype.slice.call(arguments,1));return e.apply(e,t),this},He.prototype.parse=function(e,t){if("string"!=typeof e)throw new Error("Input data should be a String");const n=new this.core.State(e,this,t);return this.core.process(n),n.tokens},He.prototype.render=function(e,t){return t=t||{},this.renderer.render(this.parse(e,t),this.options,t)},He.prototype.parseInline=function(e,t){const n=new this.core.State(e,this,t);return n.inlineMode=!0,this.core.process(n),n.tokens},He.prototype.renderInline=function(e,t){return t=t||{},this.renderer.render(this.parseInline(e,t),this.options,t)},e.exports=He},398:e=>{e.exports=require("vscode")},439:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.WalkthroughWebviewProvider=void 0;const r=n(398),o=n(982),i=n(928),s=n(383),a=n(182);class c{constructor(){this.contentMap=new Map}setContent(e,t){this.contentMap.set(e.toString(),t)}provideTextDocumentContent(e){return this.contentMap.get(e.toString())}}class l{constructor(e,t){this._extensionUri=e,this.bus=t,this.placementMemory=new Map,this.commentThreads=new Map,this.md=this.setupMarkdownRenderer(),this.diffContentProvider=new c,this.bus.context.subscriptions.push(r.workspace.registerTextDocumentContentProvider("walkthrough-diff",this.diffContentProvider))}setupMarkdownRenderer(){const e=new s({html:!0,linkify:!0,typographer:!0}),t=e.renderer.rules.link_open||function(e,t,n,r,o){return o.renderToken(e,t,n)};e.renderer.rules.link_open=(e,n,r,o,i)=>{const s=e[n],a=s.attrGet("href");if(a&&a.startsWith("dialectic:")){const e=`link:${a}`,t=this.placementMemory?.get(e);s.attrSet("href","javascript:void(0)"),s.attrSet("data-symposium-url",a),s.attrSet("class","file-ref"),t?.isPlaced?s.attrSet("data-placement-state","placed"):s.attrSet("data-placement-state","unplaced")}return t(e,n,r,o,i)};const n=e.renderer.rules.link_close||function(e,t,n,r,o){return o.renderToken(e,t,n)};return e.renderer.rules.link_close=(e,t,r,o,i)=>{let s=null;for(let n=t-1;n>=0;n--)if("link_open"===e[n].type){s=e[n];break}if(s){const e=s.attrGet("href");if(console.log("[RENDERER] Processing link_close for href:",e),e&&e.startsWith("dialectic:")){const t=`link:${e}`,n=this.placementMemory?.get(t),r=n?.isPlaced||!1,o=`</a><button class="placement-icon" data-symposium-url="${e}" data-action="${r?"relocate":"place"}" title="${r?"Relocate this link":"Place this link"}">${r?"📍":"🔍"}</button>`;return console.log("[RENDERER] Generated icon HTML:",o),o}}return n(e,t,r,o,i)},e}sanitizeHtml(e){return e.replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,"").replace(/javascript:/gi,"").replace(/on\w+="[^"]*"/gi,"")}async handleWebviewMessage(e){switch(e.command||e.type){case"clearWalkthrough":console.log("Walkthrough: clearWalkthrough command received"),await this.clearWalkthrough();break;case"openFile":console.log("Walkthrough: openFile command received:",e.symposiumUrl),await(0,a.openSymposiumUrl)(e.symposiumUrl,this.bus.outputChannel,this.baseUri,this.placementMemory),this.updateLinkPlacementUI(e.symposiumUrl);break;case"relocateLink":console.log("Walkthrough: relocateLink command received:",e.symposiumUrl),await this.relocateLink(e.symposiumUrl);break;case"action":console.log("Walkthrough: action received:",e.message),this.bus.outputChannel.appendLine(`Action button clicked: ${e.message}`),await this.bus.sendTextToActiveTerminal(e.message);break;case"showDiff":console.log("Walkthrough: showDiff command received:",e.filePath),await this.showFileDiff(e.filePath);break;case"showComment":console.log("Walkthrough: showComment command received:",e.comment),await this.showComment(e.comment);break;case"ready":console.log("Walkthrough webview ready"),this.bus.outputChannel.appendLine("[WALKTHROUGH] Webview reported ready")}}async clearWalkthrough(){console.log("[WALKTHROUGH] Clearing walkthrough and comments"),this.commentController&&(this.commentController.dispose(),this.commentController=r.comments.createCommentController("symposium-walkthrough","Dialectic Walkthrough"),this.commentController.options={prompt:"Ask Socratic Shell...",placeHolder:"Type your question or comment here..."}),this.placementMemory.clear(),this.bus.outputChannel.appendLine("Walkthrough cleared")}async showComment(e){if(console.log("[WALKTHROUGH COMMENT] Starting showComment:",e),!e.locations||0===e.locations.length)return void r.window.showErrorMessage("Comment has no locations");const t=this.commentThreads.get(e.id);if(t)return void await this.navigateToThread(t);let n;if(1===e.locations.length)n=e.locations[0];else if(n=await this.pickLocation(e.locations,"Choose the location for this comment"),!n)return;const o=await this.createCommentThread(n.path,n,e);o&&(this.commentThreads.set(e.id,o),e.locations.length>1&&(this.setPlacementState(e.id,{isPlaced:!0,chosenLocation:n,wasAmbiguous:!0}),this.updateCommentDisplay(e.id,n)),await this.navigateToThread(o))}async navigateToThread(e){try{const t=await r.workspace.openTextDocument(e.uri),n=await r.window.showTextDocument(t),o=e.range;if(o){const e=o.start;n.selection=new r.Selection(e,e),n.revealRange(o)}e.collapsibleState=r.CommentThreadCollapsibleState.Expanded}catch(e){console.error("[WALKTHROUGH] Failed to navigate to thread:",e)}}async showRelocationDialog(e,t){const n=t.range,o=r.workspace.asRelativePath(t.uri),i=n?n.start.line+1:0,s=e.locations.map(e=>{const t=e.path===o&&e.start.line===i;return{label:`${e.path}:${e.start.line}${t?" (current)":""}`,description:e.content.substring(0,80)+(e.content.length>80?"...":""),location:e,isCurrent:t}}),a=await r.window.showQuickPick(s,{placeHolder:"Choose location for this comment (current location marked)",matchOnDescription:!0});if(a)if(a.isCurrent)await this.navigateToThread(t);else{t.dispose();const n=await this.createCommentThread(a.location.path,a.location,e);n&&(this.commentThreads.set(e.id,n),this.setPlacementState(e.id,{isPlaced:!0,chosenLocation:a.location,wasAmbiguous:!0}),this.updateCommentDisplay(e.id,a.location))}}async pickLocation(e,t){const n=e.map(e=>({label:`${e.path}:${e.start.line}`,description:e.content.substring(0,80)+(e.content.length>80?"...":""),location:e})),o=await r.window.showQuickPick(n,{placeHolder:t,matchOnDescription:!0});return o?.location}getFilesInCurrentGitDiff(){const e=new Set;if(!this.currentWalkthrough)return e;const t=[...this.currentWalkthrough.introduction||[],...this.currentWalkthrough.highlights||[],...this.currentWalkthrough.changes||[],...this.currentWalkthrough.actions||[]];for(const n of t)"object"==typeof n&&"files"in n&&n.files.forEach(t=>{e.add(t.path)});return e}async createCommentThread(e,t,n){if(console.log(`[WALKTHROUGH COMMENT] Creating comment thread for ${e}:${t.start.line}`),!this.baseUri)return console.error("[WALKTHROUGH COMMENT] No baseUri set"),void r.window.showErrorMessage("Cannot create comment: no base URI set");try{const o=r.Uri.file(i.resolve(this.baseUri.fsPath,e)),s=await r.workspace.openTextDocument(o);await r.window.showTextDocument(s),this.commentController||(this.commentController=r.comments.createCommentController("symposium-walkthrough","Dialectic Walkthrough Comments"),this.commentController.options={prompt:"Ask Socratic Shell...",placeHolder:"Type your question or comment here"});const a=Math.max(0,t.start.line-1),c=Math.max(0,(t.end?.line||t.start.line)-1),l=new r.Range(a,0,c,Number.MAX_SAFE_INTEGER),u=this.commentController.createCommentThread(o,l,[]);if(u.label="Walkthrough Comment",u.collapsibleState=r.CommentThreadCollapsibleState.Expanded,u.canReply=!0,n.comment&&n.comment.length>0){const e={body:new r.MarkdownString(n.comment.join("\n\n")),mode:r.CommentMode.Preview,author:{name:"Dialectic Walkthrough"},timestamp:new Date};u.comments=[e]}return console.log(`[WALKTHROUGH COMMENT] Created comment thread at ${e}:${a+1}`),u}catch(e){return console.error("[WALKTHROUGH COMMENT] Failed to create comment thread:",e),void r.window.showErrorMessage(`Failed to create comment: ${e}`)}}updateCommentDisplay(e,t){this._view&&(console.log(`[WALKTHROUGH] Updating comment display for ${e}:`,t),this._view.webview.postMessage({type:"updateCommentDisplay",commentId:e,chosenLocation:t}))}getPlacementState(e){return this.placementMemory.get(e)}setPlacementState(e,t){this.placementMemory.set(e,t)}placeItem(e,t,n){this.setPlacementState(e,{isPlaced:!0,chosenLocation:t,wasAmbiguous:n})}unplaceItem(e){const t=this.getPlacementState(e);t&&this.setPlacementState(e,{...t,isPlaced:!1,chosenLocation:null})}clearPlacementMemory(){this.placementMemory.clear()}async showFileDiff(e){if(console.log(`[WALKTHROUGH DIFF] Starting showFileDiff for: ${e}`),!this.currentWalkthrough)return console.log("[WALKTHROUGH DIFF] ERROR: No current walkthrough data"),void r.window.showErrorMessage("No walkthrough data available");let t;const n=[...this.currentWalkthrough.introduction||[],...this.currentWalkthrough.highlights||[],...this.currentWalkthrough.changes||[],...this.currentWalkthrough.actions||[]];for(const r of n)if("object"==typeof r&&"files"in r&&(t=r.files.find(t=>t.path===e),t))break;if(!t)return console.log(`[WALKTHROUGH DIFF] ERROR: File not found in walkthrough: ${e}`),void r.window.showErrorMessage(`File not found in walkthrough: ${e}`);console.log(`[WALKTHROUGH DIFF] Found file change: ${t.status}, ${t.additions}+/${t.deletions}-, ${t.hunks.length} hunks`);try{const n=r.workspace.workspaceFolders?.[0];if(!n)return void r.window.showErrorMessage("No workspace folder found");const o=r.Uri.joinPath(n.uri,e);console.log(`[WALKTHROUGH DIFF] Resolved absolute path: ${o.toString()}`);const i=(await r.workspace.openTextDocument(o)).getText();console.log(`[WALKTHROUGH DIFF] Current file content length: ${i.length} chars`);const s=await this.generateOriginalContent(t,i);console.log(`[WALKTHROUGH DIFF] Generated original content length: ${s.length} chars`);const a=r.Uri.parse(`walkthrough-diff:${e}?original`),c=o;console.log(`[WALKTHROUGH DIFF] Original URI: ${a.toString()}`),console.log(`[WALKTHROUGH DIFF] Modified URI: ${c.toString()}`),this.diffContentProvider.setContent(a,s),console.log("[WALKTHROUGH DIFF] Stored original content in provider"),console.log("[WALKTHROUGH DIFF] Calling vscode.diff command..."),await r.commands.executeCommand("vscode.diff",a,c,`${e} (Walkthrough Diff)`),console.log("[WALKTHROUGH DIFF] vscode.diff command completed successfully")}catch(t){console.error("[WALKTHROUGH DIFF] Failed to show file diff:",t),r.window.showErrorMessage(`Failed to show diff for ${e}`)}}async generateOriginalContent(e,t){try{const n=t.split("\n"),r=[];let o=0;for(const t of e.hunks){const e=t.new_start-1;for(;o<e&&o<n.length;)r.push(n[o]),o++;for(const e of t.lines)switch(e.line_type){case"Context":r.push(e.content),o++;break;case"Removed":r.push(e.content);break;case"Added":o++}}for(;o<n.length;)r.push(n[o]),o++;return r.join("\n")}catch(e){return console.error("[WALKTHROUGH DIFF] Failed to generate original content:",e),""}}resolveWebviewView(e,t,n){console.log("WalkthroughWebviewProvider.resolveWebviewView called"),this.bus.outputChannel.appendLine("[WALKTHROUGH] resolveWebviewView called"),console.log("Current offscreenHtmlContent length:",this.offscreenHtmlContent?.length||0),this.bus.outputChannel.appendLine(`[WALKTHROUGH] Current offscreenHtmlContent length: ${this.offscreenHtmlContent?.length||0}`),this._view=e,e.webview.options={enableScripts:!0,localResourceRoots:[this._extensionUri]},e.webview.onDidReceiveMessage(e=>this.handleWebviewMessage(e),void 0),console.log("Setting webview HTML"),e.webview.html=this._getHtmlForWebview(e.webview),console.log("Webview HTML set, webview should be ready"),this.offscreenHtmlContent?(console.log("Sending offscreen HTML content"),this.bus.outputChannel.appendLine("[WALKTHROUGH] Sending offscreen HTML content"),setTimeout(()=>{console.log("Posting offscreen content to webview (delayed)"),this.bus.outputChannel.appendLine("[WALKTHROUGH] Posting offscreen content to webview (delayed)"),e.webview.postMessage({type:"showWalkthroughHtml",content:this.offscreenHtmlContent})},100)):(console.log("No offscreen HTML content to restore"),this.bus.outputChannel.appendLine("[WALKTHROUGH] No offscreen HTML content to restore"))}showWalkthroughHtml(e){console.log("WalkthroughWebviewProvider.showWalkthroughHtml called with content length:",e.length),this.bus.outputChannel.appendLine(`[WALKTHROUGH] showWalkthroughHtml called with ${e.length} chars`),this.offscreenHtmlContent=e,this._view?(console.log("Webview exists, showing and posting HTML content"),this.bus.outputChannel.appendLine("[WALKTHROUGH] Webview exists, posting message to webview"),this._view.show?.(!0),this._view.webview.postMessage({type:"showWalkthroughHtml",content:e}),this.bus.outputChannel.appendLine("[WALKTHROUGH] Message posted to webview successfully")):(console.log("No webview available, content stored for when webview becomes available"),this.bus.outputChannel.appendLine("[WALKTHROUGH] No webview available, content stored as pending"))}showWalkthrough(e){if(console.log("WalkthroughWebviewProvider.showWalkthrough called with:",e),this.currentWalkthrough=e,this.clearPlacementMemory(),this.clearAllComments(),this._view){console.log("Webview exists, showing and posting message"),this._view.show?.(!0);const t=this.processWalkthroughMarkdown(e);this._view.webview.postMessage({type:"walkthrough",data:t}),console.log("Message posted to webview"),this.autoPlaceUnambiguousComments(e)}else console.log("ERROR: No webview available")}async handleCommentSubmission(e){const t={body:new r.MarkdownString(e.text),mode:r.CommentMode.Preview,author:{name:"User"},timestamp:new Date};e.thread.comments=[...e.thread.comments,t],e.thread.canReply=!0,await this.sendCommentToShell(e.text,e.thread)}async sendCommentToShell(e,t){try{if(!t.range)return void console.error("[WALKTHROUGH] Comment thread has no range");const n=t.uri,o=t.range.start.line+1,i=r.workspace.asRelativePath(n),s={file:i,line:o,selection:void 0,user_comment:e};await this.bus.sendToActiveTerminal(s,{includeNewline:!0}),this.bus.outputChannel.appendLine(`Comment reply sent as compact reference for ${i}:${o}`)}catch(e){console.error("[WALKTHROUGH] Error sending comment to shell:",e),this.bus.outputChannel.appendLine(`Error sending comment: ${e}`)}}clearAllComments(){this.commentController&&(console.log("[WALKTHROUGH] Clearing all existing comments"),this.commentController.dispose(),this.commentController=void 0),this.commentThreads.clear()}async autoPlaceUnambiguousComments(e){const t=[...e.introduction||[],...e.highlights||[],...e.changes||[],...e.actions||[]];for(const e of t)if("object"==typeof e&&"comment"in e){const t=e;if(t.locations&&1===t.locations.length){const e=await this.createCommentThread(t.locations[0].path,t.locations[0],t);e&&this.commentThreads.set(t.id,e)}}}setBaseUri(e){this.baseUri=r.Uri.file(e)}processWalkthroughMarkdown(e){const t=e=>e?e.map(e=>"string"==typeof e?this.sanitizeHtml(this.md.render(e)):e):e;return{introduction:t(e.introduction),highlights:t(e.highlights),changes:t(e.changes),actions:t(e.actions)}}async relocateLink(e){const t=`link:${e}`;this.placementMemory?.delete(t),await(0,a.openSymposiumUrl)(e,this.bus.outputChannel,this.baseUri,this.placementMemory),this.updateLinkPlacementUI(e)}updateLinkPlacementUI(e){if(!this._view)return;const t=`link:${e}`,n=this.placementMemory?.get(t),r=n?.isPlaced||!1;console.log(`[Walkthrough] Updating UI for ${e}: isPlaced=${r}, placementState=`,n),this._view.webview.postMessage({type:"updateLinkPlacement",symposiumUrl:e,isPlaced:r})}_getHtmlForWebview(e){const t=o.randomBytes(16).toString("base64");let n=`<!DOCTYPE html>\n            <html lang="en">\n            <head>\n                <meta charset="UTF-8">\n                <meta name="viewport" content="width=device-width, initial-scale=1.0">\n                <meta http-equiv="Content-Security-Policy" content="default-src 'none'; style-src 'unsafe-inline'; script-src 'nonce-${t}' https://cdn.jsdelivr.net;">\n                <title>Walkthrough</title>\n                <style>\n                    body {\n                        font-family: var(--vscode-font-family);\n                        font-size: var(--vscode-font-size);\n                        color: var(--vscode-foreground);\n                        background-color: var(--vscode-editor-background);\n                        margin: 0;\n                        padding: 16px;\n                        line-height: 1.5;\n                    }\n                    .walkthrough-header {\n                        display: flex;\n                        justify-content: space-between;\n                        align-items: center;\n                        margin-bottom: 20px;\n                        padding-bottom: 12px;\n                        border-bottom: 1px solid var(--vscode-panel-border);\n                    }\n                    .walkthrough-title {\n                        font-size: 1.2em;\n                        font-weight: 600;\n                        color: var(--vscode-textLink-foreground);\n                    }\n                    .clear-button {\n                        background-color: var(--vscode-button-secondaryBackground);\n                        color: var(--vscode-button-secondaryForeground);\n                        border: none;\n                        padding: 6px 12px;\n                        border-radius: 3px;\n                        cursor: pointer;\n                        font-size: 0.9em;\n                    }\n                    .clear-button:hover {\n                        background-color: var(--vscode-button-secondaryHoverBackground);\n                    }\n                    .section {\n                        margin-bottom: 24px;\n                    }\n                    .section-title {\n                        font-size: 1.1em;\n                        font-weight: 600;\n                        color: var(--vscode-textLink-foreground);\n                        margin-bottom: 12px;\n                        border-bottom: 1px solid var(--vscode-panel-border);\n                        padding-bottom: 4px;\n                    }\n                    .content-item {\n                        margin-bottom: 8px;\n                        padding: 4px 0;\n                    }\n                    .action-button {\n                        background-color: var(--vscode-button-background);\n                        color: var(--vscode-button-foreground);\n                        border: none;\n                        padding: 8px 16px;\n                        border-radius: 4px;\n                        cursor: pointer;\n                        margin: 4px 0;\n                        font-size: 0.9em;\n                    }\n                    .action-button:hover {\n                        background-color: var(--vscode-button-hoverBackground);\n                    }\n                    .action-description {\n                        font-size: 0.85em;\n                        color: var(--vscode-descriptionForeground);\n                        margin-top: 4px;\n                    }\n                    pre {\n                        background-color: var(--vscode-textCodeBlock-background);\n                        padding: 12px;\n                        border-radius: 4px;\n                        overflow-x: auto;\n                        font-family: var(--vscode-editor-font-family);\n                    }\n                    code {\n                        background-color: var(--vscode-textCodeBlock-background);\n                        padding: 2px 4px;\n                        border-radius: 2px;\n                        font-family: var(--vscode-editor-font-family);\n                    }\n                    .empty-state {\n                        text-align: center;\n                        color: var(--vscode-descriptionForeground);\n                        font-style: italic;\n                        padding: 32px 16px;\n                    }\n                    .gitdiff-container {\n                        border: 1px solid var(--vscode-panel-border);\n                        border-radius: 4px;\n                        margin: 8px 0;\n                    }\n                    .file-diff {\n                        border-bottom: 1px solid var(--vscode-panel-border);\n                    }\n                    .file-diff:last-child {\n                        border-bottom: none;\n                    }\n                    .file-header {\n                        display: flex;\n                        align-items: center;\n                        padding: 8px 12px;\n                        background-color: var(--vscode-editor-background);\n                        font-family: var(--vscode-editor-font-family);\n                        font-size: 0.9em;\n                    }\n                    .file-path {\n                        flex: 1;\n                        font-weight: 500;\n                    }\n                    .clickable-file {\n                        cursor: pointer;\n                        color: var(--vscode-textLink-foreground);\n                        text-decoration: underline;\n                    }\n                    .clickable-file:hover {\n                        color: var(--vscode-textLink-activeForeground);\n                    }\n                    .file-stats {\n                        margin: 0 12px;\n                        color: var(--vscode-descriptionForeground);\n                        font-size: 0.85em;\n                    }\n                    .comment-item {\n                        display: flex;\n                        align-items: flex-start;\n                        padding: 8px;\n                        border: 1px solid var(--vscode-panel-border);\n                        border-radius: 4px;\n                        cursor: pointer;\n                        background-color: var(--vscode-editor-background);\n                    }\n                    .comment-item:hover {\n                        background-color: var(--vscode-list-hoverBackground);\n                    }\n                    .comment-icon {\n                        margin-right: 8px;\n                        font-size: 16px;\n                    }\n                    .comment-content {\n                        flex: 1;\n                    }\n                    .comment-locations {\n                        font-weight: 500;\n                        color: var(--vscode-textLink-foreground);\n                        margin-bottom: 4px;\n                    }\n                    .comment-location {\n                        font-family: var(--vscode-editor-font-family);\n                        font-size: 0.9em;\n                    }\n                    .comment-text {\n                        color: var(--vscode-foreground);\n                        font-size: 0.9em;\n                    }\n                    \n                    /* Placement UI styles */\n                    .file-ref {\n                        cursor: pointer;\n                        text-decoration: none;\n                        display: inline-flex;\n                        align-items: center;\n                        gap: 4px;\n                        color: var(--vscode-textLink-foreground);\n                        border-bottom: 1px solid var(--vscode-textLink-foreground);\n                    }\n                    \n                    .file-ref:hover {\n                        color: var(--vscode-textLink-activeForeground);\n                        border-bottom-color: var(--vscode-textLink-activeForeground);\n                    }\n                    \n                    .placement-icon {\n                        background: none;\n                        border: none;\n                        cursor: pointer;\n                        padding: 0;\n                        font-size: 0.9em;\n                        opacity: 0.8;\n                        margin-left: 2px;\n                    }\n                    \n                    .placement-icon:hover {\n                        opacity: 1;\n                    }\n                    \n                    /* Mermaid diagram styles */\n                    .mermaid-container {\n                        margin: 16px 0;\n                        text-align: center;\n                        background-color: var(--vscode-editor-background);\n                        border: 1px solid var(--vscode-panel-border);\n                        border-radius: 4px;\n                        padding: 16px;\n                    }\n                    \n                    .mermaid {\n                        background-color: transparent !important;\n                    }\n                </style>\n            </head>\n            <body>\n                <div class="walkthrough-header">\n                    <div class="walkthrough-title">Code Walkthrough</div>\n                    <button class="clear-button" id="clear-walkthrough">Clear</button>\n                </div>\n                <div id="content">\n                    <div class="empty-state">No walkthrough loaded</div>\n                </div>\n                <script src="https://cdn.jsdelivr.net/npm/mermaid@10.9.1/dist/mermaid.min.js"><\/script>\n                <script nonce="${t}">\n                    console.log('Walkthrough webview JavaScript loaded');\n                    const vscode = acquireVsCodeApi();\n                    console.log('VSCode API acquired');\n                    \n                    // State management for webview interaction persistence\n                    function saveOffscreenState() {\n                        const state = {\n                            scrollPosition: window.scrollY,\n                            timestamp: Date.now()\n                        };\n                        vscode.setState(state);\n                        console.log('[STATE] Saved offscreen state:', state);\n                    }\n                    \n                    function restoreOffscreenState() {\n                        const state = vscode.getState();\n                        if (state && state.scrollPosition !== undefined) {\n                            console.log('[STATE] Restoring offscreen state:', state);\n                            // Use requestAnimationFrame to ensure content is rendered first\n                            requestAnimationFrame(() => {\n                                window.scrollTo(0, state.scrollPosition);\n                                console.log('[STATE] Scroll position restored to:', state.scrollPosition);\n                            });\n                        } else {\n                            console.log('[STATE] No offscreen state to restore');\n                        }\n                    }\n                    \n                    // Save state on scroll (throttled to avoid excessive saving)\n                    let scrollTimeout;\n                    window.addEventListener('scroll', () => {\n                        if (scrollTimeout) clearTimeout(scrollTimeout);\n                        scrollTimeout = setTimeout(saveOffscreenState, 100);\n                    });\n                    \n                    // Initialize mermaid with VSCode theme colors\n                    function initializeMermaidWithTheme() {\n                        if (typeof mermaid === 'undefined') {\n                            console.warn('Mermaid library not loaded');\n                            return;\n                        }\n                        \n                        // Get current VSCode theme colors\n                        const computedStyles = getComputedStyle(document.body);\n                        const primaryColor = computedStyles.getPropertyValue('--vscode-textLink-foreground').trim() || '#0078d4';\n                        const primaryTextColor = computedStyles.getPropertyValue('--vscode-foreground').trim() || '#1f1f1f';\n                        const primaryBorderColor = computedStyles.getPropertyValue('--vscode-panel-border').trim() || '#e1e1e1';\n                        const lineColor = computedStyles.getPropertyValue('--vscode-panel-border').trim() || '#666666';\n                        const secondaryColor = computedStyles.getPropertyValue('--vscode-editor-background').trim() || '#f3f3f3';\n                        const backgroundColor = computedStyles.getPropertyValue('--vscode-editor-background').trim() || '#ffffff';\n                        \n                        console.log('VSCode theme colors:', {\n                            primaryColor,\n                            primaryTextColor,\n                            primaryBorderColor,\n                            lineColor,\n                            secondaryColor,\n                            backgroundColor\n                        });\n                        \n                        mermaid.initialize({\n                            startOnLoad: false,\n                            theme: 'base',\n                            themeVariables: {\n                                primaryColor: primaryColor,\n                                primaryTextColor: primaryTextColor,\n                                primaryBorderColor: primaryBorderColor,\n                                lineColor: lineColor,\n                                secondaryColor: secondaryColor,\n                                tertiaryColor: backgroundColor,\n                                background: backgroundColor,\n                                mainBkg: backgroundColor,\n                                secondBkg: secondaryColor\n                            }\n                        });\n                        console.log('Mermaid initialized with VSCode theme colors');\n                    }\n                    \n                    initializeMermaidWithTheme();\n                    \n                    // Function to process mermaid diagrams in content\n                    async function processMermaidDiagrams() {\n                        console.log('[MERMAID] Processing mermaid diagrams');\n                        console.log('[MERMAID] Mermaid library available:', typeof mermaid !== 'undefined');\n                        \n                        const mermaidElements = document.querySelectorAll('mermaid');\n                        console.log('[MERMAID] Found', mermaidElements.length, 'mermaid elements');\n                        \n                        if (mermaidElements.length === 0) {\n                            console.log('[MERMAID] No mermaid elements found, skipping');\n                            return;\n                        }\n                        \n                        if (typeof mermaid === 'undefined') {\n                            console.error('[MERMAID] Mermaid library not loaded!');\n                            return;\n                        }\n                        \n                        // Process each mermaid element\n                        mermaidElements.forEach((element, index) => {\n                            try {\n                                const diagramContent = element.textContent || element.innerHTML;\n                                console.log('[MERMAID] Processing diagram', index);\n                                console.log('[MERMAID] Raw content:', diagramContent);\n                                \n                                // Clean and validate the diagram content\n                                const cleanContent = diagramContent.trim();\n                                if (!cleanContent) {\n                                    console.warn('[MERMAID] Empty diagram content, skipping element', index);\n                                    return;\n                                }\n                                \n                                // Basic validation - check if it looks like a mermaid diagram\n                                const validPrefixes = ['flowchart', 'graph', 'sequenceDiagram', 'classDiagram', 'stateDiagram', 'journey', 'gitgraph', 'pie'];\n                                const hasValidPrefix = validPrefixes.some(prefix => cleanContent.toLowerCase().startsWith(prefix.toLowerCase()));\n                                \n                                if (!hasValidPrefix) {\n                                    console.warn('[MERMAID] Content does not appear to be a valid mermaid diagram, skipping:', cleanContent.substring(0, 50) + '...');\n                                    return;\n                                }\n                                \n                                console.log('[MERMAID] Valid diagram content detected:', cleanContent.substring(0, 50) + '...');\n                                \n                                // Create container div\n                                const container = document.createElement('div');\n                                container.className = 'mermaid-container';\n                                \n                                // Create mermaid div\n                                const mermaidDiv = document.createElement('div');\n                                mermaidDiv.className = 'mermaid';\n                                mermaidDiv.textContent = cleanContent;\n                                \n                                container.appendChild(mermaidDiv);\n                                \n                                // Replace original mermaid element\n                                element.parentNode.replaceChild(container, element);\n                                console.log('[MERMAID] Replaced element', index, 'with container');\n                            } catch (error) {\n                                console.error('[MERMAID] Error processing element', index, ':', error);\n                            }\n                        });\n                        \n                        try {\n                            console.log('[MERMAID] About to call mermaid.run()');\n                            // Render all mermaid diagrams\n                            await mermaid.run();\n                            console.log('[MERMAID] All diagrams rendered successfully');\n                        } catch (error) {\n                            console.error('[MERMAID] Error rendering diagrams:', error);\n                            console.error('[MERMAID] Error stack:', error.stack);\n                        }\n                    }\n                    \n                    // Handle clicks on dialectic URLs and placement icons\n                    document.addEventListener('click', function(event) {\n                        const target = event.target;\n                        if (!target) return;\n                        \n                        // Handle placement icon clicks\n                        if (target.classList.contains('placement-icon')) {\n                            event.preventDefault();\n                            const symposiumUrl = target.getAttribute('data-symposium-url');\n                            const action = target.getAttribute('data-action');\n                            \n                            console.log('[Walkthrough] Placement icon clicked:', symposiumUrl, 'action:', action);\n                            \n                            if (action === 'relocate') {\n                                vscode.postMessage({\n                                    command: 'relocateLink',\n                                    symposiumUrl: symposiumUrl\n                                });\n                            } else {\n                                vscode.postMessage({\n                                    command: 'openFile',\n                                    symposiumUrl: symposiumUrl\n                                });\n                            }\n                            return;\n                        }\n                        \n                        // Check if clicked element or parent has dialectic URL (link text clicked)\n                        let element = target;\n                        while (element && element !== document) {\n                            const symposiumUrl = element.getAttribute('data-symposium-url');\n                            if (symposiumUrl && element.classList.contains('file-ref')) {\n                                event.preventDefault();\n                                console.log('[Walkthrough] Link text clicked - navigating:', symposiumUrl);\n                                \n                                vscode.postMessage({\n                                    command: 'openFile',\n                                    symposiumUrl: symposiumUrl\n                                });\n                                return;\n                            }\n                            element = element.parentElement;\n                        }\n                    });\n                    \n                    // Function to add placement icons to all dialectic links\n                    function addPlacementIcons() {\n                        console.log('[ICONS] Adding placement icons to dialectic links');\n                        const dialecticLinks = document.querySelectorAll('a[data-symposium-url]');\n                        console.log('[ICONS] Found', dialecticLinks.length, 'dialectic links');\n                        \n                        dialecticLinks.forEach((link, index) => {\n                            const symposiumUrl = link.getAttribute('data-symposium-url');\n                            console.log('[ICONS] Processing link', index, 'URL:', symposiumUrl);\n                            \n                            // Check if ANY placement icon already exists for this URL\n                            const existingIcons = document.querySelectorAll('.placement-icon[data-symposium-url="' + symposiumUrl + '"]');\n                            if (existingIcons.length > 0) {\n                                console.log('[ICONS] Icon already exists for URL:', symposiumUrl, 'count:', existingIcons.length);\n                                return;\n                            }\n                            \n                            // Create placement icon\n                            const icon = document.createElement('button');\n                            icon.className = 'placement-icon';\n                            icon.setAttribute('data-symposium-url', symposiumUrl);\n                            icon.setAttribute('data-action', 'place');\n                            icon.setAttribute('title', 'Place this link');\n                            icon.textContent = '🔍'; // Default to search icon\n                            \n                            // Insert icon after the link\n                            link.parentNode.insertBefore(icon, link.nextSibling);\n                            console.log('[ICONS] Added icon for link', index);\n                        });\n                    }\n\n                    // Function to update link rendering after placement changes\n                    function updateLinkPlacement(symposiumUrl, isPlaced) {\n                        console.log('[PLACEMENT] updateLinkPlacement called with:', symposiumUrl, 'isPlaced:', isPlaced);\n                        \n                        // Debug: show all placement icons in the DOM\n                        const allIcons = document.querySelectorAll('.placement-icon');\n                        console.log('[PLACEMENT] All placement icons in DOM:', allIcons.length);\n                        allIcons.forEach((icon, i) => {\n                            console.log('[PLACEMENT] Icon ' + i + ': data-symposium-url="' + icon.getAttribute('data-symposium-url') + '" text="' + icon.textContent + '"');\n                        });\n                        \n                        // Update placement icons\n                        const icons = document.querySelectorAll('.placement-icon[data-symposium-url="' + symposiumUrl + '"]');\n                        console.log('[PLACEMENT] Found', icons.length, 'icons to update for URL:', symposiumUrl);\n                        \n                        icons.forEach((icon, index) => {\n                            console.log('[PLACEMENT] Updating icon', index, 'current text:', icon.textContent);\n                            if (isPlaced) {\n                                icon.textContent = '📍';\n                                icon.setAttribute('data-action', 'relocate');\n                                icon.setAttribute('title', 'Relocate this link');\n                                console.log('[PLACEMENT] Set icon to 📍 (relocate)');\n                            } else {\n                                icon.textContent = '🔍';\n                                icon.setAttribute('data-action', 'place');\n                                icon.setAttribute('title', 'Place this link');\n                                console.log('[PLACEMENT] Set icon to 🔍 (place)');\n                            }\n                        });\n                        \n                        // Update link data attributes\n                        const links = document.querySelectorAll('.file-ref[data-symposium-url="' + symposiumUrl + '"]');\n                        console.log('[PLACEMENT] Found', links.length, 'links to update');\n                        links.forEach(link => {\n                            link.setAttribute('data-placement-state', isPlaced ? 'placed' : 'unplaced');\n                        });\n                    }\n                    \n                    // Function to update comment display after location selection\n                    function updateCommentDisplay(commentId, chosenLocation) {\n                        console.log('[COMMENT] updateCommentDisplay called with:', commentId, chosenLocation);\n                        \n                        // Find the comment item by ID\n                        const commentItems = document.querySelectorAll('.comment-item');\n                        commentItems.forEach(item => {\n                            try {\n                                const commentData = JSON.parse(decodeURIComponent(item.dataset.comment));\n                                if (commentData.id === commentId) {\n                                    // Update the location display\n                                    const locationElement = item.querySelector('.comment-locations .comment-location');\n                                    if (locationElement) {\n                                        locationElement.textContent = chosenLocation.path + ':' + chosenLocation.start.line;\n                                        console.log('[COMMENT] Updated location display for', commentId);\n                                    }\n                                }\n                            } catch (e) {\n                                console.error('[COMMENT] Error parsing comment data:', e);\n                            }\n                        });\n                    }\n                    \n                    // HTML parsing is now done server-side - no client-side parsing needed\n                    \n                    function renderMarkdown(text) {\n                        return text; // Content is already rendered HTML\n                    }\n                    \n                    function renderSection(title, items) {\n                        if (!items || items.length === 0) return '';\n                        \n                        let html = '<div class="section">';\n                        html += '<div class="section-title">' + title + '</div>';\n                        \n                        items.forEach(item => {\n                            if (typeof item === 'string') {\n                                // ResolvedMarkdownElement now serialized as plain string\n                                html += '<div class="content-item">' + renderMarkdown(item) + '</div>';\n                            } else if (typeof item === 'object' && 'locations' in item && 'comment' in item) {\n                                // ResolvedComment object sent directly (not wrapped)\n                                html += '<div class="content-item">';\n                                html += '<div class="comment-item" data-comment="' + encodeURIComponent(JSON.stringify(item)) + '">';\n                                html += '<div class="comment-icon">💬</div>';\n                                html += '<div class="comment-content">';\n                                \n                                // Smart location display for ambiguous comments\n                                html += '<div class="comment-locations">';\n                                if (item.locations.length === 1) {\n                                    // Unambiguous - show exact location\n                                    const loc = item.locations[0];\n                                    html += '<span class="comment-location">' + loc.path + ':' + loc.start.line + '</span>';\n                                } else {\n                                    // Ambiguous - check if all same file\n                                    const firstFile = item.locations[0].path;\n                                    const allSameFile = item.locations.every(loc => loc.path === firstFile);\n                                    \n                                    if (allSameFile) {\n                                        html += '<span class="comment-location">' + firstFile + ' 🔍</span>';\n                                    } else {\n                                        html += '<span class="comment-location">(' + item.locations.length + ' possible locations) 🔍</span>';\n                                    }\n                                }\n                                html += '</div>';\n                                \n                                if (item.comment && item.comment.length > 0) {\n                                    html += '<div class="comment-text">' + item.comment.join(' ') + '</div>';\n                                }\n                                html += '</div>';\n                                html += '</div>';\n                                html += '</div>';\n                            } else if (typeof item === 'object' && 'files' in item) {\n                                // GitDiffElement named field - {"files": FileChange[]}\n                                html += '<div class="content-item">';\n                                html += '<div class="gitdiff-container">';\n                                item.files.forEach(fileChange => {\n                                    html += '<div class="file-diff">';\n                                    html += '<div class="file-header">';\n                                    html += '<span class="file-path clickable-file" data-file-path="' + fileChange.path + '">' + fileChange.path + '</span>';\n                                    html += '<span class="file-stats">+' + fileChange.additions + ' -' + fileChange.deletions + '</span>';\n                                    html += '</div>';\n                                    html += '</div>';\n                                });\n                                html += '</div>';\n                                html += '</div>';\n                            } else if (item.Action && item.Action.button) {\n                                // Action wrapper object\n                                html += '<div class="content-item">';\n                                html += '<button class="action-button" data-tell-agent="' + \n                                       (item.Action.tell_agent || '').replace(/"/g, '&quot;') + '">' + \n                                       item.Action.button + '</button>';\n                                if (item.Action.description) {\n                                    html += '<div class="action-description">' + item.Action.description + '</div>';\n                                }\n                                html += '</div>';\n                            } else if (item.button) {\n                                // Direct action object with button property\n                                html += '<div class="content-item">';\n                                html += '<button class="action-button" data-tell-agent="' + \n                                       (item.tell_agent || '').replace(/"/g, '&quot;') + '">' + \n                                       item.button + '</button>';\n                                if (item.description) {\n                                    html += '<div class="action-description">' + item.description + '</div>';\n                                }\n                                html += '</div>';\n                            }\n                        });\n                        \n                        html += '</div>';\n                        return html;\n                    }\n                    \n                    function handleAction(message) {\n                        if (message) {\n                            vscode.postMessage({\n                                type: 'action',\n                                message: message\n                            });\n                        }\n                    }\n\n                    // Add event listener for action button clicks (CSP-compliant)\n                    document.addEventListener('click', (event) => {\n                        if (event.target.id === 'clear-walkthrough') {\n                            // Clear walkthrough and dismiss comments\n                            document.getElementById('content').innerHTML = '<div class="empty-state">No walkthrough loaded</div>';\n                            vscode.postMessage({\n                                type: 'clearWalkthrough'\n                            });\n                        } else if (event.target.tagName === 'BUTTON' && \n                            event.target.classList.contains('action-button') && \n                            event.target.dataset.tellAgent) {\n                            handleAction(event.target.dataset.tellAgent);\n                        } else if (event.target.classList.contains('clickable-file') && \n                                   event.target.dataset.filePath) {\n                            vscode.postMessage({\n                                type: 'showDiff',\n                                filePath: event.target.dataset.filePath\n                            });\n                        } else if (event.target.closest('.comment-item')) {\n                            const commentItem = event.target.closest('.comment-item');\n                            const commentData = JSON.parse(decodeURIComponent(commentItem.dataset.comment));\n                            vscode.postMessage({\n                                type: 'showComment',\n                                comment: commentData\n                            });\n                        }\n                    });\n                    \n                    window.addEventListener('message', event => {\n                        console.log('[WEBVIEW] Received message:', event.data);\n                        const message = event.data;\n                        if (message.type === 'walkthrough') {\n                            console.log('[WALKTHROUGH] Processing message with data:', message.data);\n                            const data = message.data;\n                            \n                            console.log('[SECTIONS] Walkthrough sections:', {\n                                introduction: data.introduction?.length || 0,\n                                highlights: data.highlights?.length || 0, \n                                changes: data.changes?.length || 0,\n                                actions: data.actions?.length || 0\n                            });\n                            \n                            let html = '';\n                            \n                            html += renderSection('Introduction', data.introduction);\n                            html += renderSection('Highlights', data.highlights);\n                            html += renderSection('Changes', data.changes);\n                            html += renderSection('Actions', data.actions);\n                            \n                            console.log('[HTML] Generated HTML length:', html.length);\n                            const finalHtml = html || '<div class="empty-state">Empty walkthrough</div>';\n                            console.log('[UPDATE] Setting innerHTML to content element');\n                            \n                            const contentElement = document.getElementById('content');\n                            if (contentElement) {\n                                contentElement.innerHTML = finalHtml;\n                                console.log('[SUCCESS] Content updated successfully');\n                                \n                                // Add placement icons to all dialectic links\n                                addPlacementIcons();\n                                \n                                // Process mermaid diagrams\n                                processMermaidDiagrams();\n                                \n                                // Restore user interaction state (scroll position, etc.)\n                                restoreOffscreenState();\n                            } else {\n                                console.error('[ERROR] Content element not found!');\n                            }\n                        } else if (message.type === 'updateLinkPlacement') {\n                            console.log('[PLACEMENT] Updating link placement:', message.symposiumUrl, 'isPlaced:', message.isPlaced);\n                            updateLinkPlacement(message.symposiumUrl, message.isPlaced);\n                        } else if (message.type === 'updateCommentDisplay') {\n                            console.log('[COMMENT] Updating comment display:', message.commentId, message.chosenLocation);\n                            updateCommentDisplay(message.commentId, message.chosenLocation);\n                        } else if (message.type === 'showWalkthroughHtml') {\n                            console.log('[HTML] Showing walkthrough HTML content, length:', message.content.length);\n                            console.log('[HTML] Content preview:', message.content.substring(0, 200) + '...');\n                            \n                            const contentElement = document.getElementById('content');\n                            if (contentElement) {\n                                console.log('[HTML] Setting HTML content directly (server-rendered)');\n                                contentElement.innerHTML = message.content;\n                                console.log('[SUCCESS] HTML content set');\n                                \n                                // Add placement icons to all dialectic links\n                                addPlacementIcons();\n                                \n                                // Process mermaid diagrams in the HTML content\n                                processMermaidDiagrams();\n                                \n                                // Restore user interaction state (scroll position, etc.)\n                                restoreOffscreenState();\n                            } else {\n                                console.error('[ERROR] Content element not found!');\n                            }\n                        } else {\n                            console.log('[IGNORE] Ignoring message type:', message.type);\n                        }\n                    });\n                    \n                    // Notify extension that webview is ready\n                    console.log('[WEBVIEW] Sending ready message to extension');\n                    vscode.postMessage({\n                        command: 'ready'\n                    });\n                    console.log('[WEBVIEW] Ready message sent');\n                <\/script>\n            </body>\n            </html>`;return this.bus.outputChannel.appendLine("-----------------------------------------"),this.bus.outputChannel.appendLine("WEBVIEW HTML FOLLOWS:"),this.bus.outputChannel.appendLine(n),this.bus.outputChannel.appendLine("-----------------------------------------"),n}dispose(){this.commentController&&(this.commentController.dispose(),this.commentController=void 0)}}t.WalkthroughWebviewProvider=l,l.viewType="symposium.walkthrough"},444:(e,t,n)=>{n.r(t),n.d(t,{decode:()=>y,default:()=>_,encode:()=>C,toASCII:()=>v,toUnicode:()=>k,ucs2decode:()=>p,ucs2encode:()=>m});const r=2147483647,o=36,i=/^xn--/,s=/[^\0-\x7F]/,a=/[\x2E\u3002\uFF0E\uFF61]/g,c={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},l=Math.floor,u=String.fromCharCode;function d(e){throw new RangeError(c[e])}function h(e,t){const n=e.split("@");let r="";n.length>1&&(r=n[0]+"@",e=n[1]);const o=function(e,t){const n=[];let r=e.length;for(;r--;)n[r]=t(e[r]);return n}((e=e.replace(a,".")).split("."),t).join(".");return r+o}function p(e){const t=[];let n=0;const r=e.length;for(;n<r;){const o=e.charCodeAt(n++);if(o>=55296&&o<=56319&&n<r){const r=e.charCodeAt(n++);56320==(64512&r)?t.push(((1023&o)<<10)+(1023&r)+65536):(t.push(o),n--)}else t.push(o)}return t}const m=e=>String.fromCodePoint(...e),f=function(e){return e>=48&&e<58?e-48+26:e>=65&&e<91?e-65:e>=97&&e<123?e-97:o},g=function(e,t){return e+22+75*(e<26)-((0!=t)<<5)},b=function(e,t,n){let r=0;for(e=n?l(e/700):e>>1,e+=l(e/t);e>455;r+=o)e=l(e/35);return l(r+36*e/(e+38))},y=function(e){const t=[],n=e.length;let i=0,s=128,a=72,c=e.lastIndexOf("-");c<0&&(c=0);for(let n=0;n<c;++n)e.charCodeAt(n)>=128&&d("not-basic"),t.push(e.charCodeAt(n));for(let u=c>0?c+1:0;u<n;){const c=i;for(let t=1,s=o;;s+=o){u>=n&&d("invalid-input");const c=f(e.charCodeAt(u++));c>=o&&d("invalid-input"),c>l((r-i)/t)&&d("overflow"),i+=c*t;const h=s<=a?1:s>=a+26?26:s-a;if(c<h)break;const p=o-h;t>l(r/p)&&d("overflow"),t*=p}const h=t.length+1;a=b(i-c,h,0==c),l(i/h)>r-s&&d("overflow"),s+=l(i/h),i%=h,t.splice(i++,0,s)}return String.fromCodePoint(...t)},C=function(e){const t=[],n=(e=p(e)).length;let i=128,s=0,a=72;for(const n of e)n<128&&t.push(u(n));const c=t.length;let h=c;for(c&&t.push("-");h<n;){let n=r;for(const t of e)t>=i&&t<n&&(n=t);const p=h+1;n-i>l((r-s)/p)&&d("overflow"),s+=(n-i)*p,i=n;for(const n of e)if(n<i&&++s>r&&d("overflow"),n===i){let e=s;for(let n=o;;n+=o){const r=n<=a?1:n>=a+26?26:n-a;if(e<r)break;const i=e-r,s=o-r;t.push(u(g(r+i%s,0))),e=l(i/s)}t.push(u(g(e,0))),a=b(s,p,h===c),s=0,++h}++s,++i}return t.join("")},k=function(e){return h(e,function(e){return i.test(e)?y(e.slice(4).toLowerCase()):e})},v=function(e){return h(e,function(e){return s.test(e)?"xn--"+C(e):e})},_={version:"2.3.1",ucs2:{decode:p,encode:m},decode:y,encode:C,toASCII:v,toUnicode:k}},492:(e,t)=>{t.Any=/[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,t.Cc=/[\0-\x1F\x7F-\x9F]/,t.Cf=/[\xAD\u0600-\u0605\u061C\u06DD\u070F\u0890\u0891\u08E2\u180E\u200B-\u200F\u202A-\u202E\u2060-\u2064\u2066-\u206F\uFEFF\uFFF9-\uFFFB]|\uD804[\uDCBD\uDCCD]|\uD80D[\uDC30-\uDC3F]|\uD82F[\uDCA0-\uDCA3]|\uD834[\uDD73-\uDD7A]|\uDB40[\uDC01\uDC20-\uDC7F]/,t.P=/[!-#%-\*,-\/:;\?@\[-\]_\{\}\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061D-\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1B7D\u1B7E\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u2E52-\u2E5D\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDEAD\uDF55-\uDF59\uDF86-\uDF89]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5A\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDEB9\uDF3C-\uDF3E]|\uD806[\uDC3B\uDD44-\uDD46\uDDE2\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2\uDF00-\uDF09]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8\uDF43-\uDF4F\uDFFF]|\uD809[\uDC70-\uDC74]|\uD80B[\uDFF1\uDFF2]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD81B[\uDE97-\uDE9A\uDFE2]|\uD82F\uDC9F|\uD836[\uDE87-\uDE8B]|\uD83A[\uDD5E\uDD5F]/,t.S=/[\$\+<->\^`\|~\xA2-\xA6\xA8\xA9\xAC\xAE-\xB1\xB4\xB8\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u02FF\u0375\u0384\u0385\u03F6\u0482\u058D-\u058F\u0606-\u0608\u060B\u060E\u060F\u06DE\u06E9\u06FD\u06FE\u07F6\u07FE\u07FF\u0888\u09F2\u09F3\u09FA\u09FB\u0AF1\u0B70\u0BF3-\u0BFA\u0C7F\u0D4F\u0D79\u0E3F\u0F01-\u0F03\u0F13\u0F15-\u0F17\u0F1A-\u0F1F\u0F34\u0F36\u0F38\u0FBE-\u0FC5\u0FC7-\u0FCC\u0FCE\u0FCF\u0FD5-\u0FD8\u109E\u109F\u1390-\u1399\u166D\u17DB\u1940\u19DE-\u19FF\u1B61-\u1B6A\u1B74-\u1B7C\u1FBD\u1FBF-\u1FC1\u1FCD-\u1FCF\u1FDD-\u1FDF\u1FED-\u1FEF\u1FFD\u1FFE\u2044\u2052\u207A-\u207C\u208A-\u208C\u20A0-\u20C0\u2100\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F\u218A\u218B\u2190-\u2307\u230C-\u2328\u232B-\u2426\u2440-\u244A\u249C-\u24E9\u2500-\u2767\u2794-\u27C4\u27C7-\u27E5\u27F0-\u2982\u2999-\u29D7\u29DC-\u29FB\u29FE-\u2B73\u2B76-\u2B95\u2B97-\u2BFF\u2CE5-\u2CEA\u2E50\u2E51\u2E80-\u2E99\u2E9B-\u2EF3\u2F00-\u2FD5\u2FF0-\u2FFF\u3004\u3012\u3013\u3020\u3036\u3037\u303E\u303F\u309B\u309C\u3190\u3191\u3196-\u319F\u31C0-\u31E3\u31EF\u3200-\u321E\u322A-\u3247\u3250\u3260-\u327F\u328A-\u32B0\u32C0-\u33FF\u4DC0-\u4DFF\uA490-\uA4C6\uA700-\uA716\uA720\uA721\uA789\uA78A\uA828-\uA82B\uA836-\uA839\uAA77-\uAA79\uAB5B\uAB6A\uAB6B\uFB29\uFBB2-\uFBC2\uFD40-\uFD4F\uFDCF\uFDFC-\uFDFF\uFE62\uFE64-\uFE66\uFE69\uFF04\uFF0B\uFF1C-\uFF1E\uFF3E\uFF40\uFF5C\uFF5E\uFFE0-\uFFE6\uFFE8-\uFFEE\uFFFC\uFFFD]|\uD800[\uDD37-\uDD3F\uDD79-\uDD89\uDD8C-\uDD8E\uDD90-\uDD9C\uDDA0\uDDD0-\uDDFC]|\uD802[\uDC77\uDC78\uDEC8]|\uD805\uDF3F|\uD807[\uDFD5-\uDFF1]|\uD81A[\uDF3C-\uDF3F\uDF45]|\uD82F\uDC9C|\uD833[\uDF50-\uDFC3]|\uD834[\uDC00-\uDCF5\uDD00-\uDD26\uDD29-\uDD64\uDD6A-\uDD6C\uDD83\uDD84\uDD8C-\uDDA9\uDDAE-\uDDEA\uDE00-\uDE41\uDE45\uDF00-\uDF56]|\uD835[\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3]|\uD836[\uDC00-\uDDFF\uDE37-\uDE3A\uDE6D-\uDE74\uDE76-\uDE83\uDE85\uDE86]|\uD838[\uDD4F\uDEFF]|\uD83B[\uDCAC\uDCB0\uDD2E\uDEF0\uDEF1]|\uD83C[\uDC00-\uDC2B\uDC30-\uDC93\uDCA0-\uDCAE\uDCB1-\uDCBF\uDCC1-\uDCCF\uDCD1-\uDCF5\uDD0D-\uDDAD\uDDE6-\uDE02\uDE10-\uDE3B\uDE40-\uDE48\uDE50\uDE51\uDE60-\uDE65\uDF00-\uDFFF]|\uD83D[\uDC00-\uDED7\uDEDC-\uDEEC\uDEF0-\uDEFC\uDF00-\uDF76\uDF7B-\uDFD9\uDFE0-\uDFEB\uDFF0]|\uD83E[\uDC00-\uDC0B\uDC10-\uDC47\uDC50-\uDC59\uDC60-\uDC87\uDC90-\uDCAD\uDCB0\uDCB1\uDD00-\uDE53\uDE60-\uDE6D\uDE70-\uDE7C\uDE80-\uDE88\uDE90-\uDEBD\uDEBF-\uDEC5\uDECE-\uDEDB\uDEE0-\uDEE8\uDEF0-\uDEF8\uDF00-\uDF92\uDF94-\uDFCA]/,t.Z=/[ \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]/},504:(e,t)=>{function n(e){for(var t=1;t<e.length;t++)e[t][0]+=e[t-1][0]+1;return e}Object.defineProperty(t,"__esModule",{value:!0}),t.default=new Map(n([[9,"&Tab;"],[0,"&NewLine;"],[22,"&excl;"],[0,"&quot;"],[0,"&num;"],[0,"&dollar;"],[0,"&percnt;"],[0,"&amp;"],[0,"&apos;"],[0,"&lpar;"],[0,"&rpar;"],[0,"&ast;"],[0,"&plus;"],[0,"&comma;"],[1,"&period;"],[0,"&sol;"],[10,"&colon;"],[0,"&semi;"],[0,{v:"&lt;",n:8402,o:"&nvlt;"}],[0,{v:"&equals;",n:8421,o:"&bne;"}],[0,{v:"&gt;",n:8402,o:"&nvgt;"}],[0,"&quest;"],[0,"&commat;"],[26,"&lbrack;"],[0,"&bsol;"],[0,"&rbrack;"],[0,"&Hat;"],[0,"&lowbar;"],[0,"&DiacriticalGrave;"],[5,{n:106,o:"&fjlig;"}],[20,"&lbrace;"],[0,"&verbar;"],[0,"&rbrace;"],[34,"&nbsp;"],[0,"&iexcl;"],[0,"&cent;"],[0,"&pound;"],[0,"&curren;"],[0,"&yen;"],[0,"&brvbar;"],[0,"&sect;"],[0,"&die;"],[0,"&copy;"],[0,"&ordf;"],[0,"&laquo;"],[0,"&not;"],[0,"&shy;"],[0,"&circledR;"],[0,"&macr;"],[0,"&deg;"],[0,"&PlusMinus;"],[0,"&sup2;"],[0,"&sup3;"],[0,"&acute;"],[0,"&micro;"],[0,"&para;"],[0,"&centerdot;"],[0,"&cedil;"],[0,"&sup1;"],[0,"&ordm;"],[0,"&raquo;"],[0,"&frac14;"],[0,"&frac12;"],[0,"&frac34;"],[0,"&iquest;"],[0,"&Agrave;"],[0,"&Aacute;"],[0,"&Acirc;"],[0,"&Atilde;"],[0,"&Auml;"],[0,"&angst;"],[0,"&AElig;"],[0,"&Ccedil;"],[0,"&Egrave;"],[0,"&Eacute;"],[0,"&Ecirc;"],[0,"&Euml;"],[0,"&Igrave;"],[0,"&Iacute;"],[0,"&Icirc;"],[0,"&Iuml;"],[0,"&ETH;"],[0,"&Ntilde;"],[0,"&Ograve;"],[0,"&Oacute;"],[0,"&Ocirc;"],[0,"&Otilde;"],[0,"&Ouml;"],[0,"&times;"],[0,"&Oslash;"],[0,"&Ugrave;"],[0,"&Uacute;"],[0,"&Ucirc;"],[0,"&Uuml;"],[0,"&Yacute;"],[0,"&THORN;"],[0,"&szlig;"],[0,"&agrave;"],[0,"&aacute;"],[0,"&acirc;"],[0,"&atilde;"],[0,"&auml;"],[0,"&aring;"],[0,"&aelig;"],[0,"&ccedil;"],[0,"&egrave;"],[0,"&eacute;"],[0,"&ecirc;"],[0,"&euml;"],[0,"&igrave;"],[0,"&iacute;"],[0,"&icirc;"],[0,"&iuml;"],[0,"&eth;"],[0,"&ntilde;"],[0,"&ograve;"],[0,"&oacute;"],[0,"&ocirc;"],[0,"&otilde;"],[0,"&ouml;"],[0,"&div;"],[0,"&oslash;"],[0,"&ugrave;"],[0,"&uacute;"],[0,"&ucirc;"],[0,"&uuml;"],[0,"&yacute;"],[0,"&thorn;"],[0,"&yuml;"],[0,"&Amacr;"],[0,"&amacr;"],[0,"&Abreve;"],[0,"&abreve;"],[0,"&Aogon;"],[0,"&aogon;"],[0,"&Cacute;"],[0,"&cacute;"],[0,"&Ccirc;"],[0,"&ccirc;"],[0,"&Cdot;"],[0,"&cdot;"],[0,"&Ccaron;"],[0,"&ccaron;"],[0,"&Dcaron;"],[0,"&dcaron;"],[0,"&Dstrok;"],[0,"&dstrok;"],[0,"&Emacr;"],[0,"&emacr;"],[2,"&Edot;"],[0,"&edot;"],[0,"&Eogon;"],[0,"&eogon;"],[0,"&Ecaron;"],[0,"&ecaron;"],[0,"&Gcirc;"],[0,"&gcirc;"],[0,"&Gbreve;"],[0,"&gbreve;"],[0,"&Gdot;"],[0,"&gdot;"],[0,"&Gcedil;"],[1,"&Hcirc;"],[0,"&hcirc;"],[0,"&Hstrok;"],[0,"&hstrok;"],[0,"&Itilde;"],[0,"&itilde;"],[0,"&Imacr;"],[0,"&imacr;"],[2,"&Iogon;"],[0,"&iogon;"],[0,"&Idot;"],[0,"&imath;"],[0,"&IJlig;"],[0,"&ijlig;"],[0,"&Jcirc;"],[0,"&jcirc;"],[0,"&Kcedil;"],[0,"&kcedil;"],[0,"&kgreen;"],[0,"&Lacute;"],[0,"&lacute;"],[0,"&Lcedil;"],[0,"&lcedil;"],[0,"&Lcaron;"],[0,"&lcaron;"],[0,"&Lmidot;"],[0,"&lmidot;"],[0,"&Lstrok;"],[0,"&lstrok;"],[0,"&Nacute;"],[0,"&nacute;"],[0,"&Ncedil;"],[0,"&ncedil;"],[0,"&Ncaron;"],[0,"&ncaron;"],[0,"&napos;"],[0,"&ENG;"],[0,"&eng;"],[0,"&Omacr;"],[0,"&omacr;"],[2,"&Odblac;"],[0,"&odblac;"],[0,"&OElig;"],[0,"&oelig;"],[0,"&Racute;"],[0,"&racute;"],[0,"&Rcedil;"],[0,"&rcedil;"],[0,"&Rcaron;"],[0,"&rcaron;"],[0,"&Sacute;"],[0,"&sacute;"],[0,"&Scirc;"],[0,"&scirc;"],[0,"&Scedil;"],[0,"&scedil;"],[0,"&Scaron;"],[0,"&scaron;"],[0,"&Tcedil;"],[0,"&tcedil;"],[0,"&Tcaron;"],[0,"&tcaron;"],[0,"&Tstrok;"],[0,"&tstrok;"],[0,"&Utilde;"],[0,"&utilde;"],[0,"&Umacr;"],[0,"&umacr;"],[0,"&Ubreve;"],[0,"&ubreve;"],[0,"&Uring;"],[0,"&uring;"],[0,"&Udblac;"],[0,"&udblac;"],[0,"&Uogon;"],[0,"&uogon;"],[0,"&Wcirc;"],[0,"&wcirc;"],[0,"&Ycirc;"],[0,"&ycirc;"],[0,"&Yuml;"],[0,"&Zacute;"],[0,"&zacute;"],[0,"&Zdot;"],[0,"&zdot;"],[0,"&Zcaron;"],[0,"&zcaron;"],[19,"&fnof;"],[34,"&imped;"],[63,"&gacute;"],[65,"&jmath;"],[142,"&circ;"],[0,"&caron;"],[16,"&breve;"],[0,"&DiacriticalDot;"],[0,"&ring;"],[0,"&ogon;"],[0,"&DiacriticalTilde;"],[0,"&dblac;"],[51,"&DownBreve;"],[127,"&Alpha;"],[0,"&Beta;"],[0,"&Gamma;"],[0,"&Delta;"],[0,"&Epsilon;"],[0,"&Zeta;"],[0,"&Eta;"],[0,"&Theta;"],[0,"&Iota;"],[0,"&Kappa;"],[0,"&Lambda;"],[0,"&Mu;"],[0,"&Nu;"],[0,"&Xi;"],[0,"&Omicron;"],[0,"&Pi;"],[0,"&Rho;"],[1,"&Sigma;"],[0,"&Tau;"],[0,"&Upsilon;"],[0,"&Phi;"],[0,"&Chi;"],[0,"&Psi;"],[0,"&ohm;"],[7,"&alpha;"],[0,"&beta;"],[0,"&gamma;"],[0,"&delta;"],[0,"&epsi;"],[0,"&zeta;"],[0,"&eta;"],[0,"&theta;"],[0,"&iota;"],[0,"&kappa;"],[0,"&lambda;"],[0,"&mu;"],[0,"&nu;"],[0,"&xi;"],[0,"&omicron;"],[0,"&pi;"],[0,"&rho;"],[0,"&sigmaf;"],[0,"&sigma;"],[0,"&tau;"],[0,"&upsi;"],[0,"&phi;"],[0,"&chi;"],[0,"&psi;"],[0,"&omega;"],[7,"&thetasym;"],[0,"&Upsi;"],[2,"&phiv;"],[0,"&piv;"],[5,"&Gammad;"],[0,"&digamma;"],[18,"&kappav;"],[0,"&rhov;"],[3,"&epsiv;"],[0,"&backepsilon;"],[10,"&IOcy;"],[0,"&DJcy;"],[0,"&GJcy;"],[0,"&Jukcy;"],[0,"&DScy;"],[0,"&Iukcy;"],[0,"&YIcy;"],[0,"&Jsercy;"],[0,"&LJcy;"],[0,"&NJcy;"],[0,"&TSHcy;"],[0,"&KJcy;"],[1,"&Ubrcy;"],[0,"&DZcy;"],[0,"&Acy;"],[0,"&Bcy;"],[0,"&Vcy;"],[0,"&Gcy;"],[0,"&Dcy;"],[0,"&IEcy;"],[0,"&ZHcy;"],[0,"&Zcy;"],[0,"&Icy;"],[0,"&Jcy;"],[0,"&Kcy;"],[0,"&Lcy;"],[0,"&Mcy;"],[0,"&Ncy;"],[0,"&Ocy;"],[0,"&Pcy;"],[0,"&Rcy;"],[0,"&Scy;"],[0,"&Tcy;"],[0,"&Ucy;"],[0,"&Fcy;"],[0,"&KHcy;"],[0,"&TScy;"],[0,"&CHcy;"],[0,"&SHcy;"],[0,"&SHCHcy;"],[0,"&HARDcy;"],[0,"&Ycy;"],[0,"&SOFTcy;"],[0,"&Ecy;"],[0,"&YUcy;"],[0,"&YAcy;"],[0,"&acy;"],[0,"&bcy;"],[0,"&vcy;"],[0,"&gcy;"],[0,"&dcy;"],[0,"&iecy;"],[0,"&zhcy;"],[0,"&zcy;"],[0,"&icy;"],[0,"&jcy;"],[0,"&kcy;"],[0,"&lcy;"],[0,"&mcy;"],[0,"&ncy;"],[0,"&ocy;"],[0,"&pcy;"],[0,"&rcy;"],[0,"&scy;"],[0,"&tcy;"],[0,"&ucy;"],[0,"&fcy;"],[0,"&khcy;"],[0,"&tscy;"],[0,"&chcy;"],[0,"&shcy;"],[0,"&shchcy;"],[0,"&hardcy;"],[0,"&ycy;"],[0,"&softcy;"],[0,"&ecy;"],[0,"&yucy;"],[0,"&yacy;"],[1,"&iocy;"],[0,"&djcy;"],[0,"&gjcy;"],[0,"&jukcy;"],[0,"&dscy;"],[0,"&iukcy;"],[0,"&yicy;"],[0,"&jsercy;"],[0,"&ljcy;"],[0,"&njcy;"],[0,"&tshcy;"],[0,"&kjcy;"],[1,"&ubrcy;"],[0,"&dzcy;"],[7074,"&ensp;"],[0,"&emsp;"],[0,"&emsp13;"],[0,"&emsp14;"],[1,"&numsp;"],[0,"&puncsp;"],[0,"&ThinSpace;"],[0,"&hairsp;"],[0,"&NegativeMediumSpace;"],[0,"&zwnj;"],[0,"&zwj;"],[0,"&lrm;"],[0,"&rlm;"],[0,"&dash;"],[2,"&ndash;"],[0,"&mdash;"],[0,"&horbar;"],[0,"&Verbar;"],[1,"&lsquo;"],[0,"&CloseCurlyQuote;"],[0,"&lsquor;"],[1,"&ldquo;"],[0,"&CloseCurlyDoubleQuote;"],[0,"&bdquo;"],[1,"&dagger;"],[0,"&Dagger;"],[0,"&bull;"],[2,"&nldr;"],[0,"&hellip;"],[9,"&permil;"],[0,"&pertenk;"],[0,"&prime;"],[0,"&Prime;"],[0,"&tprime;"],[0,"&backprime;"],[3,"&lsaquo;"],[0,"&rsaquo;"],[3,"&oline;"],[2,"&caret;"],[1,"&hybull;"],[0,"&frasl;"],[10,"&bsemi;"],[7,"&qprime;"],[7,{v:"&MediumSpace;",n:8202,o:"&ThickSpace;"}],[0,"&NoBreak;"],[0,"&af;"],[0,"&InvisibleTimes;"],[0,"&ic;"],[72,"&euro;"],[46,"&tdot;"],[0,"&DotDot;"],[37,"&complexes;"],[2,"&incare;"],[4,"&gscr;"],[0,"&hamilt;"],[0,"&Hfr;"],[0,"&Hopf;"],[0,"&planckh;"],[0,"&hbar;"],[0,"&imagline;"],[0,"&Ifr;"],[0,"&lagran;"],[0,"&ell;"],[1,"&naturals;"],[0,"&numero;"],[0,"&copysr;"],[0,"&weierp;"],[0,"&Popf;"],[0,"&Qopf;"],[0,"&realine;"],[0,"&real;"],[0,"&reals;"],[0,"&rx;"],[3,"&trade;"],[1,"&integers;"],[2,"&mho;"],[0,"&zeetrf;"],[0,"&iiota;"],[2,"&bernou;"],[0,"&Cayleys;"],[1,"&escr;"],[0,"&Escr;"],[0,"&Fouriertrf;"],[1,"&Mellintrf;"],[0,"&order;"],[0,"&alefsym;"],[0,"&beth;"],[0,"&gimel;"],[0,"&daleth;"],[12,"&CapitalDifferentialD;"],[0,"&dd;"],[0,"&ee;"],[0,"&ii;"],[10,"&frac13;"],[0,"&frac23;"],[0,"&frac15;"],[0,"&frac25;"],[0,"&frac35;"],[0,"&frac45;"],[0,"&frac16;"],[0,"&frac56;"],[0,"&frac18;"],[0,"&frac38;"],[0,"&frac58;"],[0,"&frac78;"],[49,"&larr;"],[0,"&ShortUpArrow;"],[0,"&rarr;"],[0,"&darr;"],[0,"&harr;"],[0,"&updownarrow;"],[0,"&nwarr;"],[0,"&nearr;"],[0,"&LowerRightArrow;"],[0,"&LowerLeftArrow;"],[0,"&nlarr;"],[0,"&nrarr;"],[1,{v:"&rarrw;",n:824,o:"&nrarrw;"}],[0,"&Larr;"],[0,"&Uarr;"],[0,"&Rarr;"],[0,"&Darr;"],[0,"&larrtl;"],[0,"&rarrtl;"],[0,"&LeftTeeArrow;"],[0,"&mapstoup;"],[0,"&map;"],[0,"&DownTeeArrow;"],[1,"&hookleftarrow;"],[0,"&hookrightarrow;"],[0,"&larrlp;"],[0,"&looparrowright;"],[0,"&harrw;"],[0,"&nharr;"],[1,"&lsh;"],[0,"&rsh;"],[0,"&ldsh;"],[0,"&rdsh;"],[1,"&crarr;"],[0,"&cularr;"],[0,"&curarr;"],[2,"&circlearrowleft;"],[0,"&circlearrowright;"],[0,"&leftharpoonup;"],[0,"&DownLeftVector;"],[0,"&RightUpVector;"],[0,"&LeftUpVector;"],[0,"&rharu;"],[0,"&DownRightVector;"],[0,"&dharr;"],[0,"&dharl;"],[0,"&RightArrowLeftArrow;"],[0,"&udarr;"],[0,"&LeftArrowRightArrow;"],[0,"&leftleftarrows;"],[0,"&upuparrows;"],[0,"&rightrightarrows;"],[0,"&ddarr;"],[0,"&leftrightharpoons;"],[0,"&Equilibrium;"],[0,"&nlArr;"],[0,"&nhArr;"],[0,"&nrArr;"],[0,"&DoubleLeftArrow;"],[0,"&DoubleUpArrow;"],[0,"&DoubleRightArrow;"],[0,"&dArr;"],[0,"&DoubleLeftRightArrow;"],[0,"&DoubleUpDownArrow;"],[0,"&nwArr;"],[0,"&neArr;"],[0,"&seArr;"],[0,"&swArr;"],[0,"&lAarr;"],[0,"&rAarr;"],[1,"&zigrarr;"],[6,"&larrb;"],[0,"&rarrb;"],[15,"&DownArrowUpArrow;"],[7,"&loarr;"],[0,"&roarr;"],[0,"&hoarr;"],[0,"&forall;"],[0,"&comp;"],[0,{v:"&part;",n:824,o:"&npart;"}],[0,"&exist;"],[0,"&nexist;"],[0,"&empty;"],[1,"&Del;"],[0,"&Element;"],[0,"&NotElement;"],[1,"&ni;"],[0,"&notni;"],[2,"&prod;"],[0,"&coprod;"],[0,"&sum;"],[0,"&minus;"],[0,"&MinusPlus;"],[0,"&dotplus;"],[1,"&Backslash;"],[0,"&lowast;"],[0,"&compfn;"],[1,"&radic;"],[2,"&prop;"],[0,"&infin;"],[0,"&angrt;"],[0,{v:"&ang;",n:8402,o:"&nang;"}],[0,"&angmsd;"],[0,"&angsph;"],[0,"&mid;"],[0,"&nmid;"],[0,"&DoubleVerticalBar;"],[0,"&NotDoubleVerticalBar;"],[0,"&and;"],[0,"&or;"],[0,{v:"&cap;",n:65024,o:"&caps;"}],[0,{v:"&cup;",n:65024,o:"&cups;"}],[0,"&int;"],[0,"&Int;"],[0,"&iiint;"],[0,"&conint;"],[0,"&Conint;"],[0,"&Cconint;"],[0,"&cwint;"],[0,"&ClockwiseContourIntegral;"],[0,"&awconint;"],[0,"&there4;"],[0,"&becaus;"],[0,"&ratio;"],[0,"&Colon;"],[0,"&dotminus;"],[1,"&mDDot;"],[0,"&homtht;"],[0,{v:"&sim;",n:8402,o:"&nvsim;"}],[0,{v:"&backsim;",n:817,o:"&race;"}],[0,{v:"&ac;",n:819,o:"&acE;"}],[0,"&acd;"],[0,"&VerticalTilde;"],[0,"&NotTilde;"],[0,{v:"&eqsim;",n:824,o:"&nesim;"}],[0,"&sime;"],[0,"&NotTildeEqual;"],[0,"&cong;"],[0,"&simne;"],[0,"&ncong;"],[0,"&ap;"],[0,"&nap;"],[0,"&ape;"],[0,{v:"&apid;",n:824,o:"&napid;"}],[0,"&backcong;"],[0,{v:"&asympeq;",n:8402,o:"&nvap;"}],[0,{v:"&bump;",n:824,o:"&nbump;"}],[0,{v:"&bumpe;",n:824,o:"&nbumpe;"}],[0,{v:"&doteq;",n:824,o:"&nedot;"}],[0,"&doteqdot;"],[0,"&efDot;"],[0,"&erDot;"],[0,"&Assign;"],[0,"&ecolon;"],[0,"&ecir;"],[0,"&circeq;"],[1,"&wedgeq;"],[0,"&veeeq;"],[1,"&triangleq;"],[2,"&equest;"],[0,"&ne;"],[0,{v:"&Congruent;",n:8421,o:"&bnequiv;"}],[0,"&nequiv;"],[1,{v:"&le;",n:8402,o:"&nvle;"}],[0,{v:"&ge;",n:8402,o:"&nvge;"}],[0,{v:"&lE;",n:824,o:"&nlE;"}],[0,{v:"&gE;",n:824,o:"&ngE;"}],[0,{v:"&lnE;",n:65024,o:"&lvertneqq;"}],[0,{v:"&gnE;",n:65024,o:"&gvertneqq;"}],[0,{v:"&ll;",n:new Map(n([[824,"&nLtv;"],[7577,"&nLt;"]]))}],[0,{v:"&gg;",n:new Map(n([[824,"&nGtv;"],[7577,"&nGt;"]]))}],[0,"&between;"],[0,"&NotCupCap;"],[0,"&nless;"],[0,"&ngt;"],[0,"&nle;"],[0,"&nge;"],[0,"&lesssim;"],[0,"&GreaterTilde;"],[0,"&nlsim;"],[0,"&ngsim;"],[0,"&LessGreater;"],[0,"&gl;"],[0,"&NotLessGreater;"],[0,"&NotGreaterLess;"],[0,"&pr;"],[0,"&sc;"],[0,"&prcue;"],[0,"&sccue;"],[0,"&PrecedesTilde;"],[0,{v:"&scsim;",n:824,o:"&NotSucceedsTilde;"}],[0,"&NotPrecedes;"],[0,"&NotSucceeds;"],[0,{v:"&sub;",n:8402,o:"&NotSubset;"}],[0,{v:"&sup;",n:8402,o:"&NotSuperset;"}],[0,"&nsub;"],[0,"&nsup;"],[0,"&sube;"],[0,"&supe;"],[0,"&NotSubsetEqual;"],[0,"&NotSupersetEqual;"],[0,{v:"&subne;",n:65024,o:"&varsubsetneq;"}],[0,{v:"&supne;",n:65024,o:"&varsupsetneq;"}],[1,"&cupdot;"],[0,"&UnionPlus;"],[0,{v:"&sqsub;",n:824,o:"&NotSquareSubset;"}],[0,{v:"&sqsup;",n:824,o:"&NotSquareSuperset;"}],[0,"&sqsube;"],[0,"&sqsupe;"],[0,{v:"&sqcap;",n:65024,o:"&sqcaps;"}],[0,{v:"&sqcup;",n:65024,o:"&sqcups;"}],[0,"&CirclePlus;"],[0,"&CircleMinus;"],[0,"&CircleTimes;"],[0,"&osol;"],[0,"&CircleDot;"],[0,"&circledcirc;"],[0,"&circledast;"],[1,"&circleddash;"],[0,"&boxplus;"],[0,"&boxminus;"],[0,"&boxtimes;"],[0,"&dotsquare;"],[0,"&RightTee;"],[0,"&dashv;"],[0,"&DownTee;"],[0,"&bot;"],[1,"&models;"],[0,"&DoubleRightTee;"],[0,"&Vdash;"],[0,"&Vvdash;"],[0,"&VDash;"],[0,"&nvdash;"],[0,"&nvDash;"],[0,"&nVdash;"],[0,"&nVDash;"],[0,"&prurel;"],[1,"&LeftTriangle;"],[0,"&RightTriangle;"],[0,{v:"&LeftTriangleEqual;",n:8402,o:"&nvltrie;"}],[0,{v:"&RightTriangleEqual;",n:8402,o:"&nvrtrie;"}],[0,"&origof;"],[0,"&imof;"],[0,"&multimap;"],[0,"&hercon;"],[0,"&intcal;"],[0,"&veebar;"],[1,"&barvee;"],[0,"&angrtvb;"],[0,"&lrtri;"],[0,"&bigwedge;"],[0,"&bigvee;"],[0,"&bigcap;"],[0,"&bigcup;"],[0,"&diam;"],[0,"&sdot;"],[0,"&sstarf;"],[0,"&divideontimes;"],[0,"&bowtie;"],[0,"&ltimes;"],[0,"&rtimes;"],[0,"&leftthreetimes;"],[0,"&rightthreetimes;"],[0,"&backsimeq;"],[0,"&curlyvee;"],[0,"&curlywedge;"],[0,"&Sub;"],[0,"&Sup;"],[0,"&Cap;"],[0,"&Cup;"],[0,"&fork;"],[0,"&epar;"],[0,"&lessdot;"],[0,"&gtdot;"],[0,{v:"&Ll;",n:824,o:"&nLl;"}],[0,{v:"&Gg;",n:824,o:"&nGg;"}],[0,{v:"&leg;",n:65024,o:"&lesg;"}],[0,{v:"&gel;",n:65024,o:"&gesl;"}],[2,"&cuepr;"],[0,"&cuesc;"],[0,"&NotPrecedesSlantEqual;"],[0,"&NotSucceedsSlantEqual;"],[0,"&NotSquareSubsetEqual;"],[0,"&NotSquareSupersetEqual;"],[2,"&lnsim;"],[0,"&gnsim;"],[0,"&precnsim;"],[0,"&scnsim;"],[0,"&nltri;"],[0,"&NotRightTriangle;"],[0,"&nltrie;"],[0,"&NotRightTriangleEqual;"],[0,"&vellip;"],[0,"&ctdot;"],[0,"&utdot;"],[0,"&dtdot;"],[0,"&disin;"],[0,"&isinsv;"],[0,"&isins;"],[0,{v:"&isindot;",n:824,o:"&notindot;"}],[0,"&notinvc;"],[0,"&notinvb;"],[1,{v:"&isinE;",n:824,o:"&notinE;"}],[0,"&nisd;"],[0,"&xnis;"],[0,"&nis;"],[0,"&notnivc;"],[0,"&notnivb;"],[6,"&barwed;"],[0,"&Barwed;"],[1,"&lceil;"],[0,"&rceil;"],[0,"&LeftFloor;"],[0,"&rfloor;"],[0,"&drcrop;"],[0,"&dlcrop;"],[0,"&urcrop;"],[0,"&ulcrop;"],[0,"&bnot;"],[1,"&profline;"],[0,"&profsurf;"],[1,"&telrec;"],[0,"&target;"],[5,"&ulcorn;"],[0,"&urcorn;"],[0,"&dlcorn;"],[0,"&drcorn;"],[2,"&frown;"],[0,"&smile;"],[9,"&cylcty;"],[0,"&profalar;"],[7,"&topbot;"],[6,"&ovbar;"],[1,"&solbar;"],[60,"&angzarr;"],[51,"&lmoustache;"],[0,"&rmoustache;"],[2,"&OverBracket;"],[0,"&bbrk;"],[0,"&bbrktbrk;"],[37,"&OverParenthesis;"],[0,"&UnderParenthesis;"],[0,"&OverBrace;"],[0,"&UnderBrace;"],[2,"&trpezium;"],[4,"&elinters;"],[59,"&blank;"],[164,"&circledS;"],[55,"&boxh;"],[1,"&boxv;"],[9,"&boxdr;"],[3,"&boxdl;"],[3,"&boxur;"],[3,"&boxul;"],[3,"&boxvr;"],[7,"&boxvl;"],[7,"&boxhd;"],[7,"&boxhu;"],[7,"&boxvh;"],[19,"&boxH;"],[0,"&boxV;"],[0,"&boxdR;"],[0,"&boxDr;"],[0,"&boxDR;"],[0,"&boxdL;"],[0,"&boxDl;"],[0,"&boxDL;"],[0,"&boxuR;"],[0,"&boxUr;"],[0,"&boxUR;"],[0,"&boxuL;"],[0,"&boxUl;"],[0,"&boxUL;"],[0,"&boxvR;"],[0,"&boxVr;"],[0,"&boxVR;"],[0,"&boxvL;"],[0,"&boxVl;"],[0,"&boxVL;"],[0,"&boxHd;"],[0,"&boxhD;"],[0,"&boxHD;"],[0,"&boxHu;"],[0,"&boxhU;"],[0,"&boxHU;"],[0,"&boxvH;"],[0,"&boxVh;"],[0,"&boxVH;"],[19,"&uhblk;"],[3,"&lhblk;"],[3,"&block;"],[8,"&blk14;"],[0,"&blk12;"],[0,"&blk34;"],[13,"&square;"],[8,"&blacksquare;"],[0,"&EmptyVerySmallSquare;"],[1,"&rect;"],[0,"&marker;"],[2,"&fltns;"],[1,"&bigtriangleup;"],[0,"&blacktriangle;"],[0,"&triangle;"],[2,"&blacktriangleright;"],[0,"&rtri;"],[3,"&bigtriangledown;"],[0,"&blacktriangledown;"],[0,"&dtri;"],[2,"&blacktriangleleft;"],[0,"&ltri;"],[6,"&loz;"],[0,"&cir;"],[32,"&tridot;"],[2,"&bigcirc;"],[8,"&ultri;"],[0,"&urtri;"],[0,"&lltri;"],[0,"&EmptySmallSquare;"],[0,"&FilledSmallSquare;"],[8,"&bigstar;"],[0,"&star;"],[7,"&phone;"],[49,"&female;"],[1,"&male;"],[29,"&spades;"],[2,"&clubs;"],[1,"&hearts;"],[0,"&diamondsuit;"],[3,"&sung;"],[2,"&flat;"],[0,"&natural;"],[0,"&sharp;"],[163,"&check;"],[3,"&cross;"],[8,"&malt;"],[21,"&sext;"],[33,"&VerticalSeparator;"],[25,"&lbbrk;"],[0,"&rbbrk;"],[84,"&bsolhsub;"],[0,"&suphsol;"],[28,"&LeftDoubleBracket;"],[0,"&RightDoubleBracket;"],[0,"&lang;"],[0,"&rang;"],[0,"&Lang;"],[0,"&Rang;"],[0,"&loang;"],[0,"&roang;"],[7,"&longleftarrow;"],[0,"&longrightarrow;"],[0,"&longleftrightarrow;"],[0,"&DoubleLongLeftArrow;"],[0,"&DoubleLongRightArrow;"],[0,"&DoubleLongLeftRightArrow;"],[1,"&longmapsto;"],[2,"&dzigrarr;"],[258,"&nvlArr;"],[0,"&nvrArr;"],[0,"&nvHarr;"],[0,"&Map;"],[6,"&lbarr;"],[0,"&bkarow;"],[0,"&lBarr;"],[0,"&dbkarow;"],[0,"&drbkarow;"],[0,"&DDotrahd;"],[0,"&UpArrowBar;"],[0,"&DownArrowBar;"],[2,"&Rarrtl;"],[2,"&latail;"],[0,"&ratail;"],[0,"&lAtail;"],[0,"&rAtail;"],[0,"&larrfs;"],[0,"&rarrfs;"],[0,"&larrbfs;"],[0,"&rarrbfs;"],[2,"&nwarhk;"],[0,"&nearhk;"],[0,"&hksearow;"],[0,"&hkswarow;"],[0,"&nwnear;"],[0,"&nesear;"],[0,"&seswar;"],[0,"&swnwar;"],[8,{v:"&rarrc;",n:824,o:"&nrarrc;"}],[1,"&cudarrr;"],[0,"&ldca;"],[0,"&rdca;"],[0,"&cudarrl;"],[0,"&larrpl;"],[2,"&curarrm;"],[0,"&cularrp;"],[7,"&rarrpl;"],[2,"&harrcir;"],[0,"&Uarrocir;"],[0,"&lurdshar;"],[0,"&ldrushar;"],[2,"&LeftRightVector;"],[0,"&RightUpDownVector;"],[0,"&DownLeftRightVector;"],[0,"&LeftUpDownVector;"],[0,"&LeftVectorBar;"],[0,"&RightVectorBar;"],[0,"&RightUpVectorBar;"],[0,"&RightDownVectorBar;"],[0,"&DownLeftVectorBar;"],[0,"&DownRightVectorBar;"],[0,"&LeftUpVectorBar;"],[0,"&LeftDownVectorBar;"],[0,"&LeftTeeVector;"],[0,"&RightTeeVector;"],[0,"&RightUpTeeVector;"],[0,"&RightDownTeeVector;"],[0,"&DownLeftTeeVector;"],[0,"&DownRightTeeVector;"],[0,"&LeftUpTeeVector;"],[0,"&LeftDownTeeVector;"],[0,"&lHar;"],[0,"&uHar;"],[0,"&rHar;"],[0,"&dHar;"],[0,"&luruhar;"],[0,"&ldrdhar;"],[0,"&ruluhar;"],[0,"&rdldhar;"],[0,"&lharul;"],[0,"&llhard;"],[0,"&rharul;"],[0,"&lrhard;"],[0,"&udhar;"],[0,"&duhar;"],[0,"&RoundImplies;"],[0,"&erarr;"],[0,"&simrarr;"],[0,"&larrsim;"],[0,"&rarrsim;"],[0,"&rarrap;"],[0,"&ltlarr;"],[1,"&gtrarr;"],[0,"&subrarr;"],[1,"&suplarr;"],[0,"&lfisht;"],[0,"&rfisht;"],[0,"&ufisht;"],[0,"&dfisht;"],[5,"&lopar;"],[0,"&ropar;"],[4,"&lbrke;"],[0,"&rbrke;"],[0,"&lbrkslu;"],[0,"&rbrksld;"],[0,"&lbrksld;"],[0,"&rbrkslu;"],[0,"&langd;"],[0,"&rangd;"],[0,"&lparlt;"],[0,"&rpargt;"],[0,"&gtlPar;"],[0,"&ltrPar;"],[3,"&vzigzag;"],[1,"&vangrt;"],[0,"&angrtvbd;"],[6,"&ange;"],[0,"&range;"],[0,"&dwangle;"],[0,"&uwangle;"],[0,"&angmsdaa;"],[0,"&angmsdab;"],[0,"&angmsdac;"],[0,"&angmsdad;"],[0,"&angmsdae;"],[0,"&angmsdaf;"],[0,"&angmsdag;"],[0,"&angmsdah;"],[0,"&bemptyv;"],[0,"&demptyv;"],[0,"&cemptyv;"],[0,"&raemptyv;"],[0,"&laemptyv;"],[0,"&ohbar;"],[0,"&omid;"],[0,"&opar;"],[1,"&operp;"],[1,"&olcross;"],[0,"&odsold;"],[1,"&olcir;"],[0,"&ofcir;"],[0,"&olt;"],[0,"&ogt;"],[0,"&cirscir;"],[0,"&cirE;"],[0,"&solb;"],[0,"&bsolb;"],[3,"&boxbox;"],[3,"&trisb;"],[0,"&rtriltri;"],[0,{v:"&LeftTriangleBar;",n:824,o:"&NotLeftTriangleBar;"}],[0,{v:"&RightTriangleBar;",n:824,o:"&NotRightTriangleBar;"}],[11,"&iinfin;"],[0,"&infintie;"],[0,"&nvinfin;"],[4,"&eparsl;"],[0,"&smeparsl;"],[0,"&eqvparsl;"],[5,"&blacklozenge;"],[8,"&RuleDelayed;"],[1,"&dsol;"],[9,"&bigodot;"],[0,"&bigoplus;"],[0,"&bigotimes;"],[1,"&biguplus;"],[1,"&bigsqcup;"],[5,"&iiiint;"],[0,"&fpartint;"],[2,"&cirfnint;"],[0,"&awint;"],[0,"&rppolint;"],[0,"&scpolint;"],[0,"&npolint;"],[0,"&pointint;"],[0,"&quatint;"],[0,"&intlarhk;"],[10,"&pluscir;"],[0,"&plusacir;"],[0,"&simplus;"],[0,"&plusdu;"],[0,"&plussim;"],[0,"&plustwo;"],[1,"&mcomma;"],[0,"&minusdu;"],[2,"&loplus;"],[0,"&roplus;"],[0,"&Cross;"],[0,"&timesd;"],[0,"&timesbar;"],[1,"&smashp;"],[0,"&lotimes;"],[0,"&rotimes;"],[0,"&otimesas;"],[0,"&Otimes;"],[0,"&odiv;"],[0,"&triplus;"],[0,"&triminus;"],[0,"&tritime;"],[0,"&intprod;"],[2,"&amalg;"],[0,"&capdot;"],[1,"&ncup;"],[0,"&ncap;"],[0,"&capand;"],[0,"&cupor;"],[0,"&cupcap;"],[0,"&capcup;"],[0,"&cupbrcap;"],[0,"&capbrcup;"],[0,"&cupcup;"],[0,"&capcap;"],[0,"&ccups;"],[0,"&ccaps;"],[2,"&ccupssm;"],[2,"&And;"],[0,"&Or;"],[0,"&andand;"],[0,"&oror;"],[0,"&orslope;"],[0,"&andslope;"],[1,"&andv;"],[0,"&orv;"],[0,"&andd;"],[0,"&ord;"],[1,"&wedbar;"],[6,"&sdote;"],[3,"&simdot;"],[2,{v:"&congdot;",n:824,o:"&ncongdot;"}],[0,"&easter;"],[0,"&apacir;"],[0,{v:"&apE;",n:824,o:"&napE;"}],[0,"&eplus;"],[0,"&pluse;"],[0,"&Esim;"],[0,"&Colone;"],[0,"&Equal;"],[1,"&ddotseq;"],[0,"&equivDD;"],[0,"&ltcir;"],[0,"&gtcir;"],[0,"&ltquest;"],[0,"&gtquest;"],[0,{v:"&leqslant;",n:824,o:"&nleqslant;"}],[0,{v:"&geqslant;",n:824,o:"&ngeqslant;"}],[0,"&lesdot;"],[0,"&gesdot;"],[0,"&lesdoto;"],[0,"&gesdoto;"],[0,"&lesdotor;"],[0,"&gesdotol;"],[0,"&lap;"],[0,"&gap;"],[0,"&lne;"],[0,"&gne;"],[0,"&lnap;"],[0,"&gnap;"],[0,"&lEg;"],[0,"&gEl;"],[0,"&lsime;"],[0,"&gsime;"],[0,"&lsimg;"],[0,"&gsiml;"],[0,"&lgE;"],[0,"&glE;"],[0,"&lesges;"],[0,"&gesles;"],[0,"&els;"],[0,"&egs;"],[0,"&elsdot;"],[0,"&egsdot;"],[0,"&el;"],[0,"&eg;"],[2,"&siml;"],[0,"&simg;"],[0,"&simlE;"],[0,"&simgE;"],[0,{v:"&LessLess;",n:824,o:"&NotNestedLessLess;"}],[0,{v:"&GreaterGreater;",n:824,o:"&NotNestedGreaterGreater;"}],[1,"&glj;"],[0,"&gla;"],[0,"&ltcc;"],[0,"&gtcc;"],[0,"&lescc;"],[0,"&gescc;"],[0,"&smt;"],[0,"&lat;"],[0,{v:"&smte;",n:65024,o:"&smtes;"}],[0,{v:"&late;",n:65024,o:"&lates;"}],[0,"&bumpE;"],[0,{v:"&PrecedesEqual;",n:824,o:"&NotPrecedesEqual;"}],[0,{v:"&sce;",n:824,o:"&NotSucceedsEqual;"}],[2,"&prE;"],[0,"&scE;"],[0,"&precneqq;"],[0,"&scnE;"],[0,"&prap;"],[0,"&scap;"],[0,"&precnapprox;"],[0,"&scnap;"],[0,"&Pr;"],[0,"&Sc;"],[0,"&subdot;"],[0,"&supdot;"],[0,"&subplus;"],[0,"&supplus;"],[0,"&submult;"],[0,"&supmult;"],[0,"&subedot;"],[0,"&supedot;"],[0,{v:"&subE;",n:824,o:"&nsubE;"}],[0,{v:"&supE;",n:824,o:"&nsupE;"}],[0,"&subsim;"],[0,"&supsim;"],[2,{v:"&subnE;",n:65024,o:"&varsubsetneqq;"}],[0,{v:"&supnE;",n:65024,o:"&varsupsetneqq;"}],[2,"&csub;"],[0,"&csup;"],[0,"&csube;"],[0,"&csupe;"],[0,"&subsup;"],[0,"&supsub;"],[0,"&subsub;"],[0,"&supsup;"],[0,"&suphsub;"],[0,"&supdsub;"],[0,"&forkv;"],[0,"&topfork;"],[0,"&mlcp;"],[8,"&Dashv;"],[1,"&Vdashl;"],[0,"&Barv;"],[0,"&vBar;"],[0,"&vBarv;"],[1,"&Vbar;"],[0,"&Not;"],[0,"&bNot;"],[0,"&rnmid;"],[0,"&cirmid;"],[0,"&midcir;"],[0,"&topcir;"],[0,"&nhpar;"],[0,"&parsim;"],[9,{v:"&parsl;",n:8421,o:"&nparsl;"}],[44343,{n:new Map(n([[56476,"&Ascr;"],[1,"&Cscr;"],[0,"&Dscr;"],[2,"&Gscr;"],[2,"&Jscr;"],[0,"&Kscr;"],[2,"&Nscr;"],[0,"&Oscr;"],[0,"&Pscr;"],[0,"&Qscr;"],[1,"&Sscr;"],[0,"&Tscr;"],[0,"&Uscr;"],[0,"&Vscr;"],[0,"&Wscr;"],[0,"&Xscr;"],[0,"&Yscr;"],[0,"&Zscr;"],[0,"&ascr;"],[0,"&bscr;"],[0,"&cscr;"],[0,"&dscr;"],[1,"&fscr;"],[1,"&hscr;"],[0,"&iscr;"],[0,"&jscr;"],[0,"&kscr;"],[0,"&lscr;"],[0,"&mscr;"],[0,"&nscr;"],[1,"&pscr;"],[0,"&qscr;"],[0,"&rscr;"],[0,"&sscr;"],[0,"&tscr;"],[0,"&uscr;"],[0,"&vscr;"],[0,"&wscr;"],[0,"&xscr;"],[0,"&yscr;"],[0,"&zscr;"],[52,"&Afr;"],[0,"&Bfr;"],[1,"&Dfr;"],[0,"&Efr;"],[0,"&Ffr;"],[0,"&Gfr;"],[2,"&Jfr;"],[0,"&Kfr;"],[0,"&Lfr;"],[0,"&Mfr;"],[0,"&Nfr;"],[0,"&Ofr;"],[0,"&Pfr;"],[0,"&Qfr;"],[1,"&Sfr;"],[0,"&Tfr;"],[0,"&Ufr;"],[0,"&Vfr;"],[0,"&Wfr;"],[0,"&Xfr;"],[0,"&Yfr;"],[1,"&afr;"],[0,"&bfr;"],[0,"&cfr;"],[0,"&dfr;"],[0,"&efr;"],[0,"&ffr;"],[0,"&gfr;"],[0,"&hfr;"],[0,"&ifr;"],[0,"&jfr;"],[0,"&kfr;"],[0,"&lfr;"],[0,"&mfr;"],[0,"&nfr;"],[0,"&ofr;"],[0,"&pfr;"],[0,"&qfr;"],[0,"&rfr;"],[0,"&sfr;"],[0,"&tfr;"],[0,"&ufr;"],[0,"&vfr;"],[0,"&wfr;"],[0,"&xfr;"],[0,"&yfr;"],[0,"&zfr;"],[0,"&Aopf;"],[0,"&Bopf;"],[1,"&Dopf;"],[0,"&Eopf;"],[0,"&Fopf;"],[0,"&Gopf;"],[1,"&Iopf;"],[0,"&Jopf;"],[0,"&Kopf;"],[0,"&Lopf;"],[0,"&Mopf;"],[1,"&Oopf;"],[3,"&Sopf;"],[0,"&Topf;"],[0,"&Uopf;"],[0,"&Vopf;"],[0,"&Wopf;"],[0,"&Xopf;"],[0,"&Yopf;"],[1,"&aopf;"],[0,"&bopf;"],[0,"&copf;"],[0,"&dopf;"],[0,"&eopf;"],[0,"&fopf;"],[0,"&gopf;"],[0,"&hopf;"],[0,"&iopf;"],[0,"&jopf;"],[0,"&kopf;"],[0,"&lopf;"],[0,"&mopf;"],[0,"&nopf;"],[0,"&oopf;"],[0,"&popf;"],[0,"&qopf;"],[0,"&ropf;"],[0,"&sopf;"],[0,"&topf;"],[0,"&uopf;"],[0,"&vopf;"],[0,"&wopf;"],[0,"&xopf;"],[0,"&yopf;"],[0,"&zopf;"]]))}],[8906,"&fflig;"],[0,"&filig;"],[0,"&fllig;"],[0,"&ffilig;"],[0,"&ffllig;"]]))},512:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SyntheticPRProvider=void 0;const r=n(398),o=n(696);class i{constructor(){this.contentMap=new Map}setContent(e,t){this.contentMap.set(e.toString(),t)}provideTextDocumentContent(e){return this.contentMap.get(e.toString())||""}}t.SyntheticPRProvider=class{constructor(e){this.context=e,this.currentPR=null,this.diffContentProvider=new i,e.subscriptions.push(r.workspace.registerTextDocumentContentProvider("symposium-diff",this.diffContentProvider)),this.commentController=r.comments.createCommentController("symposium-synthetic-pr","Synthetic PR Comments"),this.commentController.options={prompt:"Add a comment...",placeHolder:"Type your comment here"},this.commentController.commentingRangeProvider={provideCommentingRanges:e=>{if(console.log(`[COMMENTING] provideCommentingRanges called for: ${e.uri.toString()}`),!this.currentPR)return console.log("[COMMENTING] No current PR - returning empty ranges"),[];if("comment"===e.uri.scheme){console.log("[COMMENTING] Comment input URI - allowing full document range");const t=e.lineCount;return[new r.Range(0,0,Math.max(0,t-1),0)]}const t=r.workspace.asRelativePath(e.uri),n=this.currentPR.files_changed.some(e=>e.path===t);if(console.log(`[COMMENTING] File ${t} in PR: ${n}`),n){const t=e.lineCount,n=new r.Range(0,0,Math.max(0,t-1),0);return console.log(`[COMMENTING] Returning range for ${t} lines: ${n.start.line}-${n.end.line}`),[n]}return console.log("[COMMENTING] File not in PR - returning empty ranges"),[]}},this.commentController.options={prompt:"Add a comment...",placeHolder:"Type your comment here"},this.setupCommentHandlers(),console.log("[SYNTHETIC PR] Creating tree provider"),this.treeProvider=new o.SyntheticPRTreeProvider,console.log("[SYNTHETIC PR] Registering tree view with ID: symposium.syntheticPR");const t=r.window.createTreeView("symposium.syntheticPR",{treeDataProvider:this.treeProvider});console.log("[SYNTHETIC PR] Tree view created successfully:",!!t);const n=r.commands.registerCommand("symposium.showFileDiff",e=>this.showFileDiff(e)),s=r.commands.registerCommand("symposium.addCommentReply",(e,t)=>this.addCommentReply(e,t)),a=r.commands.registerCommand("symposium.addComment",e=>this.handleCommentSubmission(e)),c=r.commands.registerCommand("symposium.toggleComments",()=>this.treeProvider.toggleCommentsExpansion());e.subscriptions.push(this.commentController,t,n,s,a,c)}async createSyntheticPR(e){const t=Date.now();console.log(`[SYNTHETIC PR] ${Date.now()-t}ms: createSyntheticPR called with: ${e.title}`),this.currentPR=e,console.log(`[SYNTHETIC PR] ${Date.now()-t}ms: Calling treeProvider.updatePR`),this.treeProvider.updatePR(e),console.log(`[SYNTHETIC PR] ${Date.now()-t}ms: treeProvider.updatePR completed`),console.log(`[SYNTHETIC PR] ${Date.now()-t}ms: Creating ${e.comment_threads.length} comment threads`);for(const t of e.comment_threads)await this.createCommentThread(t);console.log(`[SYNTHETIC PR] ${Date.now()-t}ms: All comment threads created`),console.log(`[SYNTHETIC PR] ${Date.now()-t}ms: Showing status message`),r.window.showInformationMessage(`Synthetic PR created: ${e.title} (${e.files_changed.length} files changed)`),console.log(`[SYNTHETIC PR] ${Date.now()-t}ms: createSyntheticPR completed`)}async updateSyntheticPR(e){if(!this.currentPR||this.currentPR.review_id!==e.review_id)return this.createSyntheticPR(e);this.currentPR=e,this.treeProvider.updatePR(e),this.commentController.dispose(),this.commentController=r.comments.createCommentController("symposium-synthetic-pr",`PR: ${e.title}`);for(const t of e.comment_threads)await this.createCommentThread(t)}async showFileDiff(e){if(console.log(`[DIFF] Starting showFileDiff for: ${e}`),!this.currentPR)return console.log("[DIFF] ERROR: No active synthetic PR"),void r.window.showErrorMessage("No active synthetic PR");const t=this.currentPR.files_changed.find(t=>t.path===e);if(!t)return console.log(`[DIFF] ERROR: File not found in PR: ${e}`),void r.window.showErrorMessage(`File not found in PR: ${e}`);console.log(`[DIFF] Found file change: ${t.status}, ${t.additions}+/${t.deletions}-, ${t.hunks.length} hunks`);try{const n=r.workspace.workspaceFolders?.[0];if(!n)return void r.window.showErrorMessage("No workspace folder found");const o=r.Uri.joinPath(n.uri,e);console.log(`[DIFF] Resolved absolute path: ${o.toString()}`);const i=(await r.workspace.openTextDocument(o)).getText();console.log(`[DIFF] Current file content length: ${i.length} chars`);const s=await this.generateOriginalContent(t,i);console.log(`[DIFF] Generated original content length: ${s.length} chars`);const a=r.Uri.parse(`symposium-diff:${e}?original`),c=o;console.log(`[DIFF] Original URI: ${a.toString()}`),console.log(`[DIFF] Modified URI: ${c.toString()}`),this.diffContentProvider.setContent(a,s),console.log("[DIFF] Stored original content in provider"),console.log("[DIFF] Calling vscode.diff command..."),await r.commands.executeCommand("vscode.diff",a,c,`${e} (PR Diff)`),console.log("[DIFF] vscode.diff command completed successfully")}catch(t){console.error("[DIFF] Failed to show file diff:",t),r.window.showErrorMessage(`Failed to show diff for ${e}`)}}async generateOriginalContent(e,t){console.log(`[HUNK] Starting generateOriginalContent for ${e.path}`),console.log(`[HUNK] Processing ${e.hunks.length} hunks`);try{const n=t.split("\n"),r=[...n];console.log(`[HUNK] Current file has ${n.length} lines`);const o=[...e.hunks].sort((e,t)=>t.new_start-e.new_start);console.log(`[HUNK] Sorted hunks by new_start (desc): ${o.map(e=>e.new_start).join(", ")}`);for(const e of o){console.log(`[HUNK] Processing hunk at line ${e.new_start} with ${e.lines.length} lines`);const t=[...e.lines].reverse();let n=e.new_lines-1;for(const o of t){const t=e.new_start-1+n;if(console.log(`[HUNK] Processing ${o.line_type} line at target ${t}: "${o.content.substring(0,50)}..."`),"Added"===o.line_type)t>=0&&t<r.length&&(console.log(`[HUNK] Removing added line at ${t}`),r.splice(t,1)),n--;else if("Removed"===o.line_type){const e=o.content.startsWith("-")?o.content.substring(1):o.content;console.log(`[HUNK] Restoring removed line at ${t+1}: "${e.substring(0,50)}..."`),r.splice(t+1,0,e)}else"Context"===o.line_type&&n--}}return console.log(`[HUNK] Generated original content with ${r.length} lines`),r.join("\n")}catch(e){return console.error("[HUNK] Failed to generate original content:",e),""}}setupCommentHandlers(){this.commentController.options={prompt:"Add a comment...",placeHolder:"Type your comment here"}}async createCommentThread(e){try{const t=r.workspace.workspaceFolders?.[0];if(!t)return;const n=r.Uri.joinPath(t.uri,e.file_path),o=new r.Range(Math.max(0,e.line_number-1),0,Math.max(0,e.line_number-1),0),i=this.commentController.createCommentThread(n,o,[]);i.collapsibleState=r.CommentThreadCollapsibleState.Expanded,i.canReply=!0;const s={body:new r.MarkdownString(this.formatComment(e)),mode:r.CommentMode.Preview,author:{name:"AI Assistant"}};i.comments=[s],i.label=`${this.getCommentIcon(e.comment_type)} ${e.comment_type.toUpperCase()}`}catch(t){console.error(`Failed to create comment thread for ${e.file_path}:${e.line_number}`,t)}}formatComment(e){return`${this.getCommentIcon(e.comment_type)} **${e.comment_type.toUpperCase()}**\n\n${e.content}`}getCommentIcon(e){switch(e){case"insight":return"💡";case"question":return"❓";case"todo":return"📝";case"fixme":return"🔧";default:return"💬"}}addCommentReply(e,t){const n={body:new r.MarkdownString(t),mode:r.CommentMode.Preview,author:{name:"vscode"===r.env.uriScheme?"User":"Developer"}};e.comments=[...e.comments,n]}handleCommentSubmission(e){const t={body:new r.MarkdownString(e.text),mode:r.CommentMode.Preview,author:{name:"vscode"===r.env.uriScheme?"User":"Developer"}};if(e.thread.comments=[...e.thread.comments,t],e.thread.canReply=!0,this.onCommentCallback&&e.thread.range){const t=e.thread.uri,n=e.thread.range.start.line+1,o="symposium-diff"===t.scheme?t.path.replace("/diff/",""):r.workspace.asRelativePath(t);this.onCommentCallback(e.text,o,n)}}setCommentCallback(e){this.onCommentCallback=e}clearPR(){this.treeProvider.clearPR(),this.currentPR=null}dispose(){this.commentController.dispose(),this.treeProvider.clearPR()}}},517:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=new Uint16Array("Ȁaglq\tɭ\0\0p;䀦os;䀧t;䀾t;䀼uot;䀢".split("").map(function(e){return e.charCodeAt(0)}))},528:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.formatSearchResults=t.needsDisambiguation=t.getBestSearchResult=t.searchInFile=void 0;const r=n(398);function o(e,t){if(!t)return!0;const n=e.line+1,r=e.character+1;if(n<t.startLine)return!1;if(t.endLine&&n>t.endLine)return!1;if("single-with-column"===t.type&&n===t.startLine)return r>=(t.startColumn||1);if("range-with-columns"===t.type){if(n===t.startLine&&r<(t.startColumn||1))return!1;if(n===t.endLine&&r>(t.endColumn||Number.MAX_SAFE_INTEGER))return!1}return!0}t.searchInFile=async function(e,t){try{const n=await r.workspace.openTextDocument(e),{regexPattern:i,lineConstraint:s,caseSensitive:a=!1}=t,c=function(e,t){if(!t)return{text:e.getText(),startOffset:0};const n=Math.max(0,t.startLine-1),o=t.startColumn?t.startColumn-1:0;let i,s;switch(t.type){case"single":case"single-with-column":i=e.lineCount-1,s=e.lineAt(i).text.length;break;case"range":i=Math.min(e.lineCount-1,(t.endLine||t.startLine)-1),s=e.lineAt(i).text.length;break;case"range-with-columns":i=Math.min(e.lineCount-1,(t.endLine||t.startLine)-1),s=t.endColumn?t.endColumn-1:e.lineAt(i).text.length}const a=new r.Position(n,o),c=new r.Position(i,s),l=new r.Range(a,c);return{text:e.getText(l),startOffset:e.offsetAt(a)}}(n,s),l=c.startOffset,u=a?"gm":"gim";let d;try{d=new RegExp(i,u)}catch(e){throw new Error(`Invalid regex pattern "${i}": ${e}`)}console.log(`[SearchEngine] Searching with regex: /${i}/${u}`),console.log(`[SearchEngine] Search content length: ${c.text.length} chars, offset: ${l}`);const h=[];let p;for(;null!==(p=d.exec(c.text));){const e=p.index,t=p[0].length,r=l+e,i=n.positionAt(r);if(console.log(`[SearchEngine] Found match at offset ${r}: "${p[0].substring(0,50)}${p[0].length>50?"...":""}"`),console.log(`[SearchEngine] Position: line ${i.line+1}, column ${i.character+1}`),o(i,s)){const e=n.lineAt(i.line);h.push({line:i.line+1,column:i.character+1,text:e.text,matchStart:i.character,matchEnd:p[0].includes("\n")?e.text.length:i.character+t})}else console.log("[SearchEngine] Match excluded by line constraints");0===t&&d.lastIndex++}return console.log(`[SearchEngine] Total matches found: ${h.length}`),h}catch(t){throw new Error(`Failed to search in file ${e.fsPath}: ${t}`)}},t.getBestSearchResult=function(e){return e.length>0?e[0]:null},t.needsDisambiguation=function(e){return e.length>1},t.formatSearchResults=function(e){return 0===e.length?"No matches found":e.map(e=>`${e.line}:${e.column} "${e.text.trim()}"`).join("\n")}},603:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=new Uint16Array('ᵁ<Õıʊҝջאٵ۞ޢߖࠏ੊ઑඡ๭༉༦჊ረዡᐕᒝᓃᓟᔥ\0\0\0\0\0\0ᕫᛍᦍᰒᷝ὾⁠↰⊍⏀⏻⑂⠤⤒ⴈ⹈⿎〖㊺㘹㞬㣾㨨㩱㫠㬮ࠀEMabcfglmnoprstu\\bfms¦³¹ÈÏlig耻Æ䃆P耻&䀦cute耻Á䃁reve;䄂Āiyx}rc耻Â䃂;䐐r;쀀𝔄rave耻À䃀pha;䎑acr;䄀d;橓Āgp¡on;䄄f;쀀𝔸plyFunction;恡ing耻Å䃅Ācs¾Ãr;쀀𝒜ign;扔ilde耻Ã䃃ml耻Ä䃄ЀaceforsuåûþėĜĢħĪĀcrêòkslash;或Ŷöø;櫧ed;挆y;䐑ƀcrtąċĔause;戵noullis;愬a;䎒r;쀀𝔅pf;쀀𝔹eve;䋘còēmpeq;扎܀HOacdefhilorsuōőŖƀƞƢƵƷƺǜȕɳɸɾcy;䐧PY耻©䂩ƀcpyŝŢźute;䄆Ā;iŧŨ拒talDifferentialD;慅leys;愭ȀaeioƉƎƔƘron;䄌dil耻Ç䃇rc;䄈nint;戰ot;䄊ĀdnƧƭilla;䂸terDot;䂷òſi;䎧rcleȀDMPTǇǋǑǖot;抙inus;抖lus;投imes;抗oĀcsǢǸkwiseContourIntegral;戲eCurlyĀDQȃȏoubleQuote;思uote;怙ȀlnpuȞȨɇɕonĀ;eȥȦ户;橴ƀgitȯȶȺruent;扡nt;戯ourIntegral;戮ĀfrɌɎ;愂oduct;成nterClockwiseContourIntegral;戳oss;樯cr;쀀𝒞pĀ;Cʄʅ拓ap;才րDJSZacefiosʠʬʰʴʸˋ˗ˡ˦̳ҍĀ;oŹʥtrahd;椑cy;䐂cy;䐅cy;䐏ƀgrsʿ˄ˇger;怡r;憡hv;櫤Āayː˕ron;䄎;䐔lĀ;t˝˞戇a;䎔r;쀀𝔇Āaf˫̧Ācm˰̢riticalȀADGT̖̜̀̆cute;䂴oŴ̋̍;䋙bleAcute;䋝rave;䁠ilde;䋜ond;拄ferentialD;慆Ѱ̽\0\0\0͔͂\0Ѕf;쀀𝔻ƀ;DE͈͉͍䂨ot;惜qual;扐blèCDLRUVͣͲ΂ϏϢϸontourIntegraìȹoɴ͹\0\0ͻ»͉nArrow;懓Āeo·ΤftƀARTΐΖΡrrow;懐ightArrow;懔eåˊngĀLRΫτeftĀARγιrrow;柸ightArrow;柺ightArrow;柹ightĀATϘϞrrow;懒ee;抨pɁϩ\0\0ϯrrow;懑ownArrow;懕erticalBar;戥ǹABLRTaВЪаўѿͼrrowƀ;BUНОТ憓ar;椓pArrow;懵reve;䌑eft˒к\0ц\0ѐightVector;楐eeVector;楞ectorĀ;Bљњ憽ar;楖ightǔѧ\0ѱeeVector;楟ectorĀ;BѺѻ懁ar;楗eeĀ;A҆҇护rrow;憧ĀctҒҗr;쀀𝒟rok;䄐ࠀNTacdfglmopqstuxҽӀӄӋӞӢӧӮӵԡԯԶՒ՝ՠեG;䅊H耻Ð䃐cute耻É䃉ƀaiyӒӗӜron;䄚rc耻Ê䃊;䐭ot;䄖r;쀀𝔈rave耻È䃈ement;戈ĀapӺӾcr;䄒tyɓԆ\0\0ԒmallSquare;旻erySmallSquare;斫ĀgpԦԪon;䄘f;쀀𝔼silon;䎕uĀaiԼՉlĀ;TՂՃ橵ilde;扂librium;懌Āci՗՚r;愰m;橳a;䎗ml耻Ë䃋Āipժկsts;戃onentialE;慇ʀcfiosօֈ֍ֲ׌y;䐤r;쀀𝔉lledɓ֗\0\0֣mallSquare;旼erySmallSquare;斪Ͱֺ\0ֿ\0\0ׄf;쀀𝔽All;戀riertrf;愱cò׋؀JTabcdfgorstר׬ׯ׺؀ؒؖ؛؝أ٬ٲcy;䐃耻>䀾mmaĀ;d׷׸䎓;䏜reve;䄞ƀeiy؇،ؐdil;䄢rc;䄜;䐓ot;䄠r;쀀𝔊;拙pf;쀀𝔾eater̀EFGLSTصلَٖٛ٦qualĀ;Lؾؿ扥ess;招ullEqual;执reater;檢ess;扷lantEqual;橾ilde;扳cr;쀀𝒢;扫ЀAacfiosuڅڋږڛڞڪھۊRDcy;䐪Āctڐڔek;䋇;䁞irc;䄤r;愌lbertSpace;愋ǰگ\0ڲf;愍izontalLine;攀Āctۃۅòکrok;䄦mpńېۘownHumðįqual;扏܀EJOacdfgmnostuۺ۾܃܇܎ܚܞܡܨ݄ݸދޏޕcy;䐕lig;䄲cy;䐁cute耻Í䃍Āiyܓܘrc耻Î䃎;䐘ot;䄰r;愑rave耻Ì䃌ƀ;apܠܯܿĀcgܴܷr;䄪inaryI;慈lieóϝǴ݉\0ݢĀ;eݍݎ戬Āgrݓݘral;戫section;拂isibleĀCTݬݲomma;恣imes;恢ƀgptݿރވon;䄮f;쀀𝕀a;䎙cr;愐ilde;䄨ǫޚ\0ޞcy;䐆l耻Ï䃏ʀcfosuެ޷޼߂ߐĀiyޱ޵rc;䄴;䐙r;쀀𝔍pf;쀀𝕁ǣ߇\0ߌr;쀀𝒥rcy;䐈kcy;䐄΀HJacfosߤߨ߽߬߱ࠂࠈcy;䐥cy;䐌ppa;䎚Āey߶߻dil;䄶;䐚r;쀀𝔎pf;쀀𝕂cr;쀀𝒦րJTaceflmostࠥࠩࠬࡐࡣ঳সে্਷ੇcy;䐉耻<䀼ʀcmnpr࠷࠼ࡁࡄࡍute;䄹bda;䎛g;柪lacetrf;愒r;憞ƀaeyࡗ࡜ࡡron;䄽dil;䄻;䐛Āfsࡨ॰tԀACDFRTUVarࡾࢩࢱࣦ࣠ࣼयज़ΐ४Ānrࢃ࢏gleBracket;柨rowƀ;BR࢙࢚࢞憐ar;懤ightArrow;懆eiling;挈oǵࢷ\0ࣃbleBracket;柦nǔࣈ\0࣒eeVector;楡ectorĀ;Bࣛࣜ懃ar;楙loor;挊ightĀAV࣯ࣵrrow;憔ector;楎Āerँगeƀ;AVउऊऐ抣rrow;憤ector;楚iangleƀ;BEतथऩ抲ar;槏qual;抴pƀDTVषूौownVector;楑eeVector;楠ectorĀ;Bॖॗ憿ar;楘ectorĀ;B॥०憼ar;楒ightáΜs̀EFGLSTॾঋকঝঢভqualGreater;拚ullEqual;扦reater;扶ess;檡lantEqual;橽ilde;扲r;쀀𝔏Ā;eঽা拘ftarrow;懚idot;䄿ƀnpw৔ਖਛgȀLRlr৞৷ਂਐeftĀAR০৬rrow;柵ightArrow;柷ightArrow;柶eftĀarγਊightáοightáϊf;쀀𝕃erĀLRਢਬeftArrow;憙ightArrow;憘ƀchtਾੀੂòࡌ;憰rok;䅁;扪Ѐacefiosuਗ਼੝੠੷੼અઋ઎p;椅y;䐜Ādl੥੯iumSpace;恟lintrf;愳r;쀀𝔐nusPlus;戓pf;쀀𝕄cò੶;䎜ҀJacefostuણધભીଔଙඑ඗ඞcy;䐊cute;䅃ƀaey઴હાron;䅇dil;䅅;䐝ƀgswે૰଎ativeƀMTV૓૟૨ediumSpace;怋hiĀcn૦૘ë૙eryThiî૙tedĀGL૸ଆreaterGreateòٳessLesóੈLine;䀊r;쀀𝔑ȀBnptଢନଷ଺reak;恠BreakingSpace;䂠f;愕ڀ;CDEGHLNPRSTV୕ୖ୪୼஡௫ఄ౞಄ದ೘ൡඅ櫬Āou୛୤ngruent;扢pCap;扭oubleVerticalBar;戦ƀlqxஃஊ஛ement;戉ualĀ;Tஒஓ扠ilde;쀀≂̸ists;戄reater΀;EFGLSTஶஷ஽௉௓௘௥扯qual;扱ullEqual;쀀≧̸reater;쀀≫̸ess;批lantEqual;쀀⩾̸ilde;扵umpń௲௽ownHump;쀀≎̸qual;쀀≏̸eĀfsఊధtTriangleƀ;BEచఛడ拪ar;쀀⧏̸qual;括s̀;EGLSTవశ఼ౄోౘ扮qual;扰reater;扸ess;쀀≪̸lantEqual;쀀⩽̸ilde;扴estedĀGL౨౹reaterGreater;쀀⪢̸essLess;쀀⪡̸recedesƀ;ESಒಓಛ技qual;쀀⪯̸lantEqual;拠ĀeiಫಹverseElement;戌ghtTriangleƀ;BEೋೌ೒拫ar;쀀⧐̸qual;拭ĀquೝഌuareSuĀbp೨೹setĀ;E೰ೳ쀀⊏̸qual;拢ersetĀ;Eഃആ쀀⊐̸qual;拣ƀbcpഓതൎsetĀ;Eഛഞ쀀⊂⃒qual;抈ceedsȀ;ESTലള഻െ抁qual;쀀⪰̸lantEqual;拡ilde;쀀≿̸ersetĀ;E൘൛쀀⊃⃒qual;抉ildeȀ;EFT൮൯൵ൿ扁qual;扄ullEqual;扇ilde;扉erticalBar;戤cr;쀀𝒩ilde耻Ñ䃑;䎝܀Eacdfgmoprstuvලෂ෉෕ෛ෠෧෼ขภยา฿ไlig;䅒cute耻Ó䃓Āiy෎ීrc耻Ô䃔;䐞blac;䅐r;쀀𝔒rave耻Ò䃒ƀaei෮ෲ෶cr;䅌ga;䎩cron;䎟pf;쀀𝕆enCurlyĀDQฎบoubleQuote;怜uote;怘;橔Āclวฬr;쀀𝒪ash耻Ø䃘iŬื฼de耻Õ䃕es;樷ml耻Ö䃖erĀBP๋๠Āar๐๓r;怾acĀek๚๜;揞et;掴arenthesis;揜Ҁacfhilors๿ງຊຏຒດຝະ໼rtialD;戂y;䐟r;쀀𝔓i;䎦;䎠usMinus;䂱Āipຢອncareplanåڝf;愙Ȁ;eio຺ູ໠໤檻cedesȀ;EST່້໏໚扺qual;檯lantEqual;扼ilde;找me;怳Ādp໩໮uct;戏ortionĀ;aȥ໹l;戝Āci༁༆r;쀀𝒫;䎨ȀUfos༑༖༛༟OT耻"䀢r;쀀𝔔pf;愚cr;쀀𝒬؀BEacefhiorsu༾གྷཇའཱིྦྷྪྭ႖ႩႴႾarr;椐G耻®䂮ƀcnrཎནབute;䅔g;柫rĀ;tཛྷཝ憠l;椖ƀaeyཧཬཱron;䅘dil;䅖;䐠Ā;vླྀཹ愜erseĀEUྂྙĀlq྇ྎement;戋uilibrium;懋pEquilibrium;楯r»ཹo;䎡ghtЀACDFTUVa࿁࿫࿳ဢဨၛႇϘĀnr࿆࿒gleBracket;柩rowƀ;BL࿜࿝࿡憒ar;懥eftArrow;懄eiling;按oǵ࿹\0စbleBracket;柧nǔည\0နeeVector;楝ectorĀ;Bဝသ懂ar;楕loor;挋Āerိ၃eƀ;AVဵံြ抢rrow;憦ector;楛iangleƀ;BEၐၑၕ抳ar;槐qual;抵pƀDTVၣၮၸownVector;楏eeVector;楜ectorĀ;Bႂႃ憾ar;楔ectorĀ;B႑႒懀ar;楓Āpuႛ႞f;愝ndImplies;楰ightarrow;懛ĀchႹႼr;愛;憱leDelayed;槴ڀHOacfhimoqstuფჱჷჽᄙᄞᅑᅖᅡᅧᆵᆻᆿĀCcჩხHcy;䐩y;䐨FTcy;䐬cute;䅚ʀ;aeiyᄈᄉᄎᄓᄗ檼ron;䅠dil;䅞rc;䅜;䐡r;쀀𝔖ortȀDLRUᄪᄴᄾᅉownArrow»ОeftArrow»࢚ightArrow»࿝pArrow;憑gma;䎣allCircle;战pf;쀀𝕊ɲᅭ\0\0ᅰt;戚areȀ;ISUᅻᅼᆉᆯ斡ntersection;抓uĀbpᆏᆞsetĀ;Eᆗᆘ抏qual;抑ersetĀ;Eᆨᆩ抐qual;抒nion;抔cr;쀀𝒮ar;拆ȀbcmpᇈᇛሉላĀ;sᇍᇎ拐etĀ;Eᇍᇕqual;抆ĀchᇠህeedsȀ;ESTᇭᇮᇴᇿ扻qual;檰lantEqual;扽ilde;承Tháྌ;我ƀ;esሒሓሣ拑rsetĀ;Eሜም抃qual;抇et»ሓրHRSacfhiorsሾቄ቉ቕ቞ቱቶኟዂወዑORN耻Þ䃞ADE;愢ĀHc቎ቒcy;䐋y;䐦Ābuቚቜ;䀉;䎤ƀaeyብቪቯron;䅤dil;䅢;䐢r;쀀𝔗Āeiቻ኉ǲኀ\0ኇefore;戴a;䎘Ācn኎ኘkSpace;쀀  Space;怉ldeȀ;EFTካኬኲኼ戼qual;扃ullEqual;扅ilde;扈pf;쀀𝕋ipleDot;惛Āctዖዛr;쀀𝒯rok;䅦ૡዷጎጚጦ\0ጬጱ\0\0\0\0\0ጸጽ፷ᎅ\0᏿ᐄᐊᐐĀcrዻጁute耻Ú䃚rĀ;oጇገ憟cir;楉rǣጓ\0጖y;䐎ve;䅬Āiyጞጣrc耻Û䃛;䐣blac;䅰r;쀀𝔘rave耻Ù䃙acr;䅪Ādiፁ፩erĀBPፈ፝Āarፍፐr;䁟acĀekፗፙ;揟et;掵arenthesis;揝onĀ;P፰፱拃lus;抎Āgp፻፿on;䅲f;쀀𝕌ЀADETadps᎕ᎮᎸᏄϨᏒᏗᏳrrowƀ;BDᅐᎠᎤar;椒ownArrow;懅ownArrow;憕quilibrium;楮eeĀ;AᏋᏌ报rrow;憥ownáϳerĀLRᏞᏨeftArrow;憖ightArrow;憗iĀ;lᏹᏺ䏒on;䎥ing;䅮cr;쀀𝒰ilde;䅨ml耻Ü䃜ҀDbcdefosvᐧᐬᐰᐳᐾᒅᒊᒐᒖash;披ar;櫫y;䐒ashĀ;lᐻᐼ抩;櫦Āerᑃᑅ;拁ƀbtyᑌᑐᑺar;怖Ā;iᑏᑕcalȀBLSTᑡᑥᑪᑴar;戣ine;䁼eparator;杘ilde;所ThinSpace;怊r;쀀𝔙pf;쀀𝕍cr;쀀𝒱dash;抪ʀcefosᒧᒬᒱᒶᒼirc;䅴dge;拀r;쀀𝔚pf;쀀𝕎cr;쀀𝒲Ȁfiosᓋᓐᓒᓘr;쀀𝔛;䎞pf;쀀𝕏cr;쀀𝒳ҀAIUacfosuᓱᓵᓹᓽᔄᔏᔔᔚᔠcy;䐯cy;䐇cy;䐮cute耻Ý䃝Āiyᔉᔍrc;䅶;䐫r;쀀𝔜pf;쀀𝕐cr;쀀𝒴ml;䅸ЀHacdefosᔵᔹᔿᕋᕏᕝᕠᕤcy;䐖cute;䅹Āayᕄᕉron;䅽;䐗ot;䅻ǲᕔ\0ᕛoWidtè૙a;䎖r;愨pf;愤cr;쀀𝒵௡ᖃᖊᖐ\0ᖰᖶᖿ\0\0\0\0ᗆᗛᗫᙟ᙭\0ᚕ᚛ᚲᚹ\0ᚾcute耻á䃡reve;䄃̀;Ediuyᖜᖝᖡᖣᖨᖭ戾;쀀∾̳;房rc耻â䃢te肻´̆;䐰lig耻æ䃦Ā;r²ᖺ;쀀𝔞rave耻à䃠ĀepᗊᗖĀfpᗏᗔsym;愵èᗓha;䎱ĀapᗟcĀclᗤᗧr;䄁g;樿ɤᗰ\0\0ᘊʀ;adsvᗺᗻᗿᘁᘇ戧nd;橕;橜lope;橘;橚΀;elmrszᘘᘙᘛᘞᘿᙏᙙ戠;榤e»ᘙsdĀ;aᘥᘦ戡ѡᘰᘲᘴᘶᘸᘺᘼᘾ;榨;榩;榪;榫;榬;榭;榮;榯tĀ;vᙅᙆ戟bĀ;dᙌᙍ抾;榝Āptᙔᙗh;戢»¹arr;捼Āgpᙣᙧon;䄅f;쀀𝕒΀;Eaeiop዁ᙻᙽᚂᚄᚇᚊ;橰cir;橯;扊d;手s;䀧roxĀ;e዁ᚒñᚃing耻å䃥ƀctyᚡᚦᚨr;쀀𝒶;䀪mpĀ;e዁ᚯñʈilde耻ã䃣ml耻ä䃤Āciᛂᛈoninôɲnt;樑ࠀNabcdefiklnoprsu᛭ᛱᜰ᜼ᝃᝈ᝸᝽០៦ᠹᡐᜍ᤽᥈ᥰot;櫭Ācrᛶ᜞kȀcepsᜀᜅᜍᜓong;扌psilon;䏶rime;怵imĀ;e᜚᜛戽q;拍Ŷᜢᜦee;抽edĀ;gᜬᜭ挅e»ᜭrkĀ;t፜᜷brk;掶Āoyᜁᝁ;䐱quo;怞ʀcmprtᝓ᝛ᝡᝤᝨausĀ;eĊĉptyv;榰séᜌnoõēƀahwᝯ᝱ᝳ;䎲;愶een;扬r;쀀𝔟g΀costuvwឍឝឳេ៕៛៞ƀaiuបពរðݠrc;旯p»፱ƀdptឤឨឭot;樀lus;樁imes;樂ɱឹ\0\0ើcup;樆ar;昅riangleĀdu៍្own;施p;斳plus;樄eåᑄåᒭarow;植ƀako៭ᠦᠵĀcn៲ᠣkƀlst៺֫᠂ozenge;槫riangleȀ;dlr᠒᠓᠘᠝斴own;斾eft;旂ight;斸k;搣Ʊᠫ\0ᠳƲᠯ\0ᠱ;斒;斑4;斓ck;斈ĀeoᠾᡍĀ;qᡃᡆ쀀=⃥uiv;쀀≡⃥t;挐Ȁptwxᡙᡞᡧᡬf;쀀𝕓Ā;tᏋᡣom»Ꮜtie;拈؀DHUVbdhmptuvᢅᢖᢪᢻᣗᣛᣬ᣿ᤅᤊᤐᤡȀLRlrᢎᢐᢒᢔ;敗;敔;敖;敓ʀ;DUduᢡᢢᢤᢦᢨ敐;敦;敩;敤;敧ȀLRlrᢳᢵᢷᢹ;敝;敚;敜;教΀;HLRhlrᣊᣋᣍᣏᣑᣓᣕ救;敬;散;敠;敫;敢;敟ox;槉ȀLRlrᣤᣦᣨᣪ;敕;敒;攐;攌ʀ;DUduڽ᣷᣹᣻᣽;敥;敨;攬;攴inus;抟lus;択imes;抠ȀLRlrᤙᤛᤝ᤟;敛;敘;攘;攔΀;HLRhlrᤰᤱᤳᤵᤷ᤻᤹攂;敪;敡;敞;攼;攤;攜Āevģ᥂bar耻¦䂦Ȁceioᥑᥖᥚᥠr;쀀𝒷mi;恏mĀ;e᜚᜜lƀ;bhᥨᥩᥫ䁜;槅sub;柈Ŭᥴ᥾lĀ;e᥹᥺怢t»᥺pƀ;Eeįᦅᦇ;檮Ā;qۜۛೡᦧ\0᧨ᨑᨕᨲ\0ᨷᩐ\0\0᪴\0\0᫁\0\0ᬡᬮ᭍᭒\0᯽\0ᰌƀcpr᦭ᦲ᧝ute;䄇̀;abcdsᦿᧀᧄ᧊᧕᧙戩nd;橄rcup;橉Āau᧏᧒p;橋p;橇ot;橀;쀀∩︀Āeo᧢᧥t;恁îړȀaeiu᧰᧻ᨁᨅǰ᧵\0᧸s;橍on;䄍dil耻ç䃧rc;䄉psĀ;sᨌᨍ橌m;橐ot;䄋ƀdmnᨛᨠᨦil肻¸ƭptyv;榲t脀¢;eᨭᨮ䂢räƲr;쀀𝔠ƀceiᨽᩀᩍy;䑇ckĀ;mᩇᩈ朓ark»ᩈ;䏇r΀;Ecefms᩟᩠ᩢᩫ᪤᪪᪮旋;槃ƀ;elᩩᩪᩭ䋆q;扗eɡᩴ\0\0᪈rrowĀlr᩼᪁eft;憺ight;憻ʀRSacd᪒᪔᪖᪚᪟»ཇ;擈st;抛irc;抚ash;抝nint;樐id;櫯cir;槂ubsĀ;u᪻᪼晣it»᪼ˬ᫇᫔᫺\0ᬊonĀ;eᫍᫎ䀺Ā;qÇÆɭ᫙\0\0᫢aĀ;t᫞᫟䀬;䁀ƀ;fl᫨᫩᫫戁îᅠeĀmx᫱᫶ent»᫩eóɍǧ᫾\0ᬇĀ;dኻᬂot;橭nôɆƀfryᬐᬔᬗ;쀀𝕔oäɔ脀©;sŕᬝr;愗Āaoᬥᬩrr;憵ss;朗Ācuᬲᬷr;쀀𝒸Ābpᬼ᭄Ā;eᭁᭂ櫏;櫑Ā;eᭉᭊ櫐;櫒dot;拯΀delprvw᭠᭬᭷ᮂᮬᯔ᯹arrĀlr᭨᭪;椸;椵ɰ᭲\0\0᭵r;拞c;拟arrĀ;p᭿ᮀ憶;椽̀;bcdosᮏᮐᮖᮡᮥᮨ截rcap;橈Āauᮛᮞp;橆p;橊ot;抍r;橅;쀀∪︀Ȁalrv᮵ᮿᯞᯣrrĀ;mᮼᮽ憷;椼yƀevwᯇᯔᯘqɰᯎ\0\0ᯒreã᭳uã᭵ee;拎edge;拏en耻¤䂤earrowĀlrᯮ᯳eft»ᮀight»ᮽeäᯝĀciᰁᰇoninôǷnt;戱lcty;挭ঀAHabcdefhijlorstuwz᰸᰻᰿ᱝᱩᱵᲊᲞᲬᲷ᳻᳿ᴍᵻᶑᶫᶻ᷆᷍rò΁ar;楥Ȁglrs᱈ᱍ᱒᱔ger;怠eth;愸òᄳhĀ;vᱚᱛ怐»ऊūᱡᱧarow;椏aã̕Āayᱮᱳron;䄏;䐴ƀ;ao̲ᱼᲄĀgrʿᲁr;懊tseq;橷ƀglmᲑᲔᲘ耻°䂰ta;䎴ptyv;榱ĀirᲣᲨsht;楿;쀀𝔡arĀlrᲳᲵ»ࣜ»သʀaegsv᳂͸᳖᳜᳠mƀ;oș᳊᳔ndĀ;ș᳑uit;晦amma;䏝in;拲ƀ;io᳧᳨᳸䃷de脀÷;o᳧ᳰntimes;拇nø᳷cy;䑒cɯᴆ\0\0ᴊrn;挞op;挍ʀlptuwᴘᴝᴢᵉᵕlar;䀤f;쀀𝕕ʀ;emps̋ᴭᴷᴽᵂqĀ;d͒ᴳot;扑inus;戸lus;戔quare;抡blebarwedgåúnƀadhᄮᵝᵧownarrowóᲃarpoonĀlrᵲᵶefôᲴighôᲶŢᵿᶅkaro÷གɯᶊ\0\0ᶎrn;挟op;挌ƀcotᶘᶣᶦĀryᶝᶡ;쀀𝒹;䑕l;槶rok;䄑Ādrᶰᶴot;拱iĀ;fᶺ᠖斿Āah᷀᷃ròЩaòྦangle;榦Āci᷒ᷕy;䑟grarr;柿ऀDacdefglmnopqrstuxḁḉḙḸոḼṉṡṾấắẽỡἪἷὄ὎὚ĀDoḆᴴoôᲉĀcsḎḔute耻é䃩ter;橮ȀaioyḢḧḱḶron;䄛rĀ;cḭḮ扖耻ê䃪lon;払;䑍ot;䄗ĀDrṁṅot;扒;쀀𝔢ƀ;rsṐṑṗ檚ave耻è䃨Ā;dṜṝ檖ot;檘Ȁ;ilsṪṫṲṴ檙nters;揧;愓Ā;dṹṺ檕ot;檗ƀapsẅẉẗcr;䄓tyƀ;svẒẓẕ戅et»ẓpĀ1;ẝẤĳạả;怄;怅怃ĀgsẪẬ;䅋p;怂ĀgpẴẸon;䄙f;쀀𝕖ƀalsỄỎỒrĀ;sỊị拕l;槣us;橱iƀ;lvỚớở䎵on»ớ;䏵ȀcsuvỪỳἋἣĀioữḱrc»Ḯɩỹ\0\0ỻíՈantĀglἂἆtr»ṝess»Ṻƀaeiἒ἖Ἒls;䀽st;扟vĀ;DȵἠD;橸parsl;槥ĀDaἯἳot;打rr;楱ƀcdiἾὁỸr;愯oô͒ĀahὉὋ;䎷耻ð䃰Āmrὓὗl耻ë䃫o;悬ƀcipὡὤὧl;䀡sôծĀeoὬὴctatioîՙnentialåչৡᾒ\0ᾞ\0ᾡᾧ\0\0ῆῌ\0ΐ\0ῦῪ \0 ⁚llingdotseñṄy;䑄male;晀ƀilrᾭᾳ῁lig;耀ﬃɩᾹ\0\0᾽g;耀ﬀig;耀ﬄ;쀀𝔣lig;耀ﬁlig;쀀fjƀaltῙ῜ῡt;晭ig;耀ﬂns;斱of;䆒ǰ΅\0ῳf;쀀𝕗ĀakֿῷĀ;vῼ´拔;櫙artint;樍Āao‌⁕Ācs‑⁒α‚‰‸⁅⁈\0⁐β•‥‧‪‬\0‮耻½䂽;慓耻¼䂼;慕;慙;慛Ƴ‴\0‶;慔;慖ʴ‾⁁\0\0⁃耻¾䂾;慗;慜5;慘ƶ⁌\0⁎;慚;慝8;慞l;恄wn;挢cr;쀀𝒻ࢀEabcdefgijlnorstv₂₉₟₥₰₴⃰⃵⃺⃿℃ℒℸ̗ℾ⅒↞Ā;lٍ₇;檌ƀcmpₐₕ₝ute;䇵maĀ;dₜ᳚䎳;檆reve;䄟Āiy₪₮rc;䄝;䐳ot;䄡Ȁ;lqsؾق₽⃉ƀ;qsؾٌ⃄lanô٥Ȁ;cdl٥⃒⃥⃕c;檩otĀ;o⃜⃝檀Ā;l⃢⃣檂;檄Ā;e⃪⃭쀀⋛︀s;檔r;쀀𝔤Ā;gٳ؛mel;愷cy;䑓Ȁ;Eajٚℌℎℐ;檒;檥;檤ȀEaesℛℝ℩ℴ;扩pĀ;p℣ℤ檊rox»ℤĀ;q℮ℯ檈Ā;q℮ℛim;拧pf;쀀𝕘Āci⅃ⅆr;愊mƀ;el٫ⅎ⅐;檎;檐茀>;cdlqr׮ⅠⅪⅮⅳⅹĀciⅥⅧ;檧r;橺ot;拗Par;榕uest;橼ʀadelsↄⅪ←ٖ↛ǰ↉\0↎proø₞r;楸qĀlqؿ↖lesó₈ií٫Āen↣↭rtneqq;쀀≩︀Å↪ԀAabcefkosy⇄⇇⇱⇵⇺∘∝∯≨≽ròΠȀilmr⇐⇔⇗⇛rsðᒄf»․ilôکĀdr⇠⇤cy;䑊ƀ;cwࣴ⇫⇯ir;楈;憭ar;意irc;䄥ƀalr∁∎∓rtsĀ;u∉∊晥it»∊lip;怦con;抹r;쀀𝔥sĀew∣∩arow;椥arow;椦ʀamopr∺∾≃≞≣rr;懿tht;戻kĀlr≉≓eftarrow;憩ightarrow;憪f;쀀𝕙bar;怕ƀclt≯≴≸r;쀀𝒽asè⇴rok;䄧Ābp⊂⊇ull;恃hen»ᱛૡ⊣\0⊪\0⊸⋅⋎\0⋕⋳\0\0⋸⌢⍧⍢⍿\0⎆⎪⎴cute耻í䃭ƀ;iyݱ⊰⊵rc耻î䃮;䐸Ācx⊼⊿y;䐵cl耻¡䂡ĀfrΟ⋉;쀀𝔦rave耻ì䃬Ȁ;inoܾ⋝⋩⋮Āin⋢⋦nt;樌t;戭fin;槜ta;愩lig;䄳ƀaop⋾⌚⌝ƀcgt⌅⌈⌗r;䄫ƀelpܟ⌏⌓inåގarôܠh;䄱f;抷ed;䆵ʀ;cfotӴ⌬⌱⌽⍁are;愅inĀ;t⌸⌹戞ie;槝doô⌙ʀ;celpݗ⍌⍐⍛⍡al;抺Āgr⍕⍙eróᕣã⍍arhk;樗rod;樼Ȁcgpt⍯⍲⍶⍻y;䑑on;䄯f;쀀𝕚a;䎹uest耻¿䂿Āci⎊⎏r;쀀𝒾nʀ;EdsvӴ⎛⎝⎡ӳ;拹ot;拵Ā;v⎦⎧拴;拳Ā;iݷ⎮lde;䄩ǫ⎸\0⎼cy;䑖l耻ï䃯̀cfmosu⏌⏗⏜⏡⏧⏵Āiy⏑⏕rc;䄵;䐹r;쀀𝔧ath;䈷pf;쀀𝕛ǣ⏬\0⏱r;쀀𝒿rcy;䑘kcy;䑔Ѐacfghjos␋␖␢␧␭␱␵␻ppaĀ;v␓␔䎺;䏰Āey␛␠dil;䄷;䐺r;쀀𝔨reen;䄸cy;䑅cy;䑜pf;쀀𝕜cr;쀀𝓀஀ABEHabcdefghjlmnoprstuv⑰⒁⒆⒍⒑┎┽╚▀♎♞♥♹♽⚚⚲⛘❝❨➋⟀⠁⠒ƀart⑷⑺⑼rò৆òΕail;椛arr;椎Ā;gঔ⒋;檋ar;楢ॣ⒥\0⒪\0⒱\0\0\0\0\0⒵Ⓔ\0ⓆⓈⓍ\0⓹ute;䄺mptyv;榴raîࡌbda;䎻gƀ;dlࢎⓁⓃ;榑åࢎ;檅uo耻«䂫rЀ;bfhlpst࢙ⓞⓦⓩ⓫⓮⓱⓵Ā;f࢝ⓣs;椟s;椝ë≒p;憫l;椹im;楳l;憢ƀ;ae⓿─┄檫il;椙Ā;s┉┊檭;쀀⪭︀ƀabr┕┙┝rr;椌rk;杲Āak┢┬cĀek┨┪;䁻;䁛Āes┱┳;榋lĀdu┹┻;榏;榍Ȁaeuy╆╋╖╘ron;䄾Ādi═╔il;䄼ìࢰâ┩;䐻Ȁcqrs╣╦╭╽a;椶uoĀ;rนᝆĀdu╲╷har;楧shar;楋h;憲ʀ;fgqs▋▌উ◳◿扤tʀahlrt▘▤▷◂◨rrowĀ;t࢙□aé⓶arpoonĀdu▯▴own»њp»०eftarrows;懇ightƀahs◍◖◞rrowĀ;sࣴࢧarpoonó྘quigarro÷⇰hreetimes;拋ƀ;qs▋ও◺lanôবʀ;cdgsব☊☍☝☨c;檨otĀ;o☔☕橿Ā;r☚☛檁;檃Ā;e☢☥쀀⋚︀s;檓ʀadegs☳☹☽♉♋pproøⓆot;拖qĀgq♃♅ôউgtò⒌ôছiíলƀilr♕࣡♚sht;楼;쀀𝔩Ā;Eজ♣;檑š♩♶rĀdu▲♮Ā;l॥♳;楪lk;斄cy;䑙ʀ;achtੈ⚈⚋⚑⚖rò◁orneòᴈard;楫ri;旺Āio⚟⚤dot;䅀ustĀ;a⚬⚭掰che»⚭ȀEaes⚻⚽⛉⛔;扨pĀ;p⛃⛄檉rox»⛄Ā;q⛎⛏檇Ā;q⛎⚻im;拦Ѐabnoptwz⛩⛴⛷✚✯❁❇❐Ānr⛮⛱g;柬r;懽rëࣁgƀlmr⛿✍✔eftĀar০✇ightá৲apsto;柼ightá৽parrowĀlr✥✩efô⓭ight;憬ƀafl✶✹✽r;榅;쀀𝕝us;樭imes;樴š❋❏st;戗áፎƀ;ef❗❘᠀旊nge»❘arĀ;l❤❥䀨t;榓ʀachmt❳❶❼➅➇ròࢨorneòᶌarĀ;d྘➃;業;怎ri;抿̀achiqt➘➝ੀ➢➮➻quo;怹r;쀀𝓁mƀ;egল➪➬;檍;檏Ābu┪➳oĀ;rฟ➹;怚rok;䅂萀<;cdhilqrࠫ⟒☹⟜⟠⟥⟪⟰Āci⟗⟙;檦r;橹reå◲mes;拉arr;楶uest;橻ĀPi⟵⟹ar;榖ƀ;ef⠀भ᠛旃rĀdu⠇⠍shar;楊har;楦Āen⠗⠡rtneqq;쀀≨︀Å⠞܀Dacdefhilnopsu⡀⡅⢂⢎⢓⢠⢥⢨⣚⣢⣤ઃ⣳⤂Dot;戺Ȁclpr⡎⡒⡣⡽r耻¯䂯Āet⡗⡙;時Ā;e⡞⡟朠se»⡟Ā;sျ⡨toȀ;dluျ⡳⡷⡻owîҌefôएðᏑker;斮Āoy⢇⢌mma;権;䐼ash;怔asuredangle»ᘦr;쀀𝔪o;愧ƀcdn⢯⢴⣉ro耻µ䂵Ȁ;acdᑤ⢽⣀⣄sôᚧir;櫰ot肻·Ƶusƀ;bd⣒ᤃ⣓戒Ā;uᴼ⣘;横ţ⣞⣡p;櫛ò−ðઁĀdp⣩⣮els;抧f;쀀𝕞Āct⣸⣽r;쀀𝓂pos»ᖝƀ;lm⤉⤊⤍䎼timap;抸ఀGLRVabcdefghijlmoprstuvw⥂⥓⥾⦉⦘⧚⧩⨕⨚⩘⩝⪃⪕⪤⪨⬄⬇⭄⭿⮮ⰴⱧⱼ⳩Āgt⥇⥋;쀀⋙̸Ā;v⥐௏쀀≫⃒ƀelt⥚⥲⥶ftĀar⥡⥧rrow;懍ightarrow;懎;쀀⋘̸Ā;v⥻ే쀀≪⃒ightarrow;懏ĀDd⦎⦓ash;抯ash;抮ʀbcnpt⦣⦧⦬⦱⧌la»˞ute;䅄g;쀀∠⃒ʀ;Eiop඄⦼⧀⧅⧈;쀀⩰̸d;쀀≋̸s;䅉roø඄urĀ;a⧓⧔普lĀ;s⧓ସǳ⧟\0⧣p肻 ଷmpĀ;e௹ఀʀaeouy⧴⧾⨃⨐⨓ǰ⧹\0⧻;橃on;䅈dil;䅆ngĀ;dൾ⨊ot;쀀⩭̸p;橂;䐽ash;怓΀;Aadqsxஒ⨩⨭⨻⩁⩅⩐rr;懗rĀhr⨳⨶k;椤Ā;oᏲᏰot;쀀≐̸uiöୣĀei⩊⩎ar;椨í஘istĀ;s஠டr;쀀𝔫ȀEest௅⩦⩹⩼ƀ;qs஼⩭௡ƀ;qs஼௅⩴lanô௢ií௪Ā;rஶ⪁»ஷƀAap⪊⪍⪑rò⥱rr;憮ar;櫲ƀ;svྍ⪜ྌĀ;d⪡⪢拼;拺cy;䑚΀AEadest⪷⪺⪾⫂⫅⫶⫹rò⥦;쀀≦̸rr;憚r;急Ȁ;fqs఻⫎⫣⫯tĀar⫔⫙rro÷⫁ightarro÷⪐ƀ;qs఻⪺⫪lanôౕĀ;sౕ⫴»శiíౝĀ;rవ⫾iĀ;eచథiäඐĀpt⬌⬑f;쀀𝕟膀¬;in⬙⬚⬶䂬nȀ;Edvஉ⬤⬨⬮;쀀⋹̸ot;쀀⋵̸ǡஉ⬳⬵;拷;拶iĀ;vಸ⬼ǡಸ⭁⭃;拾;拽ƀaor⭋⭣⭩rȀ;ast୻⭕⭚⭟lleì୻l;쀀⫽⃥;쀀∂̸lint;樔ƀ;ceಒ⭰⭳uåಥĀ;cಘ⭸Ā;eಒ⭽ñಘȀAait⮈⮋⮝⮧rò⦈rrƀ;cw⮔⮕⮙憛;쀀⤳̸;쀀↝̸ghtarrow»⮕riĀ;eೋೖ΀chimpqu⮽⯍⯙⬄୸⯤⯯Ȁ;cerല⯆ഷ⯉uå൅;쀀𝓃ortɭ⬅\0\0⯖ará⭖mĀ;e൮⯟Ā;q൴൳suĀbp⯫⯭å೸åഋƀbcp⯶ⰑⰙȀ;Ees⯿ⰀഢⰄ抄;쀀⫅̸etĀ;eഛⰋqĀ;qണⰀcĀ;eലⰗñസȀ;EesⰢⰣൟⰧ抅;쀀⫆̸etĀ;e൘ⰮqĀ;qൠⰣȀgilrⰽⰿⱅⱇìௗlde耻ñ䃱çృiangleĀlrⱒⱜeftĀ;eచⱚñదightĀ;eೋⱥñ೗Ā;mⱬⱭ䎽ƀ;esⱴⱵⱹ䀣ro;愖p;怇ҀDHadgilrsⲏⲔⲙⲞⲣⲰⲶⳓⳣash;抭arr;椄p;쀀≍⃒ash;抬ĀetⲨⲬ;쀀≥⃒;쀀>⃒nfin;槞ƀAetⲽⳁⳅrr;椂;쀀≤⃒Ā;rⳊⳍ쀀<⃒ie;쀀⊴⃒ĀAtⳘⳜrr;椃rie;쀀⊵⃒im;쀀∼⃒ƀAan⳰⳴ⴂrr;懖rĀhr⳺⳽k;椣Ā;oᏧᏥear;椧ቓ᪕\0\0\0\0\0\0\0\0\0\0\0\0\0ⴭ\0ⴸⵈⵠⵥ⵲ⶄᬇ\0\0ⶍⶫ\0ⷈⷎ\0ⷜ⸙⸫⸾⹃Ācsⴱ᪗ute耻ó䃳ĀiyⴼⵅrĀ;c᪞ⵂ耻ô䃴;䐾ʀabios᪠ⵒⵗǈⵚlac;䅑v;樸old;榼lig;䅓Ācr⵩⵭ir;榿;쀀𝔬ͯ⵹\0\0⵼\0ⶂn;䋛ave耻ò䃲;槁Ābmⶈ෴ar;榵Ȁacitⶕ⶘ⶥⶨrò᪀Āir⶝ⶠr;榾oss;榻nå๒;槀ƀaeiⶱⶵⶹcr;䅍ga;䏉ƀcdnⷀⷅǍron;䎿;榶pf;쀀𝕠ƀaelⷔ⷗ǒr;榷rp;榹΀;adiosvⷪⷫⷮ⸈⸍⸐⸖戨rò᪆Ȁ;efmⷷⷸ⸂⸅橝rĀ;oⷾⷿ愴f»ⷿ耻ª䂪耻º䂺gof;抶r;橖lope;橗;橛ƀclo⸟⸡⸧ò⸁ash耻ø䃸l;折iŬⸯ⸴de耻õ䃵esĀ;aǛ⸺s;樶ml耻ö䃶bar;挽ૡ⹞\0⹽\0⺀⺝\0⺢⺹\0\0⻋ຜ\0⼓\0\0⼫⾼\0⿈rȀ;astЃ⹧⹲຅脀¶;l⹭⹮䂶leìЃɩ⹸\0\0⹻m;櫳;櫽y;䐿rʀcimpt⺋⺏⺓ᡥ⺗nt;䀥od;䀮il;怰enk;怱r;쀀𝔭ƀimo⺨⺰⺴Ā;v⺭⺮䏆;䏕maô੶ne;明ƀ;tv⺿⻀⻈䏀chfork»´;䏖Āau⻏⻟nĀck⻕⻝kĀ;h⇴⻛;愎ö⇴sҀ;abcdemst⻳⻴ᤈ⻹⻽⼄⼆⼊⼎䀫cir;樣ir;樢Āouᵀ⼂;樥;橲n肻±ຝim;樦wo;樧ƀipu⼙⼠⼥ntint;樕f;쀀𝕡nd耻£䂣Ԁ;Eaceinosu່⼿⽁⽄⽇⾁⾉⾒⽾⾶;檳p;檷uå໙Ā;c໎⽌̀;acens່⽙⽟⽦⽨⽾pproø⽃urlyeñ໙ñ໎ƀaes⽯⽶⽺pprox;檹qq;檵im;拨iíໟmeĀ;s⾈ຮ怲ƀEas⽸⾐⽺ð⽵ƀdfp໬⾙⾯ƀals⾠⾥⾪lar;挮ine;挒urf;挓Ā;t໻⾴ï໻rel;抰Āci⿀⿅r;쀀𝓅;䏈ncsp;怈̀fiopsu⿚⋢⿟⿥⿫⿱r;쀀𝔮pf;쀀𝕢rime;恗cr;쀀𝓆ƀaeo⿸〉〓tĀei⿾々rnionóڰnt;樖stĀ;e【】䀿ñἙô༔઀ABHabcdefhilmnoprstux぀けさすムㄎㄫㅇㅢㅲㆎ㈆㈕㈤㈩㉘㉮㉲㊐㊰㊷ƀartぇおがròႳòϝail;検aròᱥar;楤΀cdenqrtとふへみわゔヌĀeuねぱ;쀀∽̱te;䅕iãᅮmptyv;榳gȀ;del࿑らるろ;榒;榥å࿑uo耻»䂻rր;abcfhlpstw࿜ガクシスゼゾダッデナp;極Ā;f࿠ゴs;椠;椳s;椞ë≝ð✮l;楅im;楴l;憣;憝Āaiパフil;椚oĀ;nホボ戶aló༞ƀabrョリヮrò៥rk;杳ĀakンヽcĀekヹ・;䁽;䁝Āes㄂㄄;榌lĀduㄊㄌ;榎;榐Ȁaeuyㄗㄜㄧㄩron;䅙Ādiㄡㄥil;䅗ì࿲âヺ;䑀Ȁclqsㄴㄷㄽㅄa;椷dhar;楩uoĀ;rȎȍh;憳ƀacgㅎㅟངlȀ;ipsླྀㅘㅛႜnåႻarôྩt;断ƀilrㅩဣㅮsht;楽;쀀𝔯ĀaoㅷㆆrĀduㅽㅿ»ѻĀ;l႑ㆄ;楬Ā;vㆋㆌ䏁;䏱ƀgns㆕ㇹㇼht̀ahlrstㆤㆰ㇂㇘㇤㇮rrowĀ;t࿜ㆭaéトarpoonĀduㆻㆿowîㅾp»႒eftĀah㇊㇐rrowó࿪arpoonóՑightarrows;應quigarro÷ニhreetimes;拌g;䋚ingdotseñἲƀahm㈍㈐㈓rò࿪aòՑ;怏oustĀ;a㈞㈟掱che»㈟mid;櫮Ȁabpt㈲㈽㉀㉒Ānr㈷㈺g;柭r;懾rëဃƀafl㉇㉊㉎r;榆;쀀𝕣us;樮imes;樵Āap㉝㉧rĀ;g㉣㉤䀩t;榔olint;樒arò㇣Ȁachq㉻㊀Ⴜ㊅quo;怺r;쀀𝓇Ābu・㊊oĀ;rȔȓƀhir㊗㊛㊠reåㇸmes;拊iȀ;efl㊪ၙᠡ㊫方tri;槎luhar;楨;愞ൡ㋕㋛㋟㌬㌸㍱\0㍺㎤\0\0㏬㏰\0㐨㑈㑚㒭㒱㓊㓱\0㘖\0\0㘳cute;䅛quï➺Ԁ;Eaceinpsyᇭ㋳㋵㋿㌂㌋㌏㌟㌦㌩;檴ǰ㋺\0㋼;檸on;䅡uåᇾĀ;dᇳ㌇il;䅟rc;䅝ƀEas㌖㌘㌛;檶p;檺im;择olint;樓iíሄ;䑁otƀ;be㌴ᵇ㌵担;橦΀Aacmstx㍆㍊㍗㍛㍞㍣㍭rr;懘rĀhr㍐㍒ë∨Ā;oਸ਼਴t耻§䂧i;䀻war;椩mĀin㍩ðnuóñt;朶rĀ;o㍶⁕쀀𝔰Ȁacoy㎂㎆㎑㎠rp;景Āhy㎋㎏cy;䑉;䑈rtɭ㎙\0\0㎜iäᑤaraì⹯耻­䂭Āgm㎨㎴maƀ;fv㎱㎲㎲䏃;䏂Ѐ;deglnprካ㏅㏉㏎㏖㏞㏡㏦ot;橪Ā;q኱ኰĀ;E㏓㏔檞;檠Ā;E㏛㏜檝;檟e;扆lus;樤arr;楲aròᄽȀaeit㏸㐈㐏㐗Āls㏽㐄lsetmé㍪hp;樳parsl;槤Ādlᑣ㐔e;挣Ā;e㐜㐝檪Ā;s㐢㐣檬;쀀⪬︀ƀflp㐮㐳㑂tcy;䑌Ā;b㐸㐹䀯Ā;a㐾㐿槄r;挿f;쀀𝕤aĀdr㑍ЂesĀ;u㑔㑕晠it»㑕ƀcsu㑠㑹㒟Āau㑥㑯pĀ;sᆈ㑫;쀀⊓︀pĀ;sᆴ㑵;쀀⊔︀uĀbp㑿㒏ƀ;esᆗᆜ㒆etĀ;eᆗ㒍ñᆝƀ;esᆨᆭ㒖etĀ;eᆨ㒝ñᆮƀ;afᅻ㒦ְrť㒫ֱ»ᅼaròᅈȀcemt㒹㒾㓂㓅r;쀀𝓈tmîñiì㐕aræᆾĀar㓎㓕rĀ;f㓔ឿ昆Āan㓚㓭ightĀep㓣㓪psiloîỠhé⺯s»⡒ʀbcmnp㓻㕞ሉ㖋㖎Ҁ;Edemnprs㔎㔏㔑㔕㔞㔣㔬㔱㔶抂;櫅ot;檽Ā;dᇚ㔚ot;櫃ult;櫁ĀEe㔨㔪;櫋;把lus;檿arr;楹ƀeiu㔽㕒㕕tƀ;en㔎㕅㕋qĀ;qᇚ㔏eqĀ;q㔫㔨m;櫇Ābp㕚㕜;櫕;櫓c̀;acensᇭ㕬㕲㕹㕻㌦pproø㋺urlyeñᇾñᇳƀaes㖂㖈㌛pproø㌚qñ㌗g;晪ڀ123;Edehlmnps㖩㖬㖯ሜ㖲㖴㗀㗉㗕㗚㗟㗨㗭耻¹䂹耻²䂲耻³䂳;櫆Āos㖹㖼t;檾ub;櫘Ā;dሢ㗅ot;櫄sĀou㗏㗒l;柉b;櫗arr;楻ult;櫂ĀEe㗤㗦;櫌;抋lus;櫀ƀeiu㗴㘉㘌tƀ;enሜ㗼㘂qĀ;qሢ㖲eqĀ;q㗧㗤m;櫈Ābp㘑㘓;櫔;櫖ƀAan㘜㘠㘭rr;懙rĀhr㘦㘨ë∮Ā;oਫ਩war;椪lig耻ß䃟௡㙑㙝㙠ዎ㙳㙹\0㙾㛂\0\0\0\0\0㛛㜃\0㜉㝬\0\0\0㞇ɲ㙖\0\0㙛get;挖;䏄rë๟ƀaey㙦㙫㙰ron;䅥dil;䅣;䑂lrec;挕r;쀀𝔱Ȁeiko㚆㚝㚵㚼ǲ㚋\0㚑eĀ4fኄኁaƀ;sv㚘㚙㚛䎸ym;䏑Ācn㚢㚲kĀas㚨㚮pproø዁im»ኬsðኞĀas㚺㚮ð዁rn耻þ䃾Ǭ̟㛆⋧es膀×;bd㛏㛐㛘䃗Ā;aᤏ㛕r;樱;樰ƀeps㛡㛣㜀á⩍Ȁ;bcf҆㛬㛰㛴ot;挶ir;櫱Ā;o㛹㛼쀀𝕥rk;櫚á㍢rime;怴ƀaip㜏㜒㝤dåቈ΀adempst㜡㝍㝀㝑㝗㝜㝟ngleʀ;dlqr㜰㜱㜶㝀㝂斵own»ᶻeftĀ;e⠀㜾ñम;扜ightĀ;e㊪㝋ñၚot;旬inus;樺lus;樹b;槍ime;樻ezium;揢ƀcht㝲㝽㞁Āry㝷㝻;쀀𝓉;䑆cy;䑛rok;䅧Āio㞋㞎xô᝷headĀlr㞗㞠eftarro÷ࡏightarrow»ཝऀAHabcdfghlmoprstuw㟐㟓㟗㟤㟰㟼㠎㠜㠣㠴㡑㡝㡫㢩㣌㣒㣪㣶ròϭar;楣Ācr㟜㟢ute耻ú䃺òᅐrǣ㟪\0㟭y;䑞ve;䅭Āiy㟵㟺rc耻û䃻;䑃ƀabh㠃㠆㠋ròᎭlac;䅱aòᏃĀir㠓㠘sht;楾;쀀𝔲rave耻ù䃹š㠧㠱rĀlr㠬㠮»ॗ»ႃlk;斀Āct㠹㡍ɯ㠿\0\0㡊rnĀ;e㡅㡆挜r»㡆op;挏ri;旸Āal㡖㡚cr;䅫肻¨͉Āgp㡢㡦on;䅳f;쀀𝕦̀adhlsuᅋ㡸㡽፲㢑㢠ownáᎳarpoonĀlr㢈㢌efô㠭ighô㠯iƀ;hl㢙㢚㢜䏅»ᏺon»㢚parrows;懈ƀcit㢰㣄㣈ɯ㢶\0\0㣁rnĀ;e㢼㢽挝r»㢽op;挎ng;䅯ri;旹cr;쀀𝓊ƀdir㣙㣝㣢ot;拰lde;䅩iĀ;f㜰㣨»᠓Āam㣯㣲rò㢨l耻ü䃼angle;榧ހABDacdeflnoprsz㤜㤟㤩㤭㦵㦸㦽㧟㧤㧨㧳㧹㧽㨁㨠ròϷarĀ;v㤦㤧櫨;櫩asèϡĀnr㤲㤷grt;榜΀eknprst㓣㥆㥋㥒㥝㥤㦖appá␕othinçẖƀhir㓫⻈㥙opô⾵Ā;hᎷ㥢ïㆍĀiu㥩㥭gmá㎳Ābp㥲㦄setneqĀ;q㥽㦀쀀⊊︀;쀀⫋︀setneqĀ;q㦏㦒쀀⊋︀;쀀⫌︀Āhr㦛㦟etá㚜iangleĀlr㦪㦯eft»थight»ၑy;䐲ash»ံƀelr㧄㧒㧗ƀ;beⷪ㧋㧏ar;抻q;扚lip;拮Ābt㧜ᑨaòᑩr;쀀𝔳tré㦮suĀbp㧯㧱»ജ»൙pf;쀀𝕧roð໻tré㦴Ācu㨆㨋r;쀀𝓋Ābp㨐㨘nĀEe㦀㨖»㥾nĀEe㦒㨞»㦐igzag;榚΀cefoprs㨶㨻㩖㩛㩔㩡㩪irc;䅵Ādi㩀㩑Ābg㩅㩉ar;機eĀ;qᗺ㩏;扙erp;愘r;쀀𝔴pf;쀀𝕨Ā;eᑹ㩦atèᑹcr;쀀𝓌ૣណ㪇\0㪋\0㪐㪛\0\0㪝㪨㪫㪯\0\0㫃㫎\0㫘ៜ៟tré៑r;쀀𝔵ĀAa㪔㪗ròσrò৶;䎾ĀAa㪡㪤ròθrò৫að✓is;拻ƀdptឤ㪵㪾Āfl㪺ឩ;쀀𝕩imåឲĀAa㫇㫊ròώròਁĀcq㫒ីr;쀀𝓍Āpt៖㫜ré។Ѐacefiosu㫰㫽㬈㬌㬑㬕㬛㬡cĀuy㫶㫻te耻ý䃽;䑏Āiy㬂㬆rc;䅷;䑋n耻¥䂥r;쀀𝔶cy;䑗pf;쀀𝕪cr;쀀𝓎Ācm㬦㬩y;䑎l耻ÿ䃿Ԁacdefhiosw㭂㭈㭔㭘㭤㭩㭭㭴㭺㮀cute;䅺Āay㭍㭒ron;䅾;䐷ot;䅼Āet㭝㭡træᕟa;䎶r;쀀𝔷cy;䐶grarr;懝pf;쀀𝕫cr;쀀𝓏Ājn㮅㮇;怍j;怌'.split("").map(function(e){return e.charCodeAt(0)}))},696:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SyntheticPRTreeProvider=void 0;const r=n(398);class o extends r.TreeItem{constructor(e,t,n,o){super(e,t),this.label=e,this.collapsibleState=t,this.itemType=n,this.data=o,this.contextValue=n,"file"===n?this.command={command:"symposium.showFileDiff",title:"Show Diff",arguments:[o.path]}:"comment"===n?this.command={command:"vscode.open",title:"Go to Comment",arguments:[r.Uri.file(o.file_path),{selection:new r.Range(o.line_number-1,0,o.line_number-1,0)}]}:"action"===n&&(this.command={command:"symposium.reviewAction",title:"Review Action",arguments:[o.action]})}}t.SyntheticPRTreeProvider=class{constructor(){this._onDidChangeTreeData=new r.EventEmitter,this.onDidChangeTreeData=this._onDidChangeTreeData.event,this.currentPR=null,this.commentsExpanded=!0}toggleCommentsExpansion(){this.commentsExpanded=!this.commentsExpanded,this.refresh()}refresh(){this._onDidChangeTreeData.fire()}updatePR(e){console.log("[TREE PROVIDER] updatePR called with:",e.title),this.currentPR=e,this.refresh()}clearPR(){this.currentPR=null,this.refresh()}getTreeItem(e){return e}getChildren(e){return console.log("[TREE PROVIDER] getChildren called, currentPR:",!!this.currentPR,"element:",e?.itemType),this.currentPR?e?"pr"===e.itemType?Promise.resolve([new o(`Files Changed (${this.currentPR.files_changed.length})`,r.TreeItemCollapsibleState.Expanded,"files"),new o(`Comments (${this.currentPR.comment_threads.length})`,this.commentsExpanded?r.TreeItemCollapsibleState.Expanded:r.TreeItemCollapsibleState.Collapsed,"comments"),new o("Actions",r.TreeItemCollapsibleState.Expanded,"actions")]):"files"===e.itemType?this.currentPR?Promise.resolve(this.currentPR.files_changed.map(e=>{const t=this.currentPR.comment_threads.filter(t=>t.file_path===e.path),n=t.length>0?` 💬${t.length}`:"";return new o(`${e.path} (+${e.additions} -${e.deletions})${n}`,r.TreeItemCollapsibleState.None,"file",e)})):Promise.resolve([]):"comments"===e.itemType?Promise.resolve(this.currentPR.comment_threads.map(e=>new o(`${this.getCommentIcon(e.comment_type)} ${e.file_path}:${e.line_number}`,r.TreeItemCollapsibleState.None,"comment",e))):"actions"===e.itemType?Promise.resolve([new o("✅ Request Changes",r.TreeItemCollapsibleState.None,"action",{action:"request_changes"}),new o("📝 Checkpoint Work",r.TreeItemCollapsibleState.None,"action",{action:"checkpoint"}),new o("↩️ Close Review",r.TreeItemCollapsibleState.None,"action",{action:"return"})]):Promise.resolve([]):Promise.resolve([new o(`${this.currentPR.title} (${this.currentPR.commit_range})`,r.TreeItemCollapsibleState.Expanded,"pr")]):(console.log("[TREE PROVIDER] No current PR, showing placeholder"),Promise.resolve([new o("No active pull request",r.TreeItemCollapsibleState.None,"placeholder")]))}getCommentIcon(e){switch(e){case"insight":return"💡";case"question":return"❓";case"todo":return"📝";case"fixme":return"🔧";default:return"💬"}}}},730:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.decodeXMLStrict=t.decodeHTML5Strict=t.decodeHTML4Strict=t.decodeHTML5=t.decodeHTML4=t.decodeHTMLAttribute=t.decodeHTMLStrict=t.decodeHTML=t.decodeXML=t.DecodingMode=t.EntityDecoder=t.encodeHTML5=t.encodeHTML4=t.encodeNonAsciiHTML=t.encodeHTML=t.escapeText=t.escapeAttribute=t.escapeUTF8=t.escape=t.encodeXML=t.encode=t.decodeStrict=t.decode=t.EncodingMode=t.EntityLevel=void 0;var r,o,i=n(878),s=n(818),a=n(987);function c(e,t){if(void 0===t&&(t=r.XML),("number"==typeof t?t:t.level)===r.HTML){var n="object"==typeof t?t.mode:void 0;return(0,i.decodeHTML)(e,n)}return(0,i.decodeXML)(e)}!function(e){e[e.XML=0]="XML",e[e.HTML=1]="HTML"}(r=t.EntityLevel||(t.EntityLevel={})),function(e){e[e.UTF8=0]="UTF8",e[e.ASCII=1]="ASCII",e[e.Extensive=2]="Extensive",e[e.Attribute=3]="Attribute",e[e.Text=4]="Text"}(o=t.EncodingMode||(t.EncodingMode={})),t.decode=c,t.decodeStrict=function(e,t){var n;void 0===t&&(t=r.XML);var o="number"==typeof t?{level:t}:t;return null!==(n=o.mode)&&void 0!==n||(o.mode=i.DecodingMode.Strict),c(e,o)},t.encode=function(e,t){void 0===t&&(t=r.XML);var n="number"==typeof t?{level:t}:t;return n.mode===o.UTF8?(0,a.escapeUTF8)(e):n.mode===o.Attribute?(0,a.escapeAttribute)(e):n.mode===o.Text?(0,a.escapeText)(e):n.level===r.HTML?n.mode===o.ASCII?(0,s.encodeNonAsciiHTML)(e):(0,s.encodeHTML)(e):(0,a.encodeXML)(e)};var l=n(987);Object.defineProperty(t,"encodeXML",{enumerable:!0,get:function(){return l.encodeXML}}),Object.defineProperty(t,"escape",{enumerable:!0,get:function(){return l.escape}}),Object.defineProperty(t,"escapeUTF8",{enumerable:!0,get:function(){return l.escapeUTF8}}),Object.defineProperty(t,"escapeAttribute",{enumerable:!0,get:function(){return l.escapeAttribute}}),Object.defineProperty(t,"escapeText",{enumerable:!0,get:function(){return l.escapeText}});var u=n(818);Object.defineProperty(t,"encodeHTML",{enumerable:!0,get:function(){return u.encodeHTML}}),Object.defineProperty(t,"encodeNonAsciiHTML",{enumerable:!0,get:function(){return u.encodeNonAsciiHTML}}),Object.defineProperty(t,"encodeHTML4",{enumerable:!0,get:function(){return u.encodeHTML}}),Object.defineProperty(t,"encodeHTML5",{enumerable:!0,get:function(){return u.encodeHTML}});var d=n(878);Object.defineProperty(t,"EntityDecoder",{enumerable:!0,get:function(){return d.EntityDecoder}}),Object.defineProperty(t,"DecodingMode",{enumerable:!0,get:function(){return d.DecodingMode}}),Object.defineProperty(t,"decodeXML",{enumerable:!0,get:function(){return d.decodeXML}}),Object.defineProperty(t,"decodeHTML",{enumerable:!0,get:function(){return d.decodeHTML}}),Object.defineProperty(t,"decodeHTMLStrict",{enumerable:!0,get:function(){return d.decodeHTMLStrict}}),Object.defineProperty(t,"decodeHTMLAttribute",{enumerable:!0,get:function(){return d.decodeHTMLAttribute}}),Object.defineProperty(t,"decodeHTML4",{enumerable:!0,get:function(){return d.decodeHTML}}),Object.defineProperty(t,"decodeHTML5",{enumerable:!0,get:function(){return d.decodeHTML}}),Object.defineProperty(t,"decodeHTML4Strict",{enumerable:!0,get:function(){return d.decodeHTMLStrict}}),Object.defineProperty(t,"decodeHTML5Strict",{enumerable:!0,get:function(){return d.decodeHTMLStrict}}),Object.defineProperty(t,"decodeXMLStrict",{enumerable:!0,get:function(){return d.decodeXML}})},778:(e,t)=>{const n={};function r(e,t){"string"!=typeof t&&(t=r.defaultChars);const o=function(e){let t=n[e];if(t)return t;t=n[e]=[];for(let e=0;e<128;e++){const n=String.fromCharCode(e);t.push(n)}for(let n=0;n<e.length;n++){const r=e.charCodeAt(n);t[r]="%"+("0"+r.toString(16).toUpperCase()).slice(-2)}return t}(t);return e.replace(/(%[a-f0-9]{2})+/gi,function(e){let t="";for(let n=0,r=e.length;n<r;n+=3){const i=parseInt(e.slice(n+1,n+3),16);if(i<128)t+=o[i];else{if(192==(224&i)&&n+3<r){const r=parseInt(e.slice(n+4,n+6),16);if(128==(192&r)){const e=i<<6&1984|63&r;t+=e<128?"��":String.fromCharCode(e),n+=3;continue}}if(224==(240&i)&&n+6<r){const r=parseInt(e.slice(n+4,n+6),16),o=parseInt(e.slice(n+7,n+9),16);if(128==(192&r)&&128==(192&o)){const e=i<<12&61440|r<<6&4032|63&o;t+=e<2048||e>=55296&&e<=57343?"���":String.fromCharCode(e),n+=6;continue}}if(240==(248&i)&&n+9<r){const r=parseInt(e.slice(n+4,n+6),16),o=parseInt(e.slice(n+7,n+9),16),s=parseInt(e.slice(n+10,n+12),16);if(128==(192&r)&&128==(192&o)&&128==(192&s)){let e=i<<18&1835008|r<<12&258048|o<<6&4032|63&s;e<65536||e>1114111?t+="����":(e-=65536,t+=String.fromCharCode(55296+(e>>10),56320+(1023&e))),n+=9;continue}}t+="�"}}return t})}r.defaultChars=";/?:@&=+$,#",r.componentChars="";const o={};function i(e,t,n){"string"!=typeof t&&(n=t,t=i.defaultChars),void 0===n&&(n=!0);const r=function(e){let t=o[e];if(t)return t;t=o[e]=[];for(let e=0;e<128;e++){const n=String.fromCharCode(e);/^[0-9a-z]$/i.test(n)?t.push(n):t.push("%"+("0"+e.toString(16).toUpperCase()).slice(-2))}for(let n=0;n<e.length;n++)t[e.charCodeAt(n)]=e[n];return t}(t);let s="";for(let t=0,o=e.length;t<o;t++){const i=e.charCodeAt(t);if(n&&37===i&&t+2<o&&/^[0-9a-f]{2}$/i.test(e.slice(t+1,t+3)))s+=e.slice(t,t+3),t+=2;else if(i<128)s+=r[i];else if(i>=55296&&i<=57343){if(i>=55296&&i<=56319&&t+1<o){const n=e.charCodeAt(t+1);if(n>=56320&&n<=57343){s+=encodeURIComponent(e[t]+e[t+1]),t++;continue}}s+="%EF%BF%BD"}else s+=encodeURIComponent(e[t])}return s}function s(){this.protocol=null,this.slashes=null,this.auth=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.pathname=null}i.defaultChars=";/?:@&=+$,-_.!~*'()#",i.componentChars="-_.!~*'()";const a=/^([a-z0-9.+-]+:)/i,c=/:[0-9]*$/,l=/^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,u=["{","}","|","\\","^","`"].concat(["<",">",'"',"`"," ","\r","\n","\t"]),d=["'"].concat(u),h=["%","/","?",";","#"].concat(d),p=["/","?","#"],m=/^[+a-z0-9A-Z_-]{0,63}$/,f=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,g={javascript:!0,"javascript:":!0},b={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0};s.prototype.parse=function(e,t){let n,r,o,i=e;if(i=i.trim(),!t&&1===e.split("#").length){const e=l.exec(i);if(e)return this.pathname=e[1],e[2]&&(this.search=e[2]),this}let s=a.exec(i);if(s&&(s=s[0],n=s.toLowerCase(),this.protocol=s,i=i.substr(s.length)),(t||s||i.match(/^\/\/[^@\/]+@[^@\/]+/))&&(o="//"===i.substr(0,2),!o||s&&g[s]||(i=i.substr(2),this.slashes=!0)),!g[s]&&(o||s&&!b[s])){let e,t,n=-1;for(let e=0;e<p.length;e++)r=i.indexOf(p[e]),-1!==r&&(-1===n||r<n)&&(n=r);t=-1===n?i.lastIndexOf("@"):i.lastIndexOf("@",n),-1!==t&&(e=i.slice(0,t),i=i.slice(t+1),this.auth=e),n=-1;for(let e=0;e<h.length;e++)r=i.indexOf(h[e]),-1!==r&&(-1===n||r<n)&&(n=r);-1===n&&(n=i.length),":"===i[n-1]&&n--;const o=i.slice(0,n);i=i.slice(n),this.parseHost(o),this.hostname=this.hostname||"";const s="["===this.hostname[0]&&"]"===this.hostname[this.hostname.length-1];if(!s){const e=this.hostname.split(/\./);for(let t=0,n=e.length;t<n;t++){const n=e[t];if(n&&!n.match(m)){let r="";for(let e=0,t=n.length;e<t;e++)n.charCodeAt(e)>127?r+="x":r+=n[e];if(!r.match(m)){const r=e.slice(0,t),o=e.slice(t+1),s=n.match(f);s&&(r.push(s[1]),o.unshift(s[2])),o.length&&(i=o.join(".")+i),this.hostname=r.join(".");break}}}}this.hostname.length>255&&(this.hostname=""),s&&(this.hostname=this.hostname.substr(1,this.hostname.length-2))}const c=i.indexOf("#");-1!==c&&(this.hash=i.substr(c),i=i.slice(0,c));const u=i.indexOf("?");return-1!==u&&(this.search=i.substr(u),i=i.slice(0,u)),i&&(this.pathname=i),b[n]&&this.hostname&&!this.pathname&&(this.pathname=""),this},s.prototype.parseHost=function(e){let t=c.exec(e);t&&(t=t[0],":"!==t&&(this.port=t.substr(1)),e=e.substr(0,e.length-t.length)),e&&(this.hostname=e)},t.decode=r,t.encode=i,t.format=function(e){let t="";return t+=e.protocol||"",t+=e.slashes?"//":"",t+=e.auth?e.auth+"@":"",e.hostname&&-1!==e.hostname.indexOf(":")?t+="["+e.hostname+"]":t+=e.hostname||"",t+=e.port?":"+e.port:"",t+=e.pathname||"",t+=e.search||"",t+=e.hash||"",t},t.parse=function(e,t){if(e&&e instanceof s)return e;const n=new s;return n.parse(e,t),n}},806:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Bus=void 0;const r=n(398),o=n(982);t.Bus=class{constructor(e,t){this.context=e,this.outputChannel=t}setDaemonClient(e){this._daemonClient=e}setSyntheticPRProvider(e){this._syntheticPRProvider=e}setWalkthroughProvider(e){this._walkthroughProvider=e}get daemonClient(){if(!this._daemonClient)throw new Error("DaemonClient not initialized on Bus");return this._daemonClient}get syntheticPRProvider(){if(!this._syntheticPRProvider)throw new Error("SyntheticPRProvider not initialized on Bus");return this._syntheticPRProvider}get walkthroughProvider(){if(!this._walkthroughProvider)throw new Error("WalkthroughWebviewProvider not initialized on Bus");return this._walkthroughProvider}async sendReferenceToActiveShell(e,t){return this.daemonClient.sendReferenceToActiveShell(e,t)}async selectActiveTerminal(){const e=r.window.terminals;if(0===e.length)return r.window.showWarningMessage("No terminals found. Please open a terminal with an active AI assistant."),null;const t=this.getActiveTerminals();if(this.log(`Active MCP server terminals: [${Array.from(t).join(", ")}]`),0===t.size)return r.window.showWarningMessage("No terminals with active MCP servers found. Please ensure you have a terminal with an active AI assistant (like Q chat or Claude CLI) running."),null;const n=(await Promise.all(e.map(async e=>{const n=await e.processId;return{terminal:e,shellPID:n,isAiEnabled:n&&t.has(n)}}))).filter(e=>e.isAiEnabled&&e.shellPID).map(e=>({terminal:e.terminal,shellPID:e.shellPID}));if(0===n.length)return r.window.showWarningMessage("No AI-enabled terminals found. Please ensure you have a terminal with an active MCP server running."),null;if(1===n.length)return n[0];const o=n.map(({terminal:e,shellPID:t})=>({label:e.name,description:`PID: ${t}`,terminal:e,shellPID:t})),i=await r.window.showQuickPick(o,{placeHolder:"Select terminal"});return i?{terminal:i.terminal,shellPID:i.shellPID}:null}async sendToActiveTerminal(e,t){const n=await this.selectActiveTerminal();if(!n)return;const r=o.randomUUID();n.shellPID&&await this.sendReferenceToActiveShell(r,e);const i=`<ssref id="${r}"/>`+(t.includeNewline?"\n\n":"");n.terminal.sendText(i,!1),n.terminal.show(),this.log(`Reference ${r} sent to terminal ${n.terminal.name} (PID: ${n.shellPID})`)}async sendTextToActiveTerminal(e){const t=await this.selectActiveTerminal();t&&(t.terminal.sendText(e,!1),t.terminal.show(),this.log(`Text message sent to terminal ${t.terminal.name} (PID: ${t.shellPID})`))}getActiveTerminals(){return this.daemonClient.getActiveTerminals()}log(e){this.outputChannel.appendLine(e)}}},814:(e,t,n)=>{var r=n(492);function o(e){return Array.prototype.slice.call(arguments,1).forEach(function(t){t&&Object.keys(t).forEach(function(n){e[n]=t[n]})}),e}function i(e){return Object.prototype.toString.call(e)}function s(e){return"[object Function]"===i(e)}function a(e){return e.replace(/[.?*+^$[\]\\(){}|-]/g,"\\$&")}const c={fuzzyLink:!0,fuzzyEmail:!0,fuzzyIP:!1},l={"http:":{validate:function(e,t,n){const r=e.slice(t);return n.re.http||(n.re.http=new RegExp("^\\/\\/"+n.re.src_auth+n.re.src_host_port_strict+n.re.src_path,"i")),n.re.http.test(r)?r.match(n.re.http)[0].length:0}},"https:":"http:","ftp:":"http:","//":{validate:function(e,t,n){const r=e.slice(t);return n.re.no_http||(n.re.no_http=new RegExp("^"+n.re.src_auth+"(?:localhost|(?:(?:"+n.re.src_domain+")\\.)+"+n.re.src_domain_root+")"+n.re.src_port+n.re.src_host_terminator+n.re.src_path,"i")),n.re.no_http.test(r)?t>=3&&":"===e[t-3]||t>=3&&"/"===e[t-3]?0:r.match(n.re.no_http)[0].length:0}},"mailto:":{validate:function(e,t,n){const r=e.slice(t);return n.re.mailto||(n.re.mailto=new RegExp("^"+n.re.src_email_name+"@"+n.re.src_host_strict,"i")),n.re.mailto.test(r)?r.match(n.re.mailto)[0].length:0}}},u="biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф".split("|");function d(e){const t=e.re=function(e){const t={};e=e||{},t.src_Any=r.Any.source,t.src_Cc=r.Cc.source,t.src_Z=r.Z.source,t.src_P=r.P.source,t.src_ZPCc=[t.src_Z,t.src_P,t.src_Cc].join("|"),t.src_ZCc=[t.src_Z,t.src_Cc].join("|");return t.src_pseudo_letter="(?:(?![><｜]|"+t.src_ZPCc+")"+t.src_Any+")",t.src_ip4="(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)",t.src_auth="(?:(?:(?!"+t.src_ZCc+"|[@/\\[\\]()]).)+@)?",t.src_port="(?::(?:6(?:[0-4]\\d{3}|5(?:[0-4]\\d{2}|5(?:[0-2]\\d|3[0-5])))|[1-5]?\\d{1,4}))?",t.src_host_terminator="(?=$|[><｜]|"+t.src_ZPCc+")(?!"+(e["---"]?"-(?!--)|":"-|")+"_|:\\d|\\.-|\\.(?!$|"+t.src_ZPCc+"))",t.src_path="(?:[/?#](?:(?!"+t.src_ZCc+"|[><｜]|[()[\\]{}.,\"'?!\\-;]).|\\[(?:(?!"+t.src_ZCc+"|\\]).)*\\]|\\((?:(?!"+t.src_ZCc+"|[)]).)*\\)|\\{(?:(?!"+t.src_ZCc+'|[}]).)*\\}|\\"(?:(?!'+t.src_ZCc+'|["]).)+\\"|\\\'(?:(?!'+t.src_ZCc+"|[']).)+\\'|\\'(?="+t.src_pseudo_letter+"|[-])|\\.{2,}[a-zA-Z0-9%/&]|\\.(?!"+t.src_ZCc+"|[.]|$)|"+(e["---"]?"\\-(?!--(?:[^-]|$))(?:-*)|":"\\-+|")+",(?!"+t.src_ZCc+"|$)|;(?!"+t.src_ZCc+"|$)|\\!+(?!"+t.src_ZCc+"|[!]|$)|\\?(?!"+t.src_ZCc+"|[?]|$))+|\\/)?",t.src_email_name='[\\-;:&=\\+\\$,\\.a-zA-Z0-9_][\\-;:&=\\+\\$,\\"\\.a-zA-Z0-9_]*',t.src_xn="xn--[a-z0-9\\-]{1,59}",t.src_domain_root="(?:"+t.src_xn+"|"+t.src_pseudo_letter+"{1,63})",t.src_domain="(?:"+t.src_xn+"|(?:"+t.src_pseudo_letter+")|(?:"+t.src_pseudo_letter+"(?:-|"+t.src_pseudo_letter+"){0,61}"+t.src_pseudo_letter+"))",t.src_host="(?:(?:(?:(?:"+t.src_domain+")\\.)*"+t.src_domain+"))",t.tpl_host_fuzzy="(?:"+t.src_ip4+"|(?:(?:(?:"+t.src_domain+")\\.)+(?:%TLDS%)))",t.tpl_host_no_ip_fuzzy="(?:(?:(?:"+t.src_domain+")\\.)+(?:%TLDS%))",t.src_host_strict=t.src_host+t.src_host_terminator,t.tpl_host_fuzzy_strict=t.tpl_host_fuzzy+t.src_host_terminator,t.src_host_port_strict=t.src_host+t.src_port+t.src_host_terminator,t.tpl_host_port_fuzzy_strict=t.tpl_host_fuzzy+t.src_port+t.src_host_terminator,t.tpl_host_port_no_ip_fuzzy_strict=t.tpl_host_no_ip_fuzzy+t.src_port+t.src_host_terminator,t.tpl_host_fuzzy_test="localhost|www\\.|\\.\\d{1,3}\\.|(?:\\.(?:%TLDS%)(?:"+t.src_ZPCc+"|>|$))",t.tpl_email_fuzzy='(^|[><｜]|"|\\(|'+t.src_ZCc+")("+t.src_email_name+"@"+t.tpl_host_fuzzy_strict+")",t.tpl_link_fuzzy="(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|"+t.src_ZPCc+"))((?![$+<=>^`|｜])"+t.tpl_host_port_fuzzy_strict+t.src_path+")",t.tpl_link_no_ip_fuzzy="(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|"+t.src_ZPCc+"))((?![$+<=>^`|｜])"+t.tpl_host_port_no_ip_fuzzy_strict+t.src_path+")",t}(e.__opts__),n=e.__tlds__.slice();function o(e){return e.replace("%TLDS%",t.src_tlds)}e.onCompile(),e.__tlds_replaced__||n.push("a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]"),n.push(t.src_xn),t.src_tlds=n.join("|"),t.email_fuzzy=RegExp(o(t.tpl_email_fuzzy),"i"),t.link_fuzzy=RegExp(o(t.tpl_link_fuzzy),"i"),t.link_no_ip_fuzzy=RegExp(o(t.tpl_link_no_ip_fuzzy),"i"),t.host_fuzzy_test=RegExp(o(t.tpl_host_fuzzy_test),"i");const c=[];function l(e,t){throw new Error('(LinkifyIt) Invalid schema "'+e+'": '+t)}e.__compiled__={},Object.keys(e.__schemas__).forEach(function(t){const n=e.__schemas__[t];if(null===n)return;const r={validate:null,link:null};if(e.__compiled__[t]=r,"[object Object]"===i(n))return"[object RegExp]"!==i(n.validate)?s(n.validate)?r.validate=n.validate:l(t,n):r.validate=function(e){return function(t,n){const r=t.slice(n);return e.test(r)?r.match(e)[0].length:0}}(n.validate),void(s(n.normalize)?r.normalize=n.normalize:n.normalize?l(t,n):r.normalize=function(e,t){t.normalize(e)});!function(e){return"[object String]"===i(e)}(n)?l(t,n):c.push(t)}),c.forEach(function(t){e.__compiled__[e.__schemas__[t]]&&(e.__compiled__[t].validate=e.__compiled__[e.__schemas__[t]].validate,e.__compiled__[t].normalize=e.__compiled__[e.__schemas__[t]].normalize)}),e.__compiled__[""]={validate:null,normalize:function(e,t){t.normalize(e)}};const u=Object.keys(e.__compiled__).filter(function(t){return t.length>0&&e.__compiled__[t]}).map(a).join("|");e.re.schema_test=RegExp("(^|(?!_)(?:[><｜]|"+t.src_ZPCc+"))("+u+")","i"),e.re.schema_search=RegExp("(^|(?!_)(?:[><｜]|"+t.src_ZPCc+"))("+u+")","ig"),e.re.schema_at_start=RegExp("^"+e.re.schema_search.source,"i"),e.re.pretest=RegExp("("+e.re.schema_test.source+")|("+e.re.host_fuzzy_test.source+")|@","i"),function(e){e.__index__=-1,e.__text_cache__=""}(e)}function h(e,t){const n=e.__index__,r=e.__last_index__,o=e.__text_cache__.slice(n,r);this.schema=e.__schema__.toLowerCase(),this.index=n+t,this.lastIndex=r+t,this.raw=o,this.text=o,this.url=o}function p(e,t){const n=new h(e,t);return e.__compiled__[n.schema].normalize(n,e),n}function m(e,t){if(!(this instanceof m))return new m(e,t);var n;t||(n=e,Object.keys(n||{}).reduce(function(e,t){return e||c.hasOwnProperty(t)},!1)&&(t=e,e={})),this.__opts__=o({},c,t),this.__index__=-1,this.__last_index__=-1,this.__schema__="",this.__text_cache__="",this.__schemas__=o({},l,e),this.__compiled__={},this.__tlds__=u,this.__tlds_replaced__=!1,this.re={},d(this)}m.prototype.add=function(e,t){return this.__schemas__[e]=t,d(this),this},m.prototype.set=function(e){return this.__opts__=o(this.__opts__,e),this},m.prototype.test=function(e){if(this.__text_cache__=e,this.__index__=-1,!e.length)return!1;let t,n,r,o,i,s,a,c,l;if(this.re.schema_test.test(e))for(a=this.re.schema_search,a.lastIndex=0;null!==(t=a.exec(e));)if(o=this.testSchemaAt(e,t[2],a.lastIndex),o){this.__schema__=t[2],this.__index__=t.index+t[1].length,this.__last_index__=t.index+t[0].length+o;break}return this.__opts__.fuzzyLink&&this.__compiled__["http:"]&&(c=e.search(this.re.host_fuzzy_test),c>=0&&(this.__index__<0||c<this.__index__)&&null!==(n=e.match(this.__opts__.fuzzyIP?this.re.link_fuzzy:this.re.link_no_ip_fuzzy))&&(i=n.index+n[1].length,(this.__index__<0||i<this.__index__)&&(this.__schema__="",this.__index__=i,this.__last_index__=n.index+n[0].length))),this.__opts__.fuzzyEmail&&this.__compiled__["mailto:"]&&(l=e.indexOf("@"),l>=0&&null!==(r=e.match(this.re.email_fuzzy))&&(i=r.index+r[1].length,s=r.index+r[0].length,(this.__index__<0||i<this.__index__||i===this.__index__&&s>this.__last_index__)&&(this.__schema__="mailto:",this.__index__=i,this.__last_index__=s))),this.__index__>=0},m.prototype.pretest=function(e){return this.re.pretest.test(e)},m.prototype.testSchemaAt=function(e,t,n){return this.__compiled__[t.toLowerCase()]?this.__compiled__[t.toLowerCase()].validate(e,n,this):0},m.prototype.match=function(e){const t=[];let n=0;this.__index__>=0&&this.__text_cache__===e&&(t.push(p(this,n)),n=this.__last_index__);let r=n?e.slice(n):e;for(;this.test(r);)t.push(p(this,n)),r=r.slice(this.__last_index__),n+=this.__last_index__;return t.length?t:null},m.prototype.matchAtStart=function(e){if(this.__text_cache__=e,this.__index__=-1,!e.length)return null;const t=this.re.schema_at_start.exec(e);if(!t)return null;const n=this.testSchemaAt(e,t[2],t[0].length);return n?(this.__schema__=t[2],this.__index__=t.index+t[1].length,this.__last_index__=t.index+t[0].length+n,p(this,0)):null},m.prototype.tlds=function(e,t){return e=Array.isArray(e)?e:[e],t?(this.__tlds__=this.__tlds__.concat(e).sort().filter(function(e,t,n){return e!==n[t-1]}).reverse(),d(this),this):(this.__tlds__=e.slice(),this.__tlds_replaced__=!0,d(this),this)},m.prototype.normalize=function(e){e.schema||(e.url="http://"+e.url),"mailto:"!==e.schema||/^mailto:/i.test(e.url)||(e.url="mailto:"+e.url)},m.prototype.onCompile=function(){},e.exports=m},818:function(e,t,n){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.encodeNonAsciiHTML=t.encodeHTML=void 0;var o=r(n(504)),i=n(987),s=/[\t\n!-,./:-@[-`\f{-}$\x80-\uFFFF]/g;function a(e,t){for(var n,r="",s=0;null!==(n=e.exec(t));){var a=n.index;r+=t.substring(s,a);var c=t.charCodeAt(a),l=o.default.get(c);if("object"==typeof l){if(a+1<t.length){var u=t.charCodeAt(a+1),d="number"==typeof l.n?l.n===u?l.o:void 0:l.n.get(u);if(void 0!==d){r+=d,s=e.lastIndex+=1;continue}}l=l.v}if(void 0!==l)r+=l,s=a+1;else{var h=(0,i.getCodePoint)(t,a);r+="&#x".concat(h.toString(16),";"),s=e.lastIndex+=Number(h!==c)}}return r+t.substr(s)}t.encodeHTML=function(e){return a(s,e)},t.encodeNonAsciiHTML=function(e){return a(i.xmlReplacer,e)}},835:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.formatSymposiumUrl=t.parseSymposiumUrl=void 0,t.parseSymposiumUrl=function(e){if(!e.startsWith("symposium:"))return null;const t=e.substring(10),[n,r]=t.split("?",2);if(!n)return null;const o={path:n};if(r){const e=new URLSearchParams(r),t=e.get("regex");t&&(o.regex=t);const n=e.get("line");if(n){const e=function(e){const t=e.match(/^(\d+):(\d+)-(\d+):(\d+)$/);if(t)return{type:"range-with-columns",startLine:parseInt(t[1]),startColumn:parseInt(t[2]),endLine:parseInt(t[3]),endColumn:parseInt(t[4])};const n=e.match(/^(\d+)-(\d+)$/);if(n)return{type:"range",startLine:parseInt(n[1]),endLine:parseInt(n[2])};const r=e.match(/^(\d+):(\d+)$/);if(r)return{type:"single-with-column",startLine:parseInt(r[1]),startColumn:parseInt(r[2])};const o=e.match(/^(\d+)$/);return o?{type:"single",startLine:parseInt(o[1])}:null}(n);e&&(o.line=e)}}return o},t.formatSymposiumUrl=function(e){let t=`symposium:${e.path}`;const n=new URLSearchParams;e.regex&&n.set("regex",e.regex),e.line&&n.set("line",function(e){switch(e.type){case"single":return e.startLine.toString();case"single-with-column":return`${e.startLine}:${e.startColumn}`;case"range":return`${e.startLine}-${e.endLine}`;case"range-with-columns":return`${e.startLine}:${e.startColumn}-${e.endLine}:${e.endColumn}`}}(e.line));const r=n.toString();return r&&(t+=`?${r}`),t}},878:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.decodeXML=t.decodeHTMLStrict=t.decodeHTMLAttribute=t.decodeHTML=t.determineBranch=t.EntityDecoder=t.DecodingMode=t.BinTrieFlags=t.fromCodePoint=t.replaceCodePoint=t.decodeCodePoint=t.xmlDecodeTree=t.htmlDecodeTree=void 0;var a=s(n(603));t.htmlDecodeTree=a.default;var c=s(n(517));t.xmlDecodeTree=c.default;var l=i(n(96));t.decodeCodePoint=l.default;var u,d,h,p,m=n(96);function f(e){return e>=u.ZERO&&e<=u.NINE}function g(e){return e>=u.UPPER_A&&e<=u.UPPER_F||e>=u.LOWER_A&&e<=u.LOWER_F}function b(e){return e===u.EQUALS||function(e){return e>=u.UPPER_A&&e<=u.UPPER_Z||e>=u.LOWER_A&&e<=u.LOWER_Z||f(e)}(e)}Object.defineProperty(t,"replaceCodePoint",{enumerable:!0,get:function(){return m.replaceCodePoint}}),Object.defineProperty(t,"fromCodePoint",{enumerable:!0,get:function(){return m.fromCodePoint}}),function(e){e[e.NUM=35]="NUM",e[e.SEMI=59]="SEMI",e[e.EQUALS=61]="EQUALS",e[e.ZERO=48]="ZERO",e[e.NINE=57]="NINE",e[e.LOWER_A=97]="LOWER_A",e[e.LOWER_F=102]="LOWER_F",e[e.LOWER_X=120]="LOWER_X",e[e.LOWER_Z=122]="LOWER_Z",e[e.UPPER_A=65]="UPPER_A",e[e.UPPER_F=70]="UPPER_F",e[e.UPPER_Z=90]="UPPER_Z"}(u||(u={})),function(e){e[e.VALUE_LENGTH=49152]="VALUE_LENGTH",e[e.BRANCH_LENGTH=16256]="BRANCH_LENGTH",e[e.JUMP_TABLE=127]="JUMP_TABLE"}(d=t.BinTrieFlags||(t.BinTrieFlags={})),function(e){e[e.EntityStart=0]="EntityStart",e[e.NumericStart=1]="NumericStart",e[e.NumericDecimal=2]="NumericDecimal",e[e.NumericHex=3]="NumericHex",e[e.NamedEntity=4]="NamedEntity"}(h||(h={})),function(e){e[e.Legacy=0]="Legacy",e[e.Strict=1]="Strict",e[e.Attribute=2]="Attribute"}(p=t.DecodingMode||(t.DecodingMode={}));var y=function(){function e(e,t,n){this.decodeTree=e,this.emitCodePoint=t,this.errors=n,this.state=h.EntityStart,this.consumed=1,this.result=0,this.treeIndex=0,this.excess=1,this.decodeMode=p.Strict}return e.prototype.startEntity=function(e){this.decodeMode=e,this.state=h.EntityStart,this.result=0,this.treeIndex=0,this.excess=1,this.consumed=1},e.prototype.write=function(e,t){switch(this.state){case h.EntityStart:return e.charCodeAt(t)===u.NUM?(this.state=h.NumericStart,this.consumed+=1,this.stateNumericStart(e,t+1)):(this.state=h.NamedEntity,this.stateNamedEntity(e,t));case h.NumericStart:return this.stateNumericStart(e,t);case h.NumericDecimal:return this.stateNumericDecimal(e,t);case h.NumericHex:return this.stateNumericHex(e,t);case h.NamedEntity:return this.stateNamedEntity(e,t)}},e.prototype.stateNumericStart=function(e,t){return t>=e.length?-1:(32|e.charCodeAt(t))===u.LOWER_X?(this.state=h.NumericHex,this.consumed+=1,this.stateNumericHex(e,t+1)):(this.state=h.NumericDecimal,this.stateNumericDecimal(e,t))},e.prototype.addToNumericResult=function(e,t,n,r){if(t!==n){var o=n-t;this.result=this.result*Math.pow(r,o)+parseInt(e.substr(t,o),r),this.consumed+=o}},e.prototype.stateNumericHex=function(e,t){for(var n=t;t<e.length;){var r=e.charCodeAt(t);if(!f(r)&&!g(r))return this.addToNumericResult(e,n,t,16),this.emitNumericEntity(r,3);t+=1}return this.addToNumericResult(e,n,t,16),-1},e.prototype.stateNumericDecimal=function(e,t){for(var n=t;t<e.length;){var r=e.charCodeAt(t);if(!f(r))return this.addToNumericResult(e,n,t,10),this.emitNumericEntity(r,2);t+=1}return this.addToNumericResult(e,n,t,10),-1},e.prototype.emitNumericEntity=function(e,t){var n;if(this.consumed<=t)return null===(n=this.errors)||void 0===n||n.absenceOfDigitsInNumericCharacterReference(this.consumed),0;if(e===u.SEMI)this.consumed+=1;else if(this.decodeMode===p.Strict)return 0;return this.emitCodePoint((0,l.replaceCodePoint)(this.result),this.consumed),this.errors&&(e!==u.SEMI&&this.errors.missingSemicolonAfterCharacterReference(),this.errors.validateNumericCharacterReference(this.result)),this.consumed},e.prototype.stateNamedEntity=function(e,t){for(var n=this.decodeTree,r=n[this.treeIndex],o=(r&d.VALUE_LENGTH)>>14;t<e.length;t++,this.excess++){var i=e.charCodeAt(t);if(this.treeIndex=k(n,r,this.treeIndex+Math.max(1,o),i),this.treeIndex<0)return 0===this.result||this.decodeMode===p.Attribute&&(0===o||b(i))?0:this.emitNotTerminatedNamedEntity();if(0!=(o=((r=n[this.treeIndex])&d.VALUE_LENGTH)>>14)){if(i===u.SEMI)return this.emitNamedEntityData(this.treeIndex,o,this.consumed+this.excess);this.decodeMode!==p.Strict&&(this.result=this.treeIndex,this.consumed+=this.excess,this.excess=0)}}return-1},e.prototype.emitNotTerminatedNamedEntity=function(){var e,t=this.result,n=(this.decodeTree[t]&d.VALUE_LENGTH)>>14;return this.emitNamedEntityData(t,n,this.consumed),null===(e=this.errors)||void 0===e||e.missingSemicolonAfterCharacterReference(),this.consumed},e.prototype.emitNamedEntityData=function(e,t,n){var r=this.decodeTree;return this.emitCodePoint(1===t?r[e]&~d.VALUE_LENGTH:r[e+1],n),3===t&&this.emitCodePoint(r[e+2],n),n},e.prototype.end=function(){var e;switch(this.state){case h.NamedEntity:return 0===this.result||this.decodeMode===p.Attribute&&this.result!==this.treeIndex?0:this.emitNotTerminatedNamedEntity();case h.NumericDecimal:return this.emitNumericEntity(0,2);case h.NumericHex:return this.emitNumericEntity(0,3);case h.NumericStart:return null===(e=this.errors)||void 0===e||e.absenceOfDigitsInNumericCharacterReference(this.consumed),0;case h.EntityStart:return 0}},e}();function C(e){var t="",n=new y(e,function(e){return t+=(0,l.fromCodePoint)(e)});return function(e,r){for(var o=0,i=0;(i=e.indexOf("&",i))>=0;){t+=e.slice(o,i),n.startEntity(r);var s=n.write(e,i+1);if(s<0){o=i+n.end();break}o=i+s,i=0===s?o+1:o}var a=t+e.slice(o);return t="",a}}function k(e,t,n,r){var o=(t&d.BRANCH_LENGTH)>>7,i=t&d.JUMP_TABLE;if(0===o)return 0!==i&&r===i?n:-1;if(i){var s=r-i;return s<0||s>=o?-1:e[n+s]-1}for(var a=n,c=a+o-1;a<=c;){var l=a+c>>>1,u=e[l];if(u<r)a=l+1;else{if(!(u>r))return e[l+o];c=l-1}}return-1}t.EntityDecoder=y,t.determineBranch=k;var v=C(a.default),_=C(c.default);t.decodeHTML=function(e,t){return void 0===t&&(t=p.Legacy),v(e,t)},t.decodeHTMLAttribute=function(e){return v(e,p.Attribute)},t.decodeHTMLStrict=function(e){return v(e,p.Strict)},t.decodeXML=function(e){return _(e,p.Strict)}},928:e=>{e.exports=require("path")},982:e=>{e.exports=require("crypto")},987:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.escapeText=t.escapeAttribute=t.escapeUTF8=t.escape=t.encodeXML=t.getCodePoint=t.xmlReplacer=void 0,t.xmlReplacer=/["&'<>$\x80-\uFFFF]/g;var n=new Map([[34,"&quot;"],[38,"&amp;"],[39,"&apos;"],[60,"&lt;"],[62,"&gt;"]]);function r(e){for(var r,o="",i=0;null!==(r=t.xmlReplacer.exec(e));){var s=r.index,a=e.charCodeAt(s),c=n.get(a);void 0!==c?(o+=e.substring(i,s)+c,i=s+1):(o+="".concat(e.substring(i,s),"&#x").concat((0,t.getCodePoint)(e,s).toString(16),";"),i=t.xmlReplacer.lastIndex+=Number(55296==(64512&a)))}return o+e.substr(i)}function o(e,t){return function(n){for(var r,o=0,i="";r=e.exec(n);)o!==r.index&&(i+=n.substring(o,r.index)),i+=t.get(r[0].charCodeAt(0)),o=r.index+1;return i+n.substring(o)}}t.getCodePoint=null!=String.prototype.codePointAt?function(e,t){return e.codePointAt(t)}:function(e,t){return 55296==(64512&e.charCodeAt(t))?1024*(e.charCodeAt(t)-55296)+e.charCodeAt(t+1)-56320+65536:e.charCodeAt(t)},t.encodeXML=r,t.escape=r,t.escapeUTF8=o(/[&<>'"]/g,n),t.escapeAttribute=o(/["&\u00A0]/g,new Map([[34,"&quot;"],[38,"&amp;"],[160,"&nbsp;"]])),t.escapeText=o(/[&<>\u00A0]/g,new Map([[38,"&amp;"],[60,"&lt;"],[62,"&gt;"],[160,"&nbsp;"]]))}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={exports:{}};return e[r].call(i.exports,i,i.exports,n),i.exports}n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};(()=>{var e=r;Object.defineProperty(e,"__esModule",{value:!0}),e.deactivate=e.activate=e.DaemonClient=void 0;const t=n(398),o=n(278),i=n(928),s=n(982),a=n(512),c=n(439),l=n(806);class u{constructor(e,t,n,r){this.context=e,this.outputChannel=t,this.syntheticPRProvider=n,this.walkthroughProvider=r,this.socket=null,this.reconnectTimer=null,this.isDisposed=!1,this.buffer="",this.RECONNECT_INTERVAL_MS=5e3,this.activeTerminals=new Set,this.pendingFeedbackResolvers=new Map}start(){this.outputChannel.appendLine("Starting daemon client..."),this.connectToDaemon()}connectToDaemon(){if(this.isDisposed)return;const e=this.getDaemonSocketPath();this.outputChannel.appendLine(`Attempting to connect to daemon: ${e}`),this.socket=new o.Socket,this.setupSocketHandlers(),this.socket.on("connect",()=>{this.outputChannel.appendLine("✅ Connected to message bus daemon"),this.clearReconnectTimer(),this.sendMarco()}),this.socket.on("error",e=>{this.outputChannel.appendLine(`Daemon connection failed: ${e.message} (will retry in ${this.RECONNECT_INTERVAL_MS/1e3}s)`),this.scheduleReconnect()}),this.socket.on("close",()=>{this.outputChannel.appendLine("Daemon connection closed, reconnecting..."),this.scheduleReconnect()}),this.socket.connect(e)}setupSocketHandlers(){this.socket&&this.socket.on("data",e=>{this.buffer+=e.toString();let t=this.buffer.split("\n");this.buffer=t.pop()||"";for(const e of t)if(e.trim())try{const t=JSON.parse(e);this.outputChannel.appendLine(`Received message: ${t.type} (${t.id})`),this.handleIncomingMessage(t).catch(e=>{this.outputChannel.appendLine(`Error handling message: ${e}`)})}catch(e){const t=`Failed to parse message: ${e}`;this.outputChannel.appendLine(t),console.error(t)}})}async handleIncomingMessage(e){if(0===e.shellPid||await this.isMessageForOurWindow(e.shellPid))if("present_walkthrough"===e.type)try{const t=e.payload;this.outputChannel.appendLine(`Received walkthrough with base_uri: ${t.base_uri}`),this.outputChannel.appendLine(`Content length: ${t.content.length} chars`),t.base_uri&&this.walkthroughProvider.setBaseUri(t.base_uri),this.walkthroughProvider.showWalkthroughHtml(t.content),this.sendResponse(e.id,{success:!0})}catch(t){this.outputChannel.appendLine(`Error handling present_walkthrough: ${t}`),this.sendResponse(e.id,{success:!1,error:t instanceof Error?t.message:String(t)})}else if("get_selection"===e.type)try{const t=this.getCurrentSelection();this.sendResponse(e.id,{success:!0,data:t})}catch(t){this.outputChannel.appendLine(`Error handling get_selection: ${t}`),this.sendResponse(e.id,{success:!1,error:t instanceof Error?t.message:String(t)})}else if("log"===e.type)try{const t=e.payload,n=t.level.toUpperCase();this.outputChannel.appendLine(`[${n}] ${t.message}`)}catch(e){this.outputChannel.appendLine(`Error handling log message: ${e}`)}else if("polo"===e.type)try{this.outputChannel.appendLine(`[DISCOVERY] MCP server connected in terminal PID ${e.shellPid}`),this.activeTerminals.add(e.shellPid),this.outputChannel.appendLine(`[REGISTRY] Active terminals: [${Array.from(this.activeTerminals).join(", ")}]`)}catch(e){this.outputChannel.appendLine(`Error handling polo message: ${e}`)}else if("goodbye"===e.type)try{this.outputChannel.appendLine(`[DISCOVERY] MCP server disconnected from terminal PID ${e.shellPid}`),this.activeTerminals.delete(e.shellPid),this.outputChannel.appendLine(`[REGISTRY] Active terminals: [${Array.from(this.activeTerminals).join(", ")}]`)}catch(e){this.outputChannel.appendLine(`Error handling goodbye message: ${e}`)}else if("marco"===e.type);else if("resolve_symbol_by_name"===e.type)try{const t=e.payload;this.outputChannel.appendLine(`[LSP] Resolving symbol: ${t.name}`);const n=await this.resolveSymbolByName(t.name);this.sendResponse(e.id,{success:!0,data:n})}catch(t){this.outputChannel.appendLine(`Error handling resolve_symbol_by_name: ${t}`),this.sendResponse(e.id,{success:!1,error:t instanceof Error?t.message:String(t)})}else if("find_all_references"===e.type)try{const t=e.payload;this.outputChannel.appendLine(`[LSP] Finding references for symbol: ${t.symbol.name}`);const n=await this.findAllReferences(t.symbol);this.sendResponse(e.id,{success:!0,data:n})}catch(t){this.outputChannel.appendLine(`Error handling find_all_references: ${t}`),this.sendResponse(e.id,{success:!1,error:t instanceof Error?t.message:String(t)})}else if("create_synthetic_pr"===e.type){const t=Date.now();this.outputChannel.appendLine(`[SYNTHETIC PR] ${Date.now()-t}ms: Received create_synthetic_pr message`);try{const n=e.payload;this.outputChannel.appendLine(`[SYNTHETIC PR] ${Date.now()-t}ms: Creating PR: ${n.title}`),this.outputChannel.appendLine(`[SYNTHETIC PR] ${Date.now()-t}ms: Calling syntheticPRProvider.createSyntheticPR`),await this.syntheticPRProvider.createSyntheticPR(n),this.outputChannel.appendLine(`[SYNTHETIC PR] ${Date.now()-t}ms: syntheticPRProvider.createSyntheticPR completed`),this.outputChannel.appendLine(`[SYNTHETIC PR] ${Date.now()-t}ms: Collecting user feedback`);const r=await this.collectUserFeedback(n.review_id);this.outputChannel.appendLine(`[SYNTHETIC PR] ${Date.now()-t}ms: User feedback collected`),this.outputChannel.appendLine(`[SYNTHETIC PR] ${Date.now()-t}ms: Sending feedback response`),this.sendResponse(e.id,{success:!0,data:r}),this.outputChannel.appendLine(`[SYNTHETIC PR] ${Date.now()-t}ms: Feedback response sent`)}catch(t){this.outputChannel.appendLine(`Error handling create_synthetic_pr: ${t}`),this.sendResponse(e.id,{success:!1,error:t instanceof Error?t.message:String(t)})}}else if("update_synthetic_pr"===e.type)try{const t=e.payload;this.outputChannel.appendLine(`[SYNTHETIC PR] Updating PR: ${t.review_id}`),await this.syntheticPRProvider.updateSyntheticPR(t);const n=await this.collectUserFeedback(t.review_id);this.sendResponse(e.id,{success:!0,data:n})}catch(t){this.outputChannel.appendLine(`Error handling update_synthetic_pr: ${t}`),this.sendResponse(e.id,{success:!1,error:t instanceof Error?t.message:String(t)})}else"response"===e.type||0!==e.shellPid&&this.outputChannel.appendLine(`Received unknown message type: ${e.type} (ignoring for forward compatibility)`)}extractShellPidFromMessage(e){return e.shellPid||null}async isMessageForOurWindow(e){try{const n=t.window.terminals;for(const t of n)try{if(await t.processId===e)return this.outputChannel.appendLine(`Debug: shell PID ${e} is in our window`),!0}catch(e){continue}return this.outputChannel.appendLine(`Debug: shell PID ${e} is not in our window`),!1}catch(e){return this.outputChannel.appendLine(`Error checking if message is for our window: ${e}`),!0}}getCurrentSelection(){const e=t.window.activeTextEditor;if(!e)return{selectedText:null,message:"No active editor found"};const n=e.selection;if(n.isEmpty)return{selectedText:null,filePath:e.document.fileName,documentLanguage:e.document.languageId,isUntitled:e.document.isUntitled,message:"No text selected in active editor"};const r=e.document.getText(n),o=n.start.line+1,i=n.start.character+1,s=n.end.line+1,a=n.end.character+1;return{selectedText:r,filePath:e.document.fileName,startLine:o,startColumn:i,endLine:s,endColumn:a,lineNumber:o===s?o:void 0,documentLanguage:e.document.languageId,isUntitled:e.document.isUntitled,message:`Selected ${r.length} characters from ${o===s?`line ${o}, columns ${i}-${a}`:`lines ${o}:${i} to ${s}:${a}`}`}}handleCommentFeedback(e,n,r){const o=this.currentReviewId;if(!o)return void t.window.showErrorMessage("No active review found");const i=this.pendingFeedbackResolvers.get(o);i?(i({feedback_type:"comment",review_id:o,comment_text:e,file_path:n,line_number:r}),this.syntheticPRProvider.clearPR(),this.pendingFeedbackResolvers.delete(o)):t.window.showErrorMessage("No pending feedback request found")}handleReviewAction(e){const n=this.currentReviewId;if(!n)return void t.window.showErrorMessage("No active review found");const r=this.pendingFeedbackResolvers.get(n);r?this.handleSpecificAction(e,n,r):t.window.showErrorMessage("No pending feedback request found")}async handleSpecificAction(e,n,r){r("comment"===e?{feedback_type:"comment",review_id:n,comment_text:await t.window.showInputBox({prompt:"Enter your comment",placeHolder:"Type your comment here...",ignoreFocusOut:!0})||"",file_path:"review",line_number:1}:"request_changes"===e||"checkpoint"===e?{feedback_type:"complete_review",review_id:n,completion_action:e,additional_notes:await t.window.showInputBox({prompt:"Any additional notes? (optional)",placeHolder:"Additional instructions or context...",ignoreFocusOut:!0})}:{feedback_type:"complete_review",review_id:n,completion_action:"return"}),this.syntheticPRProvider.clearPR(),this.pendingFeedbackResolvers.delete(n)}async collectUserFeedback(e){return this.currentReviewId=e,t.commands.executeCommand("symposium.showReview"),new Promise(t=>{this.pendingFeedbackResolvers.set(e,t)})}sendResponse(e,t){if(!this.socket||this.socket.destroyed)return void this.outputChannel.appendLine("Cannot send response - socket not connected");const n={type:"response",payload:t,id:e,shellPid:0};try{this.socket.write(JSON.stringify(n)+"\n")}catch(e){this.outputChannel.appendLine(`Failed to send response: ${e}`)}}async sendReferenceToActiveShell(e,n){const r=t.window.terminals;if(0===r.length)return void t.window.showWarningMessage("No terminals found. Please open a terminal with an active AI assistant.");const o=this.getActiveTerminals();if(this.outputChannel.appendLine(`Active MCP server terminals: [${Array.from(o).join(", ")}]`),0===o.size)return void t.window.showWarningMessage("No terminals with active MCP servers found. Please ensure you have a terminal with an active AI assistant (like Q chat or Claude CLI) running.");const i=(await Promise.all(r.map(async e=>{const t=await e.processId;return{terminal:e,shellPID:t,isAiEnabled:t&&o.has(t)}}))).filter(e=>e.isAiEnabled).map(e=>({terminal:e.terminal,shellPID:e.shellPID}));if(0!==i.length){if(1===i.length){const{shellPID:t}=i[0];return void(t&&(this.sendStoreReferenceToShell(t,e,n),this.outputChannel.appendLine(`Reference ${e} sent to shell ${t}`)))}for(const{shellPID:t}of i)t&&(this.sendStoreReferenceToShell(t,e,n),this.outputChannel.appendLine(`Reference ${e} sent to shell ${t}`))}else t.window.showWarningMessage("No AI-enabled terminals found. Please ensure you have a terminal with an active MCP server running.")}sendStoreReferenceToShell(e,t,n){if(!this.socket||this.socket.destroyed)return void this.outputChannel.appendLine("Cannot send store_reference - socket not connected");const r={shellPid:e,type:"store_reference",payload:{key:t,value:n},id:s.randomUUID()};try{this.socket.write(JSON.stringify(r)+"\n"),this.outputChannel.appendLine(`[REFERENCE] Stored reference ${t} for shell ${e}`)}catch(t){this.outputChannel.appendLine(`Failed to send store_reference to shell ${e}: ${t}`)}}sendStoreReference(e,t){if(this.socket&&!this.socket.destroyed)for(const n of this.activeTerminals){const r={shellPid:n,type:"store_reference",payload:{key:e,value:t},id:s.randomUUID()};try{this.socket.write(JSON.stringify(r)+"\n"),this.outputChannel.appendLine(`[REFERENCE] Stored reference ${e} for shell ${n}`)}catch(e){this.outputChannel.appendLine(`Failed to send store_reference to shell ${n}: ${e}`)}}else this.outputChannel.appendLine("Cannot send store_reference - socket not connected")}sendMarco(){if(!this.socket||this.socket.destroyed)return void this.outputChannel.appendLine("Cannot send Marco - socket not connected");const e={type:"marco",payload:{},id:s.randomUUID()};try{this.socket.write(JSON.stringify(e)+"\n"),this.outputChannel.appendLine("[DISCOVERY] Sent Marco broadcast to discover MCP servers")}catch(e){this.outputChannel.appendLine(`Failed to send Marco: ${e}`)}}getDaemonSocketPath(){return`/tmp/symposium-daemon-${h(this.outputChannel)||(()=>(this.outputChannel.appendLine("Warning: Could not discover VSCode PID, using fallback"),s.randomUUID()))()}.sock`}scheduleReconnect(){this.isDisposed||(this.clearReconnectTimer(),this.reconnectTimer=setTimeout(()=>{this.connectToDaemon()},this.RECONNECT_INTERVAL_MS))}clearReconnectTimer(){this.reconnectTimer&&(clearTimeout(this.reconnectTimer),this.reconnectTimer=null)}async resolveSymbolByName(e){try{const n=await t.commands.executeCommand("vscode.executeWorkspaceSymbolProvider",e);return n&&0!==n.length?n.map(e=>this.vscodeSymbolToSymbolDef(e)):[]}catch(e){throw this.outputChannel.appendLine(`Error in resolveSymbolByName: ${e}`),e}}vscodeSymbolToSymbolDef(e){e.location;let n={name:e.name,definedAt:this.vscodeLocationToRange(e.location)};switch(e.kind){case t.SymbolKind.File:n.kind="File";break;case t.SymbolKind.Module:n.kind="Module";break;case t.SymbolKind.Namespace:n.kind="Namespace";break;case t.SymbolKind.Package:n.kind="Package";break;case t.SymbolKind.Class:n.kind="Class";break;case t.SymbolKind.Method:n.kind="Method";break;case t.SymbolKind.Property:n.kind="Property";break;case t.SymbolKind.Field:n.kind="Field";break;case t.SymbolKind.Constructor:n.kind="Constructor";break;case t.SymbolKind.Enum:n.kind="Enum";break;case t.SymbolKind.Interface:n.kind="Interface";break;case t.SymbolKind.Function:n.kind="Function";break;case t.SymbolKind.Variable:n.kind="Variable";break;case t.SymbolKind.Constant:n.kind="Constant";break;case t.SymbolKind.String:n.kind="String";break;case t.SymbolKind.Number:n.kind="Number";break;case t.SymbolKind.Boolean:n.kind="Boolean";break;case t.SymbolKind.Array:n.kind="Array";break;case t.SymbolKind.Object:n.kind="Object";break;case t.SymbolKind.Key:n.kind="Key";break;case t.SymbolKind.Null:n.kind="Null";break;case t.SymbolKind.EnumMember:n.kind="EnumMember";break;case t.SymbolKind.Struct:n.kind="Struct";break;case t.SymbolKind.Event:n.kind="Event";break;case t.SymbolKind.Operator:n.kind="Operator";break;case t.SymbolKind.TypeParameter:n.kind="TypeParameter"}return n}vscodeLocationToRange(e){return{path:e.uri.fsPath,start:{line:e.range.start.line+1,column:e.range.start.character+1},end:{line:e.range.end.line+1,column:e.range.end.character+1}}}async findAllReferences(e){try{const n=t.workspace.workspaceFolders?.[0];if(!n)throw new Error("No workspace folder found");return this.outputChannel.appendLine(`workspaceFolder.uri: ${n.uri}`),this.outputChannel.appendLine(`symbol.definedAt.path: ${e.definedAt.path}`),(await t.commands.executeCommand("vscode.executeReferenceProvider",t.Uri.file(i.isAbsolute(e.definedAt.path)?e.definedAt.path:i.resolve(n.uri.fsPath,e.definedAt.path)),new t.Position(e.definedAt.start.line-1,e.definedAt.start.column-1))).map(e=>this.vscodeLocationToRange(e))}catch(e){throw this.outputChannel.appendLine(`Error in findAllReferences: ${e}`),e}}dispose(){this.isDisposed=!0,this.clearReconnectTimer(),this.socket&&(this.socket.destroy(),this.socket=null),this.outputChannel.appendLine("Daemon client disposed")}getActiveTerminals(){return new Set(this.activeTerminals)}}async function d(e){e.appendLine("=== PID DISCOVERY TESTING ==="),e.appendLine(`Extension process PID: ${process.pid}`),e.appendLine(`Extension parent PID: ${process.ppid}`);const n=h(e);n?e.appendLine(`Found VSCode PID: ${n}`):e.appendLine("Could not find VSCode PID");const r=t.window.terminals;e.appendLine(`Found ${r.length} terminals:`);for(let t=0;t<r.length;t++){const n=r[t];try{const r=await n.processId;e.appendLine(`  Terminal ${t}: name="${n.name}", PID=${r}`)}catch(r){e.appendLine(`  Terminal ${t}: name="${n.name}", PID=<error: ${r}>`)}}t.window.onDidOpenTerminal(async t=>{try{const n=await t.processId;e.appendLine(`NEW TERMINAL: name="${t.name}", PID=${n}`)}catch(n){e.appendLine(`NEW TERMINAL: name="${t.name}", PID=<error: ${n}>`)}}),e.appendLine("=== END PID DISCOVERY ===")}function h(e){const{execSync:t}=n(317);try{let n=process.pid;for(let r=0;r<10;r++)try{const r=t(`ps -p ${n} -o pid,ppid,comm,args`,{encoding:"utf8"}).trim().split("\n");if(r.length<2)break;const o=r[1].trim().split(/\s+/),i=parseInt(o[0]),s=parseInt(o[1]),a=o.slice(3).join(" ");if((a.includes("Visual Studio Code")||a.includes("Code.app")||a.includes("Electron"))&&!a.includes("Code Helper"))return e.appendLine(`Found VSCode PID: ${i}`),i;if(n=s,s<=1)break}catch(e){break}return e.appendLine("Could not find VSCode PID in process tree"),null}catch(t){return e.appendLine(`PID discovery error: ${t}`),null}}e.DaemonClient=u,e.activate=function(e){const n=t.window.createOutputChannel("Symposium");n.appendLine("Symposium extension is now active"),console.log("Symposium extension is now active");const r=new l.Bus(e,n);d(n).catch(e=>{n.appendLine(`Error in PID discovery: ${e}`)});const o=new a.SyntheticPRProvider(e);r.setSyntheticPRProvider(o);const i=new c.WalkthroughWebviewProvider(e.extensionUri,r);r.setWalkthroughProvider(i),e.subscriptions.push(t.window.registerWebviewViewProvider(c.WalkthroughWebviewProvider.viewType,i));const s=t.commands.registerCommand("symposium.addWalkthroughComment",e=>i.handleCommentSubmission(e));e.subscriptions.push(s),console.log("Webview provider created successfully");const h=new u(e,n,o,i);r.setDaemonClient(h),h.start(),o.setCommentCallback((e,t,n)=>{h.handleCommentFeedback(e,t,n)}),function(e){const{context:n,outputChannel:r}=e;r.appendLine("Setting up universal selection detection...");let o=null;const i=t.window.onDidChangeTextEditorSelection(e=>{if(e.selections.length>0&&!e.selections[0].isEmpty){const t=e.selections[0];o={editor:e.textEditor,selection:t}}else o=null}),s=t.languages.registerCodeActionsProvider("*",{provideCodeActions(e,n,r){if(!n.isEmpty){const e=new t.CodeAction("Ask Socratic Shell",t.CodeActionKind.QuickFix);return e.command={command:"symposium.chatAboutSelection",title:"Ask Socratic Shell"},e.isPreferred=!0,[e]}return[]}},{providedCodeActionKinds:[t.CodeActionKind.QuickFix]}),a=t.commands.registerCommand("symposium.chatAboutSelection",async()=>{if(o){const n=o.editor.document.getText(o.selection),i=o.editor.document.fileName,s=o.selection.start.line+1,a=o.selection.start.character+1,c=o.selection.end.line+1,l=o.selection.end.character+1;r.appendLine("CHAT ICON CLICKED!"),r.appendLine(`Selected: "${n}"`),r.appendLine(`Location: ${i}:${s}:${a}-${c}:${l}`);try{const o=t.workspace.asRelativePath(i),u={relativePath:o,selectionRange:{start:{line:s,column:a},end:{line:c,column:l}},selectedText:n};await e.sendToActiveTerminal(u,{includeNewline:!1}),r.appendLine(`Compact reference sent for ${o}:${s}`)}catch(e){r.appendLine(`Failed to send reference: ${e}`),t.window.showErrorMessage("Failed to send reference to terminal")}}else r.appendLine("Chat action triggered but no current selection found")});n.subscriptions.push(i,s,a),r.appendLine("Selection detection with Code Actions setup complete")}(r);const p=t.commands.registerCommand("symposium.showReview",()=>{t.commands.executeCommand("symposium.walkthrough.focus")}),m=t.commands.registerCommand("symposium.reviewAction",e=>{h.handleReviewAction(e)}),f=t.commands.registerCommand("symposium.copyReview",()=>{t.window.showInformationMessage("Use the Copy Review button in the review panel")}),g=t.commands.registerCommand("symposium.logPIDs",async()=>{n.show(),await d(n),t.window.showInformationMessage("PID information logged to Symposium output channel")});return e.subscriptions.push(p,m,f,g,o,h),{getActiveTerminals:()=>h.getActiveTerminals()}},e.deactivate=function(){}})(),module.exports=r})();
//# sourceMappingURL=extension.js.map