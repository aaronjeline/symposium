name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
          symposium/mcp-server/target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
          
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: symposium/vscode-extension/package-lock.json
        
    - name: Cache Node.js dependencies
      uses: actions/cache@v4
      with:
        path: symposium/vscode-extension/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('symposium/vscode-extension/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
          
    - name: Run CI build
      run: cargo setup --ci
      
    - name: Run Rust tests
      run: cargo test --workspace
      
    - name: Run TypeScript tests (if they exist)
      run: |
        cd symposium/vscode-extension
        if [ -f "package.json" ] && grep -q '"test"' package.json; then
          npm test
        else
          echo "No TypeScript tests found, skipping"
        fi
        
    - name: Run Swift tests (if they exist)
      if: runner.os == 'macOS'
      run: |
        cd symposium/macos-app
        if [ -d "Tests" ]; then
          swift test
        else
          echo "No Swift tests found, skipping"
        fi
